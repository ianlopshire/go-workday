package hr

import (
	"bytes"
	"encoding/base64"
	"encoding/xml"
	"time"
)

// Academic Appointee Data
type AcademicAppointeeDataType struct {
	PersonData               *PersonNameDataType                   `xml:"urn:com.workday/bsvc Person_Data,omitempty"`
	PersonIdentificationData *PersonIdentificationDataType         `xml:"urn:com.workday/bsvc Person_Identification_Data,omitempty"`
	PersonalInformationData  *GenericPersonalInformationDataType   `xml:"urn:com.workday/bsvc Personal_Information_Data,omitempty"`
	PersonPhotoData          *PersonPhotoDataType                  `xml:"urn:com.workday/bsvc Person_Photo_Data,omitempty"`
	AppointmentData          []AcademicAppointmentSnapshotDataType `xml:"urn:com.workday/bsvc Appointment_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicAppointeeEnabledObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicAppointeeEnabledObjectType struct {
	ID         []AcademicAppointeeEnabledObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Academic Appointee Request Criteria
type AcademicAppointeeRequestCriteriaType struct {
	ByAcademicTrackTypeReference []AcademicTrackTypeObjectType `xml:"urn:com.workday/bsvc By_Academic_Track_Type_Reference,omitempty"`
	ByWorker                     *bool                         `xml:"urn:com.workday/bsvc By_Worker,omitempty"`
	ByAffiliate                  *bool                         `xml:"urn:com.workday/bsvc By_Affiliate,omitempty"`
	ByStudent                    *bool                         `xml:"urn:com.workday/bsvc By_Student,omitempty"`
	ByActiveRole                 *bool                         `xml:"urn:com.workday/bsvc By_Active_Role,omitempty"`
}

// Academic Appointee Request References
type AcademicAppointeeRequestReferencesType struct {
	AcademicAppointeeReference []AcademicAppointeeEnabledObjectType `xml:"urn:com.workday/bsvc Academic_Appointee_Reference"`
}

// Academic Appointee Response Data
type AcademicAppointeeResponseDataType struct {
	AcademicAppointee []AcademicAppointeeType `xml:"urn:com.workday/bsvc Academic_Appointee,omitempty"`
}

// Academic Appointee Response Group
type AcademicAppointeeResponseGroupType struct {
	IncludeReference                *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludePersonNameData           *bool `xml:"urn:com.workday/bsvc Include_Person_Name_Data,omitempty"`
	IncludePersonIdentificationData *bool `xml:"urn:com.workday/bsvc Include_Person_Identification_Data,omitempty"`
	IncludePersonalInformationData  *bool `xml:"urn:com.workday/bsvc Include_Personal_Information_Data,omitempty"`
	IncludePhotoData                *bool `xml:"urn:com.workday/bsvc Include_Photo_Data,omitempty"`
	IncludeAppointmentData          *bool `xml:"urn:com.workday/bsvc Include_Appointment_Data,omitempty"`
}

// Academic Appointee
type AcademicAppointeeType struct {
	AcademicAppointeeReference []AcademicAppointeeEnabledObjectType `xml:"urn:com.workday/bsvc Academic_Appointee_Reference,omitempty"`
	AcademicAppointeeData      *AcademicAppointeeDataType           `xml:"urn:com.workday/bsvc Academic_Appointee_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicAppointmentIdentifierObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicAppointmentIdentifierObjectType struct {
	ID         []AcademicAppointmentIdentifierObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Top-level response element for Academic Appointment business process operations.
type AcademicAppointmentResponseType struct {
	EventReference                    *UniqueIdentifierObjectType         `xml:"urn:com.workday/bsvc Event_Reference,omitempty"`
	AcademicAppointeeReference        *AcademicAppointeeEnabledObjectType `xml:"urn:com.workday/bsvc Academic_Appointee_Reference,omitempty"`
	AcademicAppointmentTrackReference *AcademicAppointmentTrackObjectType `xml:"urn:com.workday/bsvc Academic_Appointment_Track_Reference,omitempty"`
	Version                           string                              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicAppointmentSetObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicAppointmentSetObjectType struct {
	ID         []AcademicAppointmentSetObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element containing the specifics for the academic appointment being  added or updated. An academic appointment tracks an academic workerâ€™s time at a university or college.
type AcademicAppointmentSnapshotDataType struct {
	AcademicAppointmentTrackReference *AcademicAppointmentTrackObjectType      `xml:"urn:com.workday/bsvc Academic_Appointment_Track_Reference,omitempty"`
	AppointmentTrackID                string                                   `xml:"urn:com.workday/bsvc Appointment_Track_ID,omitempty"`
	TrackTypeReference                *AcademicTrackTypeObjectType             `xml:"urn:com.workday/bsvc Track_Type_Reference,omitempty"`
	AppointmentIdentifierReference    *AcademicAppointmentIdentifierObjectType `xml:"urn:com.workday/bsvc Appointment_Identifier_Reference"`
	PositionReference                 *PositionElementObjectType               `xml:"urn:com.workday/bsvc Position_Reference,omitempty"`
	AcademicUnitReference             *AcademicUnitObjectType                  `xml:"urn:com.workday/bsvc Academic_Unit_Reference"`
	RosterPercent                     float64                                  `xml:"urn:com.workday/bsvc Roster_Percent,omitempty"`
	AppointmentStartDate              time.Time                                `xml:"urn:com.workday/bsvc Appointment_Start_Date"`
	AppointmentEndDate                *time.Time                               `xml:"urn:com.workday/bsvc Appointment_End_Date,omitempty"`
	TrackStartDateOverride            *time.Time                               `xml:"urn:com.workday/bsvc Track_Start_Date_Override,omitempty"`
	RankReference                     *AcademicRankObjectType                  `xml:"urn:com.workday/bsvc Rank_Reference,omitempty"`
	NamedProfessorshipReference       *NamedProfessorshipObjectType            `xml:"urn:com.workday/bsvc Named_Professorship_Reference,omitempty"`
	AppointmentSpecialtyReference     *AppointmentSpecialtyObjectType          `xml:"urn:com.workday/bsvc Appointment_Specialty_Reference,omitempty"`
	ConstructedTitle                  string                                   `xml:"urn:com.workday/bsvc Constructed_Title,omitempty"`
	AppointmentTitle                  string                                   `xml:"urn:com.workday/bsvc Appointment_Title"`
	AdjustedTitleStartDate            *time.Time                               `xml:"urn:com.workday/bsvc Adjusted_Title_Start_Date,omitempty"`
	AcademicReviewDate                *time.Time                               `xml:"urn:com.workday/bsvc Academic_Review_Date,omitempty"`
	RelatedAcademicUnitReference      *AcademicUnitObjectType                  `xml:"urn:com.workday/bsvc Related_Academic_Unit_Reference,omitempty"`
	TenureHomeReference               *AcademicUnitObjectType                  `xml:"urn:com.workday/bsvc Tenure_Home_Reference,omitempty"`
	TenureStatusReference             *AcademicTenureStatusObjectType          `xml:"urn:com.workday/bsvc Tenure_Status_Reference,omitempty"`
	ProbationaryEndDate               *time.Time                               `xml:"urn:com.workday/bsvc Probationary_End_Date,omitempty"`
	TenureAwardDate                   *time.Time                               `xml:"urn:com.workday/bsvc Tenure_Award_Date,omitempty"`
}

func (t *AcademicAppointmentSnapshotDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AcademicAppointmentSnapshotDataType
	var layout struct {
		*T
		AppointmentStartDate   *xsdDate `xml:"urn:com.workday/bsvc Appointment_Start_Date"`
		AppointmentEndDate     *xsdDate `xml:"urn:com.workday/bsvc Appointment_End_Date,omitempty"`
		TrackStartDateOverride *xsdDate `xml:"urn:com.workday/bsvc Track_Start_Date_Override,omitempty"`
		AdjustedTitleStartDate *xsdDate `xml:"urn:com.workday/bsvc Adjusted_Title_Start_Date,omitempty"`
		AcademicReviewDate     *xsdDate `xml:"urn:com.workday/bsvc Academic_Review_Date,omitempty"`
		ProbationaryEndDate    *xsdDate `xml:"urn:com.workday/bsvc Probationary_End_Date,omitempty"`
		TenureAwardDate        *xsdDate `xml:"urn:com.workday/bsvc Tenure_Award_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AppointmentStartDate = (*xsdDate)(&layout.T.AppointmentStartDate)
	layout.AppointmentEndDate = (*xsdDate)(layout.T.AppointmentEndDate)
	layout.TrackStartDateOverride = (*xsdDate)(layout.T.TrackStartDateOverride)
	layout.AdjustedTitleStartDate = (*xsdDate)(layout.T.AdjustedTitleStartDate)
	layout.AcademicReviewDate = (*xsdDate)(layout.T.AcademicReviewDate)
	layout.ProbationaryEndDate = (*xsdDate)(layout.T.ProbationaryEndDate)
	layout.TenureAwardDate = (*xsdDate)(layout.T.TenureAwardDate)
	return e.EncodeElement(layout, start)
}
func (t *AcademicAppointmentSnapshotDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AcademicAppointmentSnapshotDataType
	var overlay struct {
		*T
		AppointmentStartDate   *xsdDate `xml:"urn:com.workday/bsvc Appointment_Start_Date"`
		AppointmentEndDate     *xsdDate `xml:"urn:com.workday/bsvc Appointment_End_Date,omitempty"`
		TrackStartDateOverride *xsdDate `xml:"urn:com.workday/bsvc Track_Start_Date_Override,omitempty"`
		AdjustedTitleStartDate *xsdDate `xml:"urn:com.workday/bsvc Adjusted_Title_Start_Date,omitempty"`
		AcademicReviewDate     *xsdDate `xml:"urn:com.workday/bsvc Academic_Review_Date,omitempty"`
		ProbationaryEndDate    *xsdDate `xml:"urn:com.workday/bsvc Probationary_End_Date,omitempty"`
		TenureAwardDate        *xsdDate `xml:"urn:com.workday/bsvc Tenure_Award_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AppointmentStartDate = (*xsdDate)(&overlay.T.AppointmentStartDate)
	overlay.AppointmentEndDate = (*xsdDate)(overlay.T.AppointmentEndDate)
	overlay.TrackStartDateOverride = (*xsdDate)(overlay.T.TrackStartDateOverride)
	overlay.AdjustedTitleStartDate = (*xsdDate)(overlay.T.AdjustedTitleStartDate)
	overlay.AcademicReviewDate = (*xsdDate)(overlay.T.AcademicReviewDate)
	overlay.ProbationaryEndDate = (*xsdDate)(overlay.T.ProbationaryEndDate)
	overlay.TenureAwardDate = (*xsdDate)(overlay.T.TenureAwardDate)
	return d.DecodeElement(&overlay, &start)
}

// Academic Appointment Track Additional Data request criteria
type AcademicAppointmentTrackAdditionalDataRequestCriteriaType struct {
}

// Academic Appointment Track References to view Additional Data
type AcademicAppointmentTrackAdditionalDataRequestReferencesType struct {
	AcademicAppointmentTrackReference []AcademicAppointmentTrackObjectType `xml:"urn:com.workday/bsvc Academic_Appointment_Track_Reference"`
}

// Contains the effective-dated additional data for the requested Academic Appointment Tracks as of the effective date.
type AcademicAppointmentTrackAdditionalDataResponseDataType struct {
	AcademicAppointmentTrackAdditionalData []AcademicAppointmentTrackCustomObjectDataType `xml:"urn:com.workday/bsvc Academic_Appointment_Track_Additional_Data,omitempty"`
}

// Effective dated additional data for an Academic Appointment Track. When updating custom objects that allow multiple instances, data for existing instances must appear in the request, otherwise it will be removed.
type AcademicAppointmentTrackCustomObjectDataType struct {
	EffectiveDate                     time.Time                                   `xml:"urn:com.workday/bsvc Effective_Date"`
	AcademicAppointmentTrackReference *AcademicAppointmentTrackObjectType         `xml:"urn:com.workday/bsvc Academic_Appointment_Track_Reference"`
	BusinessObjectAdditionalData      *EffectiveDatedWebServiceAdditionalDataType `xml:"urn:com.workday/bsvc Business_Object_Additional_Data"`
}

func (t *AcademicAppointmentTrackCustomObjectDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AcademicAppointmentTrackCustomObjectDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *AcademicAppointmentTrackCustomObjectDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AcademicAppointmentTrackCustomObjectDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type AcademicAppointmentTrackObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicAppointmentTrackObjectType struct {
	ID         []AcademicAppointmentTrackObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicLevelObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicLevelObjectType struct {
	ID         []AcademicLevelObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element that contains position's academic pay setup related data.
type AcademicPaySetupDataType struct {
	AnnualWorkPeriodWorkPercentofYear float64    `xml:"urn:com.workday/bsvc Annual_Work_Period_Work_Percent_of_Year,omitempty"`
	AnnualWorkPeriodStartDate         *time.Time `xml:"urn:com.workday/bsvc Annual_Work_Period_Start_Date,omitempty"`
	AnnualWorkPeriodEndDate           *time.Time `xml:"urn:com.workday/bsvc Annual_Work_Period_End_Date,omitempty"`
	DisbursementPlanPeriodStartDate   *time.Time `xml:"urn:com.workday/bsvc Disbursement_Plan_Period_Start_Date,omitempty"`
	DisbursementPlanPeriodEndDate     *time.Time `xml:"urn:com.workday/bsvc Disbursement_Plan_Period_End_Date,omitempty"`
}

func (t *AcademicPaySetupDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AcademicPaySetupDataType
	var layout struct {
		*T
		AnnualWorkPeriodStartDate       *xsdDate `xml:"urn:com.workday/bsvc Annual_Work_Period_Start_Date,omitempty"`
		AnnualWorkPeriodEndDate         *xsdDate `xml:"urn:com.workday/bsvc Annual_Work_Period_End_Date,omitempty"`
		DisbursementPlanPeriodStartDate *xsdDate `xml:"urn:com.workday/bsvc Disbursement_Plan_Period_Start_Date,omitempty"`
		DisbursementPlanPeriodEndDate   *xsdDate `xml:"urn:com.workday/bsvc Disbursement_Plan_Period_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AnnualWorkPeriodStartDate = (*xsdDate)(layout.T.AnnualWorkPeriodStartDate)
	layout.AnnualWorkPeriodEndDate = (*xsdDate)(layout.T.AnnualWorkPeriodEndDate)
	layout.DisbursementPlanPeriodStartDate = (*xsdDate)(layout.T.DisbursementPlanPeriodStartDate)
	layout.DisbursementPlanPeriodEndDate = (*xsdDate)(layout.T.DisbursementPlanPeriodEndDate)
	return e.EncodeElement(layout, start)
}
func (t *AcademicPaySetupDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AcademicPaySetupDataType
	var overlay struct {
		*T
		AnnualWorkPeriodStartDate       *xsdDate `xml:"urn:com.workday/bsvc Annual_Work_Period_Start_Date,omitempty"`
		AnnualWorkPeriodEndDate         *xsdDate `xml:"urn:com.workday/bsvc Annual_Work_Period_End_Date,omitempty"`
		DisbursementPlanPeriodStartDate *xsdDate `xml:"urn:com.workday/bsvc Disbursement_Plan_Period_Start_Date,omitempty"`
		DisbursementPlanPeriodEndDate   *xsdDate `xml:"urn:com.workday/bsvc Disbursement_Plan_Period_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AnnualWorkPeriodStartDate = (*xsdDate)(overlay.T.AnnualWorkPeriodStartDate)
	overlay.AnnualWorkPeriodEndDate = (*xsdDate)(overlay.T.AnnualWorkPeriodEndDate)
	overlay.DisbursementPlanPeriodStartDate = (*xsdDate)(overlay.T.DisbursementPlanPeriodStartDate)
	overlay.DisbursementPlanPeriodEndDate = (*xsdDate)(overlay.T.DisbursementPlanPeriodEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type AcademicPeriodObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicPeriodObjectType struct {
	ID         []AcademicPeriodObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Container for all the detail information about the Academic Rank
type AcademicRankDataType struct {
	ID                            string                         `xml:"urn:com.workday/bsvc ID,omitempty"`
	AcademicRankTitleName         string                         `xml:"urn:com.workday/bsvc Academic_Rank_Title_Name"`
	Description                   string                         `xml:"urn:com.workday/bsvc Description,omitempty"`
	Emeritus                      *bool                          `xml:"urn:com.workday/bsvc Emeritus,omitempty"`
	RankOrder                     float64                        `xml:"urn:com.workday/bsvc Rank_Order,omitempty"`
	JobProfileReference           []JobProfileObjectType         `xml:"urn:com.workday/bsvc Job_Profile_Reference,omitempty"`
	MetadataAcademicRankReference *AcademicRankMappingObjectType `xml:"urn:com.workday/bsvc Metadata_Academic_Rank_Reference,omitempty"`
	Inactive                      *bool                          `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicRankMappingObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicRankMappingObjectType struct {
	ID         []AcademicRankMappingObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicRankObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicRankObjectType struct {
	ID         []AcademicRankObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request Criteria
type AcademicRankRequestCriteriaType struct {
}

// Request References
type AcademicRankRequestReferencesType struct {
	AcademicRankReference []AcademicRankObjectType `xml:"urn:com.workday/bsvc Academic_Rank_Reference"`
}

// Container for all the detail information about the Academic Rank
type AcademicRankResponseDataType struct {
	AcademicRank []AcademicRankType `xml:"urn:com.workday/bsvc Academic_Rank,omitempty"`
}

// Academic Rank Element
type AcademicRankType struct {
	AcademicRankReference *AcademicRankObjectType `xml:"urn:com.workday/bsvc Academic_Rank_Reference,omitempty"`
	AcademicRankData      *AcademicRankDataType   `xml:"urn:com.workday/bsvc Academic_Rank_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicTenureStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicTenureStatusObjectType struct {
	ID         []AcademicTenureStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicTrackTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicTrackTypeObjectType struct {
	ID         []AcademicTrackTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// A container for all the detail information about the Academic Unit
type AcademicUnitDataType struct {
	ID                                                            string                                                     `xml:"urn:com.workday/bsvc ID,omitempty"`
	EffectiveDate                                                 *time.Time                                                 `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	Name                                                          string                                                     `xml:"urn:com.workday/bsvc Name,omitempty"`
	Code                                                          string                                                     `xml:"urn:com.workday/bsvc Code,omitempty"`
	IsInstitution                                                 *bool                                                      `xml:"urn:com.workday/bsvc Is_Institution,omitempty"`
	IncludeCodeinName                                             *bool                                                      `xml:"urn:com.workday/bsvc Include_Code_in_Name,omitempty"`
	IncludeIncumbentLeaderinName                                  *bool                                                      `xml:"urn:com.workday/bsvc Include_Incumbent_Leader_in_Name,omitempty"`
	AcademicOrganizationSubtypeReference                          *AcademicUnitSubtypeObjectType                             `xml:"urn:com.workday/bsvc Academic_Organization_Subtype_Reference,omitempty"`
	IncludeSubtypeinName                                          *bool                                                      `xml:"urn:com.workday/bsvc Include_Subtype_in_Name,omitempty"`
	Inactive                                                      *bool                                                      `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	CompanyReference                                              *CompanyObjectType                                         `xml:"urn:com.workday/bsvc Company_Reference,omitempty"`
	CIPCodeReference                                              *CIPCodeWorkdayOwnedObjectType                             `xml:"urn:com.workday/bsvc CIP_Code_Reference,omitempty"`
	ExternalURLReference                                          *ExternalURLObjectType                                     `xml:"urn:com.workday/bsvc External_URL_Reference,omitempty"`
	SupervisoryOrganizationReference                              []SupervisoryOrganizationObjectType                        `xml:"urn:com.workday/bsvc Supervisory_Organization_Reference,omitempty"`
	TrackTypeReference                                            []AcademicTrackTypeObjectType                              `xml:"urn:com.workday/bsvc Track_Type_Reference,omitempty"`
	SuperiorAcademicUnitReference                                 *AcademicUnitObjectType                                    `xml:"urn:com.workday/bsvc Superior_Academic_Unit_Reference,omitempty"`
	AcceptableExternalInstitutionGradingSchemePointValueReference *ExternalInstitutionGradingSchemeGradePointValueObjectType `xml:"urn:com.workday/bsvc Acceptable_External_Institution_Grading_Scheme_Point_Value_Reference,omitempty"`
}

func (t *AcademicUnitDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AcademicUnitDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *AcademicUnitDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AcademicUnitDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper element for Academic Unit Hierarchy attributes and relationships.
type AcademicUnitHierarchyDataType struct {
	AcademicUnitHierarchyID              string                            `xml:"urn:com.workday/bsvc Academic_Unit_Hierarchy_ID,omitempty"`
	Name                                 string                            `xml:"urn:com.workday/bsvc Name"`
	Code                                 string                            `xml:"urn:com.workday/bsvc Code,omitempty"`
	IncludeCodeinName                    *bool                             `xml:"urn:com.workday/bsvc Include_Code_in_Name,omitempty"`
	IncludeLeadershipRoleIncumbentinName *bool                             `xml:"urn:com.workday/bsvc Include_Leadership_Role_Incumbent_in_Name,omitempty"`
	IncludeSubtypeinName                 *bool                             `xml:"urn:com.workday/bsvc Include_Subtype_in_Name,omitempty"`
	TypeReference                        *AcademicUnitSubtypeObjectType    `xml:"urn:com.workday/bsvc Type_Reference,omitempty"`
	ExternalURLReference                 *ExternalURLObjectType            `xml:"urn:com.workday/bsvc External_URL_Reference,omitempty"`
	SuperiorReference                    *AcademicUnitHierarchyObjectType  `xml:"urn:com.workday/bsvc Superior_Reference,omitempty"`
	SubordinateReference                 []AcademicUnitHierarchyObjectType `xml:"urn:com.workday/bsvc Subordinate_Reference,omitempty"`
	AcademicUnitReference                []AcademicUnitObjectType          `xml:"urn:com.workday/bsvc Academic_Unit_Reference,omitempty"`
	Inactive                             *bool                             `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicUnitHierarchyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicUnitHierarchyObjectType struct {
	ID         []AcademicUnitHierarchyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for references to Academic Unit Hierarchies
type AcademicUnitHierarchyRequestReferencesType struct {
	AcademicUnitHierarchyReference []AcademicUnitHierarchyObjectType `xml:"urn:com.workday/bsvc Academic_Unit_Hierarchy_Reference"`
}

// Wrapper element for the Academic Unit Hierarchies
type AcademicUnitHierarchyResponseDataType struct {
	AcademicUnitHierarchy []AcademicUnitHierarchyType `xml:"urn:com.workday/bsvc Academic_Unit_Hierarchy,omitempty"`
}

// Wrapper element for the Academic Unit Hierarchy reference and associated data.\
type AcademicUnitHierarchyType struct {
	AcademicUnitHierarchyReference *AcademicUnitHierarchyObjectType `xml:"urn:com.workday/bsvc Academic_Unit_Hierarchy_Reference,omitempty"`
	AcademicUnitHierarchyData      []AcademicUnitHierarchyDataType  `xml:"urn:com.workday/bsvc Academic_Unit_Hierarchy_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicUnitObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicUnitObjectType struct {
	ID         []AcademicUnitObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request Criteria
type AcademicUnitRequestCriteriaType struct {
	AcademicUnitName  string     `xml:"urn:com.workday/bsvc Academic_Unit_Name"`
	EffectiveAsOfDate *time.Time `xml:"urn:com.workday/bsvc Effective_As_Of_Date,omitempty"`
}

func (t *AcademicUnitRequestCriteriaType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AcademicUnitRequestCriteriaType
	var layout struct {
		*T
		EffectiveAsOfDate *xsdDate `xml:"urn:com.workday/bsvc Effective_As_Of_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveAsOfDate = (*xsdDate)(layout.T.EffectiveAsOfDate)
	return e.EncodeElement(layout, start)
}
func (t *AcademicUnitRequestCriteriaType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AcademicUnitRequestCriteriaType
	var overlay struct {
		*T
		EffectiveAsOfDate *xsdDate `xml:"urn:com.workday/bsvc Effective_As_Of_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveAsOfDate = (*xsdDate)(overlay.T.EffectiveAsOfDate)
	return d.DecodeElement(&overlay, &start)
}

// A collection of references to one or more Academic Units
type AcademicUnitRequestReferencesType struct {
	AcademicUnitReference []AcademicUnitObjectType `xml:"urn:com.workday/bsvc Academic_Unit_Reference"`
}

// A container for Academic Unit responses
type AcademicUnitResponseDataType struct {
	AcademicUnit []AcademicUnitType `xml:"urn:com.workday/bsvc Academic_Unit,omitempty"`
}

// Response Group
type AcademicUnitResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AcademicUnitSubtypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AcademicUnitSubtypeObjectType struct {
	ID         []AcademicUnitSubtypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// A container for Academic Unit Data
type AcademicUnitType struct {
	AcademicUnitReference *AcademicUnitObjectType `xml:"urn:com.workday/bsvc Academic_Unit_Reference,omitempty"`
	AcademicUnitData      *AcademicUnitDataType   `xml:"urn:com.workday/bsvc Academic_Unit_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AchievableLevelObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AchievableLevelObjectType struct {
	ID         []AchievableLevelObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for the Add Academic Appointment business process.
type AddAcademicAppointmentDataType struct {
	ReasonReference                                                     *GeneralEventSubcategoryObjectType                        `xml:"urn:com.workday/bsvc Reason_Reference"`
	AddAcademicAffiliateStatus                                          *bool                                                     `xml:"urn:com.workday/bsvc Add_Academic_Affiliate_Status,omitempty"`
	AcademicAppointeeReference                                          *AcademicAppointeeEnabledObjectType                       `xml:"urn:com.workday/bsvc Academic_Appointee_Reference,omitempty"`
	CreateAcademicAffiliateData                                         *CreateAcademicAffiliateDataType                          `xml:"urn:com.workday/bsvc Create_Academic_Affiliate_Data,omitempty"`
	AcademicAppointmentData                                             *AcademicAppointmentSnapshotDataType                      `xml:"urn:com.workday/bsvc Academic_Appointment_Data"`
	CreateWorkdayAccountSubBusinessProcessforAcademicAffiliate          *CreateWorkdayAccountSubBusinessProcessType               `xml:"urn:com.workday/bsvc Create_Workday_Account_Sub_Business_Process_for_Academic_Affiliate,omitempty"`
	ManageProfessionalAffiliationSubBusinessProcessforAcademicAffiliate []ManageProfessionalAffiliationSubBusinessProcessDataType `xml:"urn:com.workday/bsvc Manage_Professional_Affiliation_Sub_Business_Process_for_Academic_Affiliate,omitempty"`
	ManageEducationSubBusinessProcessforAcademicAffiliate               []ManageEducationSubBusinessProcessDataType               `xml:"urn:com.workday/bsvc Manage_Education_Sub_Business_Process_for_Academic_Affiliate,omitempty"`
	ManageInstructorEligibilitySubBusinessProcessforAcademicAffiliate   []ManageInstructorEligibilitySubBusinessProcessDataType   `xml:"urn:com.workday/bsvc Manage_Instructor_Eligibility_Sub_Business_Process_for_Academic_Affiliate,omitempty"`
}

// Top-level request element to add an academic appointment
type AddAcademicAppointmentRequestType struct {
	BusinessProcessParameters  *BusinessProcessParametersType  `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	AddAcademicAppointmentData *AddAcademicAppointmentDataType `xml:"urn:com.workday/bsvc Add_Academic_Appointment_Data"`
	Version                    string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AdditionalBenefitsCoverageTargetObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AdditionalBenefitsCoverageTargetObjectType struct {
	ID         []AdditionalBenefitsCoverageTargetObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the additional names for a person, other than their legal and preferred names.  Additional names are not valid for applicants.
type AdditionalNameDataType struct {
	NameDetailData    *PersonNameDetailDataType     `xml:"urn:com.workday/bsvc Name_Detail_Data"`
	NameTypeReference *AdditionalNameTypeObjectType `xml:"urn:com.workday/bsvc Name_Type_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AdditionalNameTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AdditionalNameTypeObjectType struct {
	ID         []AdditionalNameTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element encapsulating the core address information.
type AddressCoreDataType struct {
	CountryReference        *CountryObjectType                   `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	CountryRegionReference  *CountryRegionObjectType             `xml:"urn:com.workday/bsvc Country_Region_Reference,omitempty"`
	CountryRegionDescriptor string                               `xml:"urn:com.workday/bsvc Country_Region_Descriptor,omitempty"`
	AddressLineData         []AddressLineInformationDataType     `xml:"urn:com.workday/bsvc Address_Line_Data,omitempty"`
	SubregionData           []SubregionInformationDataType       `xml:"urn:com.workday/bsvc Subregion_Data,omitempty"`
	SubmunicipalityData     []SubmunicipalityInformationDataType `xml:"urn:com.workday/bsvc Submunicipality_Data,omitempty"`
	PostalCode              string                               `xml:"urn:com.workday/bsvc Postal_Code,omitempty"`
	Municipality            string                               `xml:"urn:com.workday/bsvc Municipality,omitempty"`
	MunicipalityLocal       string                               `xml:"urn:com.workday/bsvc Municipality_Local,omitempty"`
	CountryCityReference    *CountryCityObjectType               `xml:"urn:com.workday/bsvc Country_City_Reference,omitempty"`
	FormattedAddress        string                               `xml:"urn:com.workday/bsvc Formatted_Address,attr,omitempty"`
	DefaultAddress          bool                                 `xml:"urn:com.workday/bsvc Default_Address,attr,omitempty"`
}

// Encapsulating element for all Address data.
type AddressDataType struct {
	CountryReference *CountryReferenceType             `xml:"urn:com.workday/bsvc Country_Reference"`
	AddressLine      []AddressLineDataType             `xml:"urn:com.workday/bsvc Address_Line,omitempty"`
	Municipality     string                            `xml:"urn:com.workday/bsvc Municipality,omitempty"`
	Submunicipality  []string                          `xml:"urn:com.workday/bsvc Submunicipality,omitempty"`
	Region           string                            `xml:"urn:com.workday/bsvc Region,omitempty"`
	Subregion        []SubregionDataType               `xml:"urn:com.workday/bsvc Subregion,omitempty"`
	PostalCode       string                            `xml:"urn:com.workday/bsvc Postal_Code,omitempty"`
	UsageData        *CommunicationMethodUsageDataType `xml:"urn:com.workday/bsvc Usage_Data"`
	LastModified     time.Time                         `xml:"urn:com.workday/bsvc Last_Modified,attr,omitempty"`
	EffectiveDate    time.Time                         `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
}

func (t *AddressDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AddressDataType
	var layout struct {
		*T
		LastModified  *xsdDateTime `xml:"urn:com.workday/bsvc Last_Modified,attr,omitempty"`
		EffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.LastModified = (*xsdDateTime)(&layout.T.LastModified)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *AddressDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AddressDataType
	var overlay struct {
		*T
		LastModified  *xsdDateTime `xml:"urn:com.workday/bsvc Last_Modified,attr,omitempty"`
		EffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LastModified = (*xsdDateTime)(&overlay.T.LastModified)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Address information
type AddressInformationDataType struct {
	CountryReference             *CountryObjectType                            `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	LastModified                 *time.Time                                    `xml:"urn:com.workday/bsvc Last_Modified,omitempty"`
	AddressLineData              []AddressLineInformationDataType              `xml:"urn:com.workday/bsvc Address_Line_Data,omitempty"`
	Municipality                 string                                        `xml:"urn:com.workday/bsvc Municipality,omitempty"`
	CountryCityReference         *CountryCityObjectType                        `xml:"urn:com.workday/bsvc Country_City_Reference,omitempty"`
	SubmunicipalityData          []SubmunicipalityInformationDataType          `xml:"urn:com.workday/bsvc Submunicipality_Data,omitempty"`
	CountryRegionReference       *CountryRegionObjectType                      `xml:"urn:com.workday/bsvc Country_Region_Reference,omitempty"`
	CountryRegionDescriptor      string                                        `xml:"urn:com.workday/bsvc Country_Region_Descriptor,omitempty"`
	SubregionData                []SubregionInformationDataType                `xml:"urn:com.workday/bsvc Subregion_Data,omitempty"`
	PostalCode                   string                                        `xml:"urn:com.workday/bsvc Postal_Code,omitempty"`
	UsageData                    []CommunicationMethodUsageInformationDataType `xml:"urn:com.workday/bsvc Usage_Data,omitempty"`
	NumberofDays                 float64                                       `xml:"urn:com.workday/bsvc Number_of_Days,omitempty"`
	MunicipalityLocal            string                                        `xml:"urn:com.workday/bsvc Municipality_Local,omitempty"`
	AddressReference             *AddressReferenceObjectType                   `xml:"urn:com.workday/bsvc Address_Reference,omitempty"`
	AddressID                    string                                        `xml:"urn:com.workday/bsvc Address_ID,omitempty"`
	FormattedAddress             string                                        `xml:"urn:com.workday/bsvc Formatted_Address,attr,omitempty"`
	AddressFormatType            string                                        `xml:"urn:com.workday/bsvc Address_Format_Type,attr,omitempty"`
	DefaultedBusinessSiteAddress bool                                          `xml:"urn:com.workday/bsvc Defaulted_Business_Site_Address,attr,omitempty"`
	Delete                       bool                                          `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
	DoNotReplaceAll              bool                                          `xml:"urn:com.workday/bsvc Do_Not_Replace_All,attr,omitempty"`
	EffectiveDate                time.Time                                     `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
}

func (t *AddressInformationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AddressInformationDataType
	var layout struct {
		*T
		LastModified  *xsdDateTime `xml:"urn:com.workday/bsvc Last_Modified,omitempty"`
		EffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.LastModified = (*xsdDateTime)(layout.T.LastModified)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *AddressInformationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AddressInformationDataType
	var overlay struct {
		*T
		LastModified  *xsdDateTime `xml:"urn:com.workday/bsvc Last_Modified,omitempty"`
		EffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LastModified = (*xsdDateTime)(overlay.T.LastModified)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element for all Address Line data.
type AddressLineDataType struct {
	Value      string `xml:",chardata"`
	Descriptor string `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
	Type       string `xml:"urn:com.workday/bsvc Type,attr,omitempty"`
}

// The address line for the address. This typically contains Street name, street number, apartment, suite number.
type AddressLineInformationDataType struct {
	Value      string `xml:",chardata"`
	Descriptor string `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
	Type       string `xml:"urn:com.workday/bsvc Type,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AddressReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AddressReferenceObjectType struct {
	ID         []AddressReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AllowanceUnitPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AllowanceUnitPlanObjectType struct {
	ID         []AllowanceUnitPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AllowanceValuePlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AllowanceValuePlanObjectType struct {
	ID         []AllowanceValuePlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// If the dependent is allowed for tax deduction
type AllowedforTaxDeductionDataType struct {
	EffectiveDate          *time.Time `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	AllowedforTaxDeduction *bool      `xml:"urn:com.workday/bsvc Allowed_for_Tax_Deduction,omitempty"`
}

func (t *AllowedforTaxDeductionDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AllowedforTaxDeductionDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *AllowedforTaxDeductionDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AllowedforTaxDeductionDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// The annual contribution for the spending account election.
type AnnualContributionDataType struct {
	AnnualContributionAmount float64 `xml:"urn:com.workday/bsvc Annual_Contribution_Amount"`
	PriorContributionAmount  float64 `xml:"urn:com.workday/bsvc Prior_Contribution_Amount"`
	RemainingPeriods         float64 `xml:"urn:com.workday/bsvc Remaining_Periods"`
}

// Dependent's annual income
type AnnualIncomeDataType struct {
	EffectiveDate     *time.Time          `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	CurrencyReference *CurrencyObjectType `xml:"urn:com.workday/bsvc Currency_Reference"`
	AnnualIncome      float64             `xml:"urn:com.workday/bsvc Annual_Income,omitempty"`
}

func (t *AnnualIncomeDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AnnualIncomeDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *AnnualIncomeDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AnnualIncomeDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type ApplicantObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ApplicantObjectType struct {
	ID         []ApplicantObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element containing application related exceptions data
type ApplicationInstanceExceptionsDataType struct {
	ExceptionData []ExceptionDataType `xml:"urn:com.workday/bsvc Exception_Data,omitempty"`
}

// Element containing Exceptions Data
type ApplicationInstanceRelatedExceptionsDataType struct {
	ExceptionsData []ApplicationInstanceExceptionsDataType `xml:"urn:com.workday/bsvc Exceptions_Data,omitempty"`
}

// Data for Appointment Specialty
type AppointmentSpecialtyDataType struct {
	ID                                           string                            `xml:"urn:com.workday/bsvc ID,omitempty"`
	SpecialtyReference                           *SpecialtyObjectType              `xml:"urn:com.workday/bsvc Specialty_Reference"`
	AcademicUnitorAcademicUnitHierarchyReference *AcademicAppointmentSetObjectType `xml:"urn:com.workday/bsvc Academic_Unit_or_Academic_Unit_Hierarchy_Reference,omitempty"`
	Inactive                                     *bool                             `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AppointmentSpecialtyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AppointmentSpecialtyObjectType struct {
	ID         []AppointmentSpecialtyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Appointment Specialty Request Criteria
type AppointmentSpecialtyRequestCriteriaType struct {
}

// Get Appointment Specialties Request
type AppointmentSpecialtyRequestReferencesType struct {
	AppointmentSpecialtyReference []AppointmentSpecialtyObjectType `xml:"urn:com.workday/bsvc Appointment_Specialty_Reference"`
}

// Appointment Specialty Response Data
type AppointmentSpecialtyResponseDataType struct {
	AppointmentSpecialty []AppointmentSpecialtyType `xml:"urn:com.workday/bsvc Appointment_Specialty,omitempty"`
}

// Appointment Specialty Response Group
type AppointmentSpecialtyResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Appointment Specialty
type AppointmentSpecialtyType struct {
	AppointmentSpecialtyReference *AppointmentSpecialtyObjectType `xml:"urn:com.workday/bsvc Appointment_Specialty_Reference,omitempty"`
	AppointmentSpecialtyData      []AppointmentSpecialtyDataType  `xml:"urn:com.workday/bsvc Appointment_Specialty_Data,omitempty"`
}

// Wrapper element for Assign Employee Collective Agreement event.
type AssignEmployeeCollectiveAgreementDataType struct {
	PositionReference            *PositionElementObjectType                `xml:"urn:com.workday/bsvc Position_Reference,omitempty"`
	CollectiveAgreementReference *CollectiveAgreementObjectType            `xml:"urn:com.workday/bsvc Collective_Agreement_Reference"`
	FactorOptions                *CollectiveAgreementFactorOptionsDataType `xml:"urn:com.workday/bsvc Factor_Options,omitempty"`
}

// Assign Employee Collective Agreement element that has the Worker data, Position data, effective date and also contains the Collective Agreement data
type AssignEmployeeCollectiveAgreementEventDataType struct {
	WorkerReference         *WorkerObjectType                          `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	EffectiveDate           time.Time                                  `xml:"urn:com.workday/bsvc Effective_Date"`
	CollectiveAgreementData *AssignEmployeeCollectiveAgreementDataType `xml:"urn:com.workday/bsvc Collective_Agreement_Data"`
}

func (t *AssignEmployeeCollectiveAgreementEventDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AssignEmployeeCollectiveAgreementEventDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *AssignEmployeeCollectiveAgreementEventDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AssignEmployeeCollectiveAgreementEventDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Request Element consisting of Business Process Parameters and element with Worker and Collective Agreement details
type AssignEmployeeCollectiveAgreementEventRequestType struct {
	BusinessProcessParameters                  *BusinessProcessParametersType                  `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	AssignEmployeeCollectiveAgreementEventData *AssignEmployeeCollectiveAgreementEventDataType `xml:"urn:com.workday/bsvc Assign_Employee_Collective_Agreement_Event_Data,omitempty"`
	Version                                    string                                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response for the Assign Collective Agreement Event
type AssignEmployeeCollectiveAgreementEventResponseType struct {
	AssignEmployeeCollectiveAgreementEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Assign_Employee_Collective_Agreement_Event_Reference,omitempty"`
	Version                                         string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The request element containing all necessary information to manually assign an establishment to a worker position
type AssignEstablishmentDataType struct {
	EffectiveDate          time.Time                  `xml:"urn:com.workday/bsvc Effective_Date"`
	WorkerReference        *WorkerObjectType          `xml:"urn:com.workday/bsvc Worker_Reference"`
	PositionReference      *PositionElementObjectType `xml:"urn:com.workday/bsvc Position_Reference"`
	EstablishmentReference *EstablishmentObjectType   `xml:"urn:com.workday/bsvc Establishment_Reference"`
}

func (t *AssignEstablishmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AssignEstablishmentDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *AssignEstablishmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AssignEstablishmentDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// The request element containing all necessary information to manually assign an establishment to a worker position
type AssignEstablishmentRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	AssignEstablishmentData   *AssignEstablishmentDataType   `xml:"urn:com.workday/bsvc Assign_Establishment_Data,omitempty"`
	Version                   string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Assign establishment response element containing the newly created assign establishment event reference
type AssignEstablishmentResponseType struct {
	AssignEstablishmentEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Assign_Establishment_Event_Reference,omitempty"`
	Version                           string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Sub element of the request having positions to add/remove.
type AssignMemberstoCustomOrganizationDataType struct {
	ReorganizationReference    *ReorganizationObjectType   `xml:"urn:com.workday/bsvc Reorganization_Reference"`
	PositionstoAddReference    []PositionElementObjectType `xml:"urn:com.workday/bsvc Positions_to_Add_Reference,omitempty"`
	PositionstoRemoveReference []PositionElementObjectType `xml:"urn:com.workday/bsvc Positions_to_Remove_Reference,omitempty"`
}

// Request element having the organization, positions to be added/removed and the effective date.
type AssignMemberstoCustomOrganizationRequestType struct {
	AssignMemberstoCustomOrganizationReference *OrganizationObjectType                    `xml:"urn:com.workday/bsvc Assign_Members_to_Custom_Organization_Reference"`
	AssignMemberstoCustomOrganizationData      *AssignMemberstoCustomOrganizationDataType `xml:"urn:com.workday/bsvc Assign_Members_to_Custom_Organization_Data,omitempty"`
	Version                                    string                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element, returning only the organization.
type AssignMemberstoCustomOrganizationResponseType struct {
	AssignWorkerstoCustomOrganizationReference *OrganizationObjectType `xml:"urn:com.workday/bsvc Assign_Workers_to_Custom_Organization_Reference,omitempty"`
	Version                                    string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Data element containing User-Based Security Group and Workday Accounts
type AssignUserBasedSecurityGroupDataType struct {
	UserBasedSecurityGroupReference *UserBasedSecurityGroupObjectType `xml:"urn:com.workday/bsvc User-Based_Security_Group_Reference"`
	WorkdayAccountReference         []SystemUserObjectType            `xml:"urn:com.workday/bsvc Workday_Account_Reference,omitempty"`
}

// Element to return User-Based Security Group and its member Workday Accounts
type AssignUserBasedSecurityGroupResponseDataType struct {
	AssignUserBasedSecurityGroup []AssignUserBasedSecurityGroupType `xml:"urn:com.workday/bsvc Assign_User-Based_Security_Group,omitempty"`
}

// Element to include Optional User-Based Security Group Reference and the Element with  User-Based Security Group and its member Workday Accounts
type AssignUserBasedSecurityGroupType struct {
	UserBasedSecurityGroupReference  *UserBasedSecurityGroupObjectType     `xml:"urn:com.workday/bsvc User-Based_Security_Group_Reference,omitempty"`
	AssignUserBasedSecurityGroupData *AssignUserBasedSecurityGroupDataType `xml:"urn:com.workday/bsvc Assign_User-Based_Security_Group_Data,omitempty"`
}

// Data element containing a Workday Account and the assigned User-Based Security Groups .
type AssignUserBasedSecurityGroupsDataType struct {
	WorkdayAccountReference         *SystemUserObjectType              `xml:"urn:com.workday/bsvc Workday_Account_Reference"`
	UserBasedSecurityGroupReference []UserBasedSecurityGroupObjectType `xml:"urn:com.workday/bsvc User-Based_Security_Group_Reference,omitempty"`
}

// Element containing the Request Criteria for Assign User-Based Security groups
type AssignUserBasedSecurityGroupsRequestCriteriaType struct {
	WorkdayAccountUserName          string                             `xml:"urn:com.workday/bsvc Workday_Account_User_Name,omitempty"`
	UserBasedSecurityGroupReference []UserBasedSecurityGroupObjectType `xml:"urn:com.workday/bsvc User-Based_Security_Group_Reference,omitempty"`
	UserBasedSecurityGroupName      string                             `xml:"urn:com.workday/bsvc User-Based_Security_Group_Name,omitempty"`
}

// Request References element for retrieving specific Workday Accounts and their assigned User-Based Security Groups.
type AssignUserBasedSecurityGroupsRequestReferencesType struct {
	WorkdayAccountReference []SystemUserObjectType `xml:"urn:com.workday/bsvc Workday_Account_Reference,omitempty"`
}

// Response Data for retrieving Workday Accounts and their assigned User-Based Security Groups.
type AssignUserBasedSecurityGroupsResponseDataType struct {
	AssignUserBasedSecurityGroups []AssignUserBasedSecurityGroupsType `xml:"urn:com.workday/bsvc Assign_User-Based_Security_Groups,omitempty"`
}

// Element wrapping the controls what information is returned in the Response Data content
type AssignUserBasedSecurityGroupsResponseGroupType struct {
	IncludeReference                            *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludeUserBasedSecurityGroupAssignmentData *bool `xml:"urn:com.workday/bsvc Include_User-Based_Security_Group_Assignment_Data,omitempty"`
}

// Wrapper element for a Workday Account and the User-Based Security Group assignment data.
type AssignUserBasedSecurityGroupsType struct {
	WorkdayAccountReference           *SystemUserObjectType                  `xml:"urn:com.workday/bsvc Workday_Account_Reference,omitempty"`
	AssignUserBasedSecurityGroupsData *AssignUserBasedSecurityGroupsDataType `xml:"urn:com.workday/bsvc Assign_User-Based_Security_Groups_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AssignableRoleObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AssignableRoleObjectType struct {
	ID         []AssignableRoleObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Attachment WWS Data element
type AttachmentWWSDataType struct {
	ID                string              `xml:"urn:com.workday/bsvc ID,omitempty"`
	Filename          string              `xml:"urn:com.workday/bsvc Filename"`
	FileContent       []byte              `xml:"urn:com.workday/bsvc File_Content"`
	MimeTypeReference *MimeTypeObjectType `xml:"urn:com.workday/bsvc Mime_Type_Reference,omitempty"`
	Comment           string              `xml:"urn:com.workday/bsvc Comment,omitempty"`
}

func (t *AttachmentWWSDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AttachmentWWSDataType
	var layout struct {
		*T
		FileContent *xsdBase64Binary `xml:"urn:com.workday/bsvc File_Content"`
	}
	layout.T = (*T)(t)
	layout.FileContent = (*xsdBase64Binary)(&layout.T.FileContent)
	return e.EncodeElement(layout, start)
}
func (t *AttachmentWWSDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AttachmentWWSDataType
	var overlay struct {
		*T
		FileContent *xsdBase64Binary `xml:"urn:com.workday/bsvc File_Content"`
	}
	overlay.T = (*T)(t)
	overlay.FileContent = (*xsdBase64Binary)(&overlay.T.FileContent)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type AuthorityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AuthorityObjectType struct {
	ID         []AuthorityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Authority.
type AuthorityReferenceType struct {
	AuthorityName                         string                     `xml:"urn:com.workday/bsvc Authority_Name"`
	RegulatoryRegionOrganizationReference *OrganizationReferenceType `xml:"urn:com.workday/bsvc Regulatory_Region_Organization_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AwardObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AwardObjectType struct {
	ID         []AwardObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for Award and Activity information.
type AwardandActivityAchievementDataType struct {
	AwardandActivityID            string                          `xml:"urn:com.workday/bsvc Award_and_Activity_ID,omitempty"`
	RemoveAwardandActivity        *bool                           `xml:"urn:com.workday/bsvc Remove_Award_and_Activity,omitempty"`
	AwardandActivityTypeReference *AwardandActivityTypeObjectType `xml:"urn:com.workday/bsvc Award_and_Activity_Type_Reference,omitempty"`
	Title                         string                          `xml:"urn:com.workday/bsvc Title,omitempty"`
	SponsorIssuer                 string                          `xml:"urn:com.workday/bsvc Sponsor_Issuer,omitempty"`
	StartDate                     *time.Time                      `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
	EndDate                       *time.Time                      `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	Description                   string                          `xml:"urn:com.workday/bsvc Description,omitempty"`
	URL                           string                          `xml:"urn:com.workday/bsvc URL,omitempty"`
	RelatedPositionReference      *PositionElementObjectType      `xml:"urn:com.workday/bsvc Related_Position_Reference,omitempty"`
}

func (t *AwardandActivityAchievementDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T AwardandActivityAchievementDataType
	var layout struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(layout.T.StartDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *AwardandActivityAchievementDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AwardandActivityAchievementDataType
	var overlay struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(overlay.T.StartDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper element for Award and Activity information.
type AwardandActivityType struct {
	AwardandActivityReference *AwardObjectType                     `xml:"urn:com.workday/bsvc Award_and_Activity_Reference,omitempty"`
	AwardandActivityData      *AwardandActivityAchievementDataType `xml:"urn:com.workday/bsvc Award_and_Activity_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type AwardandActivityTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type AwardandActivityTypeObjectType struct {
	ID         []AwardandActivityTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for Change Background Check Status business process web service
type BackgroundCheckEventDataType struct {
	EmployeeReference *EmployeeObjectType              `xml:"urn:com.workday/bsvc Employee_Reference"`
	StatusDate        time.Time                        `xml:"urn:com.workday/bsvc Status_Date"`
	StatusReference   *BackgroundCheckStatusObjectType `xml:"urn:com.workday/bsvc Status_Reference"`
	StatusComment     string                           `xml:"urn:com.workday/bsvc Status_Comment,omitempty"`
}

func (t *BackgroundCheckEventDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T BackgroundCheckEventDataType
	var layout struct {
		*T
		StatusDate *xsdDate `xml:"urn:com.workday/bsvc Status_Date"`
	}
	layout.T = (*T)(t)
	layout.StatusDate = (*xsdDate)(&layout.T.StatusDate)
	return e.EncodeElement(layout, start)
}
func (t *BackgroundCheckEventDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T BackgroundCheckEventDataType
	var overlay struct {
		*T
		StatusDate *xsdDate `xml:"urn:com.workday/bsvc Status_Date"`
	}
	overlay.T = (*T)(t)
	overlay.StatusDate = (*xsdDate)(&overlay.T.StatusDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type BackgroundCheckEventObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type BackgroundCheckEventObjectType struct {
	ID         []BackgroundCheckEventObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for Background Check data.
type BackgroundCheckOverallStatusDataType struct {
	StatusDate      time.Time                        `xml:"urn:com.workday/bsvc Status_Date"`
	StatusReference *BackgroundCheckStatusObjectType `xml:"urn:com.workday/bsvc Status_Reference"`
	StatusComment   string                           `xml:"urn:com.workday/bsvc Status_Comment,omitempty"`
}

func (t *BackgroundCheckOverallStatusDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T BackgroundCheckOverallStatusDataType
	var layout struct {
		*T
		StatusDate *xsdDate `xml:"urn:com.workday/bsvc Status_Date"`
	}
	layout.T = (*T)(t)
	layout.StatusDate = (*xsdDate)(&layout.T.StatusDate)
	return e.EncodeElement(layout, start)
}
func (t *BackgroundCheckOverallStatusDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T BackgroundCheckOverallStatusDataType
	var overlay struct {
		*T
		StatusDate *xsdDate `xml:"urn:com.workday/bsvc Status_Date"`
	}
	overlay.T = (*T)(t)
	overlay.StatusDate = (*xsdDate)(&overlay.T.StatusDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type BackgroundCheckStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type BackgroundCheckStatusObjectType struct {
	ID         []BackgroundCheckStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the detailed allocation amounts for the beneficiaries of the elected coverage.
type BeneficiaryAllocationDataType struct {
	AllocationType    string              `xml:"urn:com.workday/bsvc Allocation_Type"`
	Amount            float64             `xml:"urn:com.workday/bsvc Amount"`
	AmountType        string              `xml:"urn:com.workday/bsvc Amount_Type"`
	CurrencyReference *CurrencyObjectType `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
}

// Contains the details about the beneficiary.
type BeneficiaryDataType struct {
	BeneficiaryID string                                               `xml:"urn:com.workday/bsvc Beneficiary_ID,omitempty"`
	Irrevocable   *bool                                                `xml:"urn:com.workday/bsvc Irrevocable,omitempty"`
	InactiveDate  *time.Time                                           `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	CourtOrder    []QualifiedDomesticRelationsOrderReplacementDataType `xml:"urn:com.workday/bsvc Court_Order,omitempty"`
}

func (t *BeneficiaryDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T BeneficiaryDataType
	var layout struct {
		*T
		InactiveDate *xsdDate `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.InactiveDate = (*xsdDate)(layout.T.InactiveDate)
	return e.EncodeElement(layout, start)
}
func (t *BeneficiaryDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T BeneficiaryDataType
	var overlay struct {
		*T
		InactiveDate *xsdDate `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.InactiveDate = (*xsdDate)(overlay.T.InactiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Beneficiary data.
type BeneficiaryDataWWSType struct {
	IntegrationIDData         *ExternalIntegrationIDDataType                       `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	CourtOrderReplacementData []QualifiedDomesticRelationsOrderReplacementDataType `xml:"urn:com.workday/bsvc Court_Order_Replacement_Data,omitempty"`
}

// Contains the beneficiary that the coverage allocation is for and the details about the allocation.
type BeneficiaryDesignationDataType struct {
	BeneficiaryReference      *BeneficiaryObjectType         `xml:"urn:com.workday/bsvc Beneficiary_Reference"`
	OriginalCoverageBeginDate time.Time                      `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date"`
	CoverageEndDate           *time.Time                     `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
	BeneficiaryAllocationData *BeneficiaryAllocationDataType `xml:"urn:com.workday/bsvc Beneficiary_Allocation_Data"`
}

func (t *BeneficiaryDesignationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T BeneficiaryDesignationDataType
	var layout struct {
		*T
		OriginalCoverageBeginDate *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date"`
		CoverageEndDate           *xsdDate `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.OriginalCoverageBeginDate = (*xsdDate)(&layout.T.OriginalCoverageBeginDate)
	layout.CoverageEndDate = (*xsdDate)(layout.T.CoverageEndDate)
	return e.EncodeElement(layout, start)
}
func (t *BeneficiaryDesignationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T BeneficiaryDesignationDataType
	var overlay struct {
		*T
		OriginalCoverageBeginDate *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date"`
		CoverageEndDate           *xsdDate `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.OriginalCoverageBeginDate = (*xsdDate)(&overlay.T.OriginalCoverageBeginDate)
	overlay.CoverageEndDate = (*xsdDate)(overlay.T.CoverageEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type BeneficiaryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type BeneficiaryObjectType struct {
	ID         []BeneficiaryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Beneficiary data.
type BeneficiaryType struct {
	BeneficiaryReference *BeneficiaryObjectType `xml:"urn:com.workday/bsvc Beneficiary_Reference"`
	BeneficiaryData      *BeneficiaryDataType   `xml:"urn:com.workday/bsvc Beneficiary_Data"`
}

// Contains a unique identifier for an instance of an object.
type BenefitCoverageTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type BenefitCoverageTypeObjectType struct {
	ID         []BenefitCoverageTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type BenefitPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type BenefitPlanObjectType struct {
	ID         []BenefitPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the summary information about the benefit provider of the benefit plan.
type BenefitPlanSummaryDataType struct {
	BenefitPlanReference              *BenefitPlanObjectType              `xml:"urn:com.workday/bsvc Benefit_Plan_Reference,omitempty"`
	BenefitPlanName                   string                              `xml:"urn:com.workday/bsvc Benefit_Plan_Name,omitempty"`
	GroupIdentifier                   string                              `xml:"urn:com.workday/bsvc Group_Identifier,omitempty"`
	BenefitCoverageTypeReference      *BenefitCoverageTypeObjectType      `xml:"urn:com.workday/bsvc Benefit_Coverage_Type_Reference,omitempty"`
	CurrencyReference                 *CurrencyObjectType                 `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference                *FrequencyObjectType                `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	HealthCareClassificationReference *HealthCareClassificationObjectType `xml:"urn:com.workday/bsvc Health_Care_Classification_Reference,omitempty"`
	InsuranceCoverageTargetReference  *InsuranceCoverageTargetObjectType  `xml:"urn:com.workday/bsvc Insurance_Coverage_Target_Reference,omitempty"`
	BenefitProviderSummaryData        *BenefitProviderSummaryDataType     `xml:"urn:com.workday/bsvc Benefit_Provider_Summary_Data,omitempty"`
	ExternalIntegrationIDData         *ExternalIntegrationIDDataType      `xml:"urn:com.workday/bsvc External_Integration_ID_Data,omitempty"`
	PayComponentReference             []PayComponentObjectType            `xml:"urn:com.workday/bsvc Pay_Component_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type BenefitProviderIdentifierTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type BenefitProviderIdentifierTypeObjectType struct {
	ID         []BenefitProviderIdentifierTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type BenefitProviderObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type BenefitProviderObjectType struct {
	ID         []BenefitProviderObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the summary information about the benefit provider of the benefit plan.
type BenefitProviderSummaryDataType struct {
	BenefitProviderReference               *BenefitProviderObjectType               `xml:"urn:com.workday/bsvc Benefit_Provider_Reference,omitempty"`
	BenefitProviderName                    string                                   `xml:"urn:com.workday/bsvc Benefit_Provider_Name,omitempty"`
	BenefitProviderIdentifierTypeReference *BenefitProviderIdentifierTypeObjectType `xml:"urn:com.workday/bsvc Benefit_Provider_Identifier_Type_Reference,omitempty"`
}

// Encapsulating element for all Biographical data (e.g. DOB, Gender, etc.) associated with a person.
type BiographicDataType struct {
	CountryOfBirthReference *CountryOfBirthReferenceType `xml:"urn:com.workday/bsvc Country_Of_Birth_Reference,omitempty"`
	PlaceOfBirth            string                       `xml:"urn:com.workday/bsvc Place_Of_Birth,omitempty"`
	DateOfBirth             *time.Time                   `xml:"urn:com.workday/bsvc Date_Of_Birth,omitempty"`
	GenderReference         *GenderReferenceType         `xml:"urn:com.workday/bsvc Gender_Reference,omitempty"`
	DisabilityReference     []DisabilityReferenceType    `xml:"urn:com.workday/bsvc Disability_Reference,omitempty"`
	UsesTobacco             *bool                        `xml:"urn:com.workday/bsvc Uses_Tobacco,omitempty"`
}

func (t *BiographicDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T BiographicDataType
	var layout struct {
		*T
		DateOfBirth *xsdDate `xml:"urn:com.workday/bsvc Date_Of_Birth,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DateOfBirth = (*xsdDate)(layout.T.DateOfBirth)
	return e.EncodeElement(layout, start)
}
func (t *BiographicDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T BiographicDataType
	var overlay struct {
		*T
		DateOfBirth *xsdDate `xml:"urn:com.workday/bsvc Date_Of_Birth,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DateOfBirth = (*xsdDate)(overlay.T.DateOfBirth)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type BloodTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type BloodTypeObjectType struct {
	ID         []BloodTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type BonusPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type BonusPlanObjectType struct {
	ID         []BonusPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element for the attachments pertaining to a Event entered through a web service.
type BusinessProcessAttachmentDataType struct {
	FileName                         string                             `xml:"urn:com.workday/bsvc File_Name"`
	EventAttachmentDescription       string                             `xml:"urn:com.workday/bsvc Event_Attachment_Description,omitempty"`
	EventAttachmentCategoryReference *EventAttachmentCategoryObjectType `xml:"urn:com.workday/bsvc Event_Attachment_Category_Reference,omitempty"`
	File                             *[]byte                            `xml:"urn:com.workday/bsvc File,omitempty"`
	ContentType                      string                             `xml:"urn:com.workday/bsvc Content_Type,omitempty"`
}

func (t *BusinessProcessAttachmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T BusinessProcessAttachmentDataType
	var layout struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	layout.T = (*T)(t)
	layout.File = (*xsdBase64Binary)(layout.T.File)
	return e.EncodeElement(layout, start)
}
func (t *BusinessProcessAttachmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T BusinessProcessAttachmentDataType
	var overlay struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.File = (*xsdBase64Binary)(overlay.T.File)
	return d.DecodeElement(&overlay, &start)
}

// Captures a comment for the Business Process.
type BusinessProcessCommentDataType struct {
	Comment         string            `xml:"urn:com.workday/bsvc Comment,omitempty"`
	WorkerReference *WorkerObjectType `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
}

// Container for the processing options for a business process. If no options are submitted (or the options are submitted as 'false') then the business process is simply initiated as if it where submitted on-line with approvals, reviews, notifications and to-do's in place. If the Initiator is an Integration System User, any validations you configured on the Initiation step are ignored.
type BusinessProcessParametersType struct {
	AutoComplete                  *bool                               `xml:"urn:com.workday/bsvc Auto_Complete,omitempty"`
	RunNow                        *bool                               `xml:"urn:com.workday/bsvc Run_Now,omitempty"`
	CommentData                   *BusinessProcessCommentDataType     `xml:"urn:com.workday/bsvc Comment_Data,omitempty"`
	BusinessProcessAttachmentData []BusinessProcessAttachmentDataType `xml:"urn:com.workday/bsvc Business_Process_Attachment_Data,omitempty"`
}

// Reference element representing a unique instance of Event Type (e.g. Hire Employee Event, Change Address Event, etc.).
type BusinessProcessTypeReferenceDataType struct {
	EventTypeName string `xml:"urn:com.workday/bsvc Event_Type_Name"`
}

// Utilize the following criteria options to search for Locations within the Workday system.  The Location references that are returned are those that satisfy ALL criteria included in the request.  Therefore, the result set will become more limited with every criteria that is populated.
type BusinessSiteFindType struct {
	LocationName string `xml:"urn:com.workday/bsvc Location_Name,omitempty"`
	Version      string `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Utilize the following Reference element (and other optional attributes) to retrieve an instance of Location and its associated data.
type BusinessSiteGetType struct {
	LocationReference *BusinessSiteReferenceDataType `xml:"urn:com.workday/bsvc Location_Reference"`
	AsOfMoment        time.Time                      `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version           string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *BusinessSiteGetType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T BusinessSiteGetType
	var layout struct {
		*T
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *BusinessSiteGetType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T BusinessSiteGetType
	var overlay struct {
		*T
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Reference element representing a unique instance of Location.
type BusinessSiteReferenceDataType struct {
	IntegrationIDReference *ExternalIntegrationIDReferenceDataType `xml:"urn:com.workday/bsvc Integration_ID_Reference"`
}

type BusinessSiteReferencesRootType struct {
	LocationReference []LocationReferenceWWSType `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	Version           string                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Set of Location Reference elements.
type BusinessSiteReferencesType struct {
	LocationReference []LocationReferenceWWSType `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
}

// Response element containing an instance of Location and its associated data.
type BusinessSiteType struct {
	LocationReference *BusinessSiteReferenceDataType `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	LocationData      *LocationDataType              `xml:"urn:com.workday/bsvc Location_Data,omitempty"`
	AsOfMoment        time.Time                      `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version           string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *BusinessSiteType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T BusinessSiteType
	var layout struct {
		*T
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *BusinessSiteType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T BusinessSiteType
	var overlay struct {
		*T
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Container for the processing options for sub-business processes within a business process. If no options are submitted (or the options are submitted as 'false') then the sub-business process is simply initiated as if it where submitted on-line with approvals, reviews, notifications and to-do's in place. If the Initiator is an Integration System User, any validations you configured on the Initiation step are ignored.
type BusinessSubProcessParametersType struct {
	AutoComplete                  *bool                               `xml:"urn:com.workday/bsvc Auto_Complete,omitempty"`
	Skip                          *bool                               `xml:"urn:com.workday/bsvc Skip,omitempty"`
	BusinessProcessCommentData    *BusinessProcessCommentDataType     `xml:"urn:com.workday/bsvc Business_Process_Comment_Data,omitempty"`
	BusinessProcessAttachmentData []BusinessProcessAttachmentDataType `xml:"urn:com.workday/bsvc Business_Process_Attachment_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CIPCodeWorkdayOwnedObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CIPCodeWorkdayOwnedObjectType struct {
	ID         []CIPCodeWorkdayOwnedObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains COBRA Eligibility detail for a participant.  If this element is not populated then the participant is assumed to not be COBRA eligible.
type COBRAEligibilityDataType struct {
	COBRAEligibilityReasonReference *COBRAEligibilityReasonObjectType `xml:"urn:com.workday/bsvc COBRA_Eligibility_Reason_Reference,omitempty"`
	EligibleDate                    *time.Time                        `xml:"urn:com.workday/bsvc Eligible_Date,omitempty"`
	LossofCoverageDate              *time.Time                        `xml:"urn:com.workday/bsvc Loss_of_Coverage_Date,omitempty"`
	CoverageEndDate                 *time.Time                        `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
	BenefitPlanReference            *BenefitPlanObjectType            `xml:"urn:com.workday/bsvc Benefit_Plan_Reference,omitempty"`
}

func (t *COBRAEligibilityDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T COBRAEligibilityDataType
	var layout struct {
		*T
		EligibleDate       *xsdDate `xml:"urn:com.workday/bsvc Eligible_Date,omitempty"`
		LossofCoverageDate *xsdDate `xml:"urn:com.workday/bsvc Loss_of_Coverage_Date,omitempty"`
		CoverageEndDate    *xsdDate `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EligibleDate = (*xsdDate)(layout.T.EligibleDate)
	layout.LossofCoverageDate = (*xsdDate)(layout.T.LossofCoverageDate)
	layout.CoverageEndDate = (*xsdDate)(layout.T.CoverageEndDate)
	return e.EncodeElement(layout, start)
}
func (t *COBRAEligibilityDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T COBRAEligibilityDataType
	var overlay struct {
		*T
		EligibleDate       *xsdDate `xml:"urn:com.workday/bsvc Eligible_Date,omitempty"`
		LossofCoverageDate *xsdDate `xml:"urn:com.workday/bsvc Loss_of_Coverage_Date,omitempty"`
		CoverageEndDate    *xsdDate `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EligibleDate = (*xsdDate)(overlay.T.EligibleDate)
	overlay.LossofCoverageDate = (*xsdDate)(overlay.T.LossofCoverageDate)
	overlay.CoverageEndDate = (*xsdDate)(overlay.T.CoverageEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type COBRAEligibilityReasonObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type COBRAEligibilityReasonObjectType struct {
	ID         []COBRAEligibilityReasonObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element containing meal times for the Work Schedule Calendar Event.
type CalendarEventNonWorkDataType struct {
	MealIn  time.Time `xml:"urn:com.workday/bsvc Meal_In"`
	MealOut time.Time `xml:"urn:com.workday/bsvc Meal_Out"`
}

func (t *CalendarEventNonWorkDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CalendarEventNonWorkDataType
	var layout struct {
		*T
		MealIn  *xsdTime `xml:"urn:com.workday/bsvc Meal_In"`
		MealOut *xsdTime `xml:"urn:com.workday/bsvc Meal_Out"`
	}
	layout.T = (*T)(t)
	layout.MealIn = (*xsdTime)(&layout.T.MealIn)
	layout.MealOut = (*xsdTime)(&layout.T.MealOut)
	return e.EncodeElement(layout, start)
}
func (t *CalendarEventNonWorkDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CalendarEventNonWorkDataType
	var overlay struct {
		*T
		MealIn  *xsdTime `xml:"urn:com.workday/bsvc Meal_In"`
		MealOut *xsdTime `xml:"urn:com.workday/bsvc Meal_Out"`
	}
	overlay.T = (*T)(t)
	overlay.MealIn = (*xsdTime)(&overlay.T.MealIn)
	overlay.MealOut = (*xsdTime)(&overlay.T.MealOut)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type CareerPreferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CareerPreferenceObjectType struct {
	ID         []CareerPreferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Employees Career Interest Data.
type CareerPreferencesDataType struct {
	CareerInterestReference []CareerPreferenceObjectType `xml:"urn:com.workday/bsvc Career_Interest_Reference,omitempty"`
	CareerInterests         string                       `xml:"urn:com.workday/bsvc Career_Interests,omitempty"`
}

// Wrapper element for Certification information.
type CertificationAchievementDataType struct {
	CertificationID          string                                  `xml:"urn:com.workday/bsvc Certification_ID,omitempty"`
	RemoveCertification      *bool                                   `xml:"urn:com.workday/bsvc Remove_Certification,omitempty"`
	CertificationReference   *CertificationObjectType                `xml:"urn:com.workday/bsvc Certification_Reference,omitempty"`
	CountryReference         *CountryObjectType                      `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	CertificationName        string                                  `xml:"urn:com.workday/bsvc Certification_Name,omitempty"`
	Issuer                   string                                  `xml:"urn:com.workday/bsvc Issuer,omitempty"`
	CertificationNumber      string                                  `xml:"urn:com.workday/bsvc Certification_Number,omitempty"`
	IssuedDate               *time.Time                              `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate           *time.Time                              `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	ExaminationScore         string                                  `xml:"urn:com.workday/bsvc Examination_Score,omitempty"`
	ExaminationDate          *time.Time                              `xml:"urn:com.workday/bsvc Examination_Date,omitempty"`
	SpecialtyAchievementData []SpecialtyAchievementDatawithDatesType `xml:"urn:com.workday/bsvc Specialty_Achievement_Data,omitempty"`
	WorkerDocumentData       []CertificationAttachmentDataType       `xml:"urn:com.workday/bsvc Worker_Document_Data,omitempty"`
}

func (t *CertificationAchievementDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CertificationAchievementDataType
	var layout struct {
		*T
		IssuedDate      *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate  *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		ExaminationDate *xsdDate `xml:"urn:com.workday/bsvc Examination_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.ExaminationDate = (*xsdDate)(layout.T.ExaminationDate)
	return e.EncodeElement(layout, start)
}
func (t *CertificationAchievementDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CertificationAchievementDataType
	var overlay struct {
		*T
		IssuedDate      *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate  *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		ExaminationDate *xsdDate `xml:"urn:com.workday/bsvc Examination_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.ExaminationDate = (*xsdDate)(overlay.T.ExaminationDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper element for Certification information.
type CertificationAchievementType struct {
	CertificationReference *CertificationSkillObjectType      `xml:"urn:com.workday/bsvc Certification_Reference,omitempty"`
	CertificationData      []CertificationAchievementDataType `xml:"urn:com.workday/bsvc Certification_Data"`
}

// Attachments for Certification.
type CertificationAttachmentDataType struct {
	FileName                  string                         `xml:"urn:com.workday/bsvc File_Name"`
	Comment                   string                         `xml:"urn:com.workday/bsvc Comment,omitempty"`
	File                      *[]byte                        `xml:"urn:com.workday/bsvc File,omitempty"`
	DocumentCategoryReference *DocumentCategoryAllObjectType `xml:"urn:com.workday/bsvc Document_Category_Reference"`
	ContentType               string                         `xml:"urn:com.workday/bsvc Content_Type,omitempty"`
}

func (t *CertificationAttachmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CertificationAttachmentDataType
	var layout struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	layout.T = (*T)(t)
	layout.File = (*xsdBase64Binary)(layout.T.File)
	return e.EncodeElement(layout, start)
}
func (t *CertificationAttachmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CertificationAttachmentDataType
	var overlay struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.File = (*xsdBase64Binary)(overlay.T.File)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type CertificationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CertificationObjectType struct {
	ID         []CertificationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Replacement element containing Certification Qualifications for the Job Profile
// When updating a Job Profile, all Certifications for the Job Profile will be replaced by the submitted data. If no data is submitted, then the existing Certifications are not changed.
type CertificationQualificationProfileReplacementDataType struct {
	CountryReference              *CountryObjectType             `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	CertificationReference        *CertificationObjectType       `xml:"urn:com.workday/bsvc Certification_Reference,omitempty"`
	Name                          string                         `xml:"urn:com.workday/bsvc Name,omitempty"`
	Issuer                        string                         `xml:"urn:com.workday/bsvc Issuer,omitempty"`
	Required                      *bool                          `xml:"urn:com.workday/bsvc Required,omitempty"`
	SpecialtyAchievementReference []SpecialtyAchievementDataType `xml:"urn:com.workday/bsvc Specialty_Achievement_Reference,omitempty"`
}

// Wrapper element for Certification Qualifications. Allows all certification qualifications for a Job Profile or Position Restriction to be removed - or to replace all existing certification qualifications with those sent in the web service
type CertificationQualificationReplacementType struct {
	CertificationQualificationReplacementData []CertificationQualificationProfileReplacementDataType `xml:"urn:com.workday/bsvc Certification_Qualification_Replacement_Data,omitempty"`
	Delete                                    bool                                                   `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CertificationSkillObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CertificationSkillObjectType struct {
	ID         []CertificationSkillObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for Additional Name Change web service.
type ChangeAdditionalNameDataType struct {
	WorkerReference *WorkerObjectType        `xml:"urn:com.workday/bsvc Worker_Reference"`
	ReplaceAll      *bool                    `xml:"urn:com.workday/bsvc Replace_All,omitempty"`
	NameData        []AdditionalNameDataType `xml:"urn:com.workday/bsvc Name_Data,omitempty"`
}

// This web service allows updates to the additional names of a worker.
type ChangeAdditionalNamesRequestType struct {
	ChangeAdditionalNamesData *ChangeAdditionalNameDataType `xml:"urn:com.workday/bsvc Change_Additional_Names_Data"`
	Version                   string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response for the Change Additional Names web service request. Includes the worker reference and additional name data.
type ChangeAdditionalNamesResponseType struct {
	PersonAdditionalNameChangeReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Person_Additional_Name_Change_Reference,omitempty"`
	WorkerReference                     *WorkerObjectType           `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	AdditionalNameData                  []AdditionalNameDataType    `xml:"urn:com.workday/bsvc Additional_Name_Data,omitempty"`
	Version                             string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// This web service operation is designed to update an employee's background check status.
type ChangeBackgroundCheckStatusRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	BackgroundCheckStatusData *BackgroundCheckEventDataType  `xml:"urn:com.workday/bsvc Background_Check_Status_Data"`
	Version                   string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// This element contains information on Background Check Event
type ChangeBackgroundCheckStatusResponseType struct {
	EventReference *BackgroundCheckEventObjectType `xml:"urn:com.workday/bsvc Event_Reference,omitempty"`
	Version        string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Change Business Title business process web service.
type ChangeBusinessTitleBusinessProcessDataType struct {
	WorkerReference         *WorkerObjectType            `xml:"urn:com.workday/bsvc Worker_Reference"`
	JobReference            *PositionElementObjectType   `xml:"urn:com.workday/bsvc Job_Reference,omitempty"`
	ChangeBusinessTitleData *ChangeBusinessTitleDataType `xml:"urn:com.workday/bsvc Change_Business_Title_Data,omitempty"`
}

// Container for the data changed in the Change Business Title business process.
type ChangeBusinessTitleDataType struct {
	EventEffectiveDate    time.Time `xml:"urn:com.workday/bsvc Event_Effective_Date"`
	ProposedBusinessTitle string    `xml:"urn:com.workday/bsvc Proposed_Business_Title"`
}

func (t *ChangeBusinessTitleDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ChangeBusinessTitleDataType
	var layout struct {
		*T
		EventEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Event_Effective_Date"`
	}
	layout.T = (*T)(t)
	layout.EventEffectiveDate = (*xsdDate)(&layout.T.EventEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *ChangeBusinessTitleDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ChangeBusinessTitleDataType
	var overlay struct {
		*T
		EventEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Event_Effective_Date"`
	}
	overlay.T = (*T)(t)
	overlay.EventEffectiveDate = (*xsdDate)(&overlay.T.EventEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// This web service allows updates to the Business Title of a worker.
type ChangeBusinessTitleRequestType struct {
	BusinessProcessParameters              *BusinessProcessParametersType              `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangeBusinessTitleBusinessProcessData *ChangeBusinessTitleBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Business_Title_Business_Process_Data"`
	Version                                string                                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Responds with the Event ID for the Change  Business Title Event.
type ChangeBusinessTitleResponseType struct {
	BusinessTitleChangeEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Business_Title_Change_Event_Reference,omitempty"`
	Version                           string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the emergency contact
type ChangeEmergencyContactDataType struct {
	EmergencyContactID                      string                                       `xml:"urn:com.workday/bsvc Emergency_Contact_ID,omitempty"`
	Primary                                 *bool                                        `xml:"urn:com.workday/bsvc Primary,omitempty"`
	Priority                                float64                                      `xml:"urn:com.workday/bsvc Priority"`
	RelatedPersonRelationshipReference      []RelatedPersonRelationshipObjectType        `xml:"urn:com.workday/bsvc Related_Person_Relationship_Reference"`
	LanguageReference                       []LanguageObjectType                         `xml:"urn:com.workday/bsvc Language_Reference,omitempty"`
	EmergencyContactPersonalInformationData *EmergencyContactPersonalInformationDataType `xml:"urn:com.workday/bsvc Emergency_Contact_Personal_Information_Data,omitempty"`
}

// Wrapper element to hold the data for the emergency contacts of a person
type ChangeEmergencyContactsBusinessProcessDataType struct {
	PersonReference                *RoleObjectType                   `xml:"urn:com.workday/bsvc Person_Reference"`
	ReplaceAll                     *bool                             `xml:"urn:com.workday/bsvc Replace_All,omitempty"`
	EmergencyContactsReferenceData []ChangeEmergencyContactsDataType `xml:"urn:com.workday/bsvc Emergency_Contacts_Reference_Data,omitempty"`
}

// Wrapper element to hold reference and data for an emergency contact.
type ChangeEmergencyContactsDataType struct {
	EmergencyContactReference *EmergencyContactObjectType     `xml:"urn:com.workday/bsvc Emergency_Contact_Reference,omitempty"`
	Delete                    *bool                           `xml:"urn:com.workday/bsvc Delete,omitempty"`
	EmergencyContactData      *ChangeEmergencyContactDataType `xml:"urn:com.workday/bsvc Emergency_Contact_Data,omitempty"`
}

// This web service allows the updating of emergency contacts for a person
type ChangeEmergencyContactsRequestType struct {
	BusinessProcessParameters   *BusinessProcessParametersType                  `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangeEmergencyContactsData *ChangeEmergencyContactsBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Emergency_Contacts_Data"`
	Version                     string                                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response for the change emergency contacts web service.
type ChangeEmergencyContactsResponseType struct {
	EmergencyContactEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Emergency_Contact_Event_Reference,omitempty"`
	Version                        string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The element containing all necessary information to put/get an External Form I-9 for a Worker.
type ChangeExternalFormI9ResponseDataType struct {
	ExternalFormI9 []ChangeExternalFormI9Type `xml:"urn:com.workday/bsvc External_Form_I-9,omitempty"`
}

// The element containing all necessary information to put/get an External Form I-9 Section 3 for a Worker.
type ChangeExternalFormI9Section3ResponseDataType struct {
	ExternalFormI9Section3 []ChangeExternalFormI9Section3Type `xml:"urn:com.workday/bsvc External_Form_I-9_Section_3,omitempty"`
}

// The element containing all necessary information to put/get an External Form I-9 Section 3 for a Worker.
type ChangeExternalFormI9Section3Type struct {
	WorkerReference            []WorkerObjectType               `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	ExternalFormI9Section3Data []ExternalFormI9Section3DataType `xml:"urn:com.workday/bsvc External_Form_I-9_Section_3_Data,omitempty"`
}

// The element containing all necessary information to put/get an External Form I-9 for a Worker.
type ChangeExternalFormI9Type struct {
	WorkerReference    []WorkerObjectType       `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	ExternalFormI9Data []ExternalFormI9DataType `xml:"urn:com.workday/bsvc External_Form_I-9_Data,omitempty"`
}

// Allows retrieving government IDs based on request criteria. Request Criteria is only used when government ID reference is not provided
type ChangeGovernmentIDRequestCriteriaType struct {
	PersonTypeCriteriaData *PersonTypeCriteriaType `xml:"urn:com.workday/bsvc Person_Type_Criteria_Data,omitempty"`
}

// Wrapper element for the Government Identifier data.
type ChangeGovernmentIDsBusinessProcessDataType struct {
	PersonReference              *RoleObjectType                   `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference         *UniversalIdentifierObjectType    `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
	GovernmentIdentificationdata *GovernmentIdentificationDataType `xml:"urn:com.workday/bsvc Government_Identification_data"`
}

// This web service allows the updating of government identifiers for a worker.
type ChangeGovernmentIDsRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType              `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangeGovernmentIDsData   *ChangeGovernmentIDsBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Government_IDs_Data"`
	Version                   string                                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the worker data for the Get Change Government IDs response.
type ChangeGovernmentIDsResponseDataType struct {
	ChangeGovernmentIDs []ChangeGovernmentIDsResponseWrapperType `xml:"urn:com.workday/bsvc Change_Government_IDs,omitempty"`
}

// Response for the change government identifier web service.
type ChangeGovernmentIDsResponseType struct {
	GovernmentIdentifierEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Government_Identifier_Event_Reference,omitempty"`
	Version                            string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Change Government IDs Business Process Data element. This is the element that contains the data to load.
type ChangeGovernmentIDsResponseWrapperType struct {
	PersonReference         *RoleObjectType                              `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	ChangeGovernmentIDsData []ChangeGovernmentIDsBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Government_IDs_Data,omitempty"`
}

// Wrapper element for the Home Contact Change business process web service
type ChangeHomeContactInformationBusinessProcessDataType struct {
	PersonReference              *RoleObjectType                   `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference         *UniversalIdentifierObjectType    `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
	EventEffectiveDate           *time.Time                        `xml:"urn:com.workday/bsvc Event_Effective_Date,omitempty"`
	PersonContactInformationData *PersonContactInformationDataType `xml:"urn:com.workday/bsvc Person_Contact_Information_Data"`
}

func (t *ChangeHomeContactInformationBusinessProcessDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ChangeHomeContactInformationBusinessProcessDataType
	var layout struct {
		*T
		EventEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Event_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EventEffectiveDate = (*xsdDate)(layout.T.EventEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *ChangeHomeContactInformationBusinessProcessDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ChangeHomeContactInformationBusinessProcessDataType
	var overlay struct {
		*T
		EventEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Event_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EventEffectiveDate = (*xsdDate)(overlay.T.EventEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Operation allowing the addition of contact information for a person
type ChangeHomeContactInformationRequestType struct {
	BusinessProcessParameters        *BusinessProcessParametersType                       `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangeHomeContactInformationData *ChangeHomeContactInformationBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Home_Contact_Information_Data"`
	Version                          string                                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the person data for the Get Home Contact Information response.
type ChangeHomeContactInformationResponseDataType struct {
	ChangeHomeContactInformation []ChangeHomeContactInformationResponseWrapperType `xml:"urn:com.workday/bsvc Change_Home_Contact_Information,omitempty"`
}

// The Home Contact Change Event created by the corresponding request.
type ChangeHomeContactInformationResponseType struct {
	ChangeHomeContactInformationEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Change_Home_Contact_Information_Event_Reference,omitempty"`
	Version                                    string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Change Home Contact Information Business Process Data element.
type ChangeHomeContactInformationResponseWrapperType struct {
	PersonReference                  *RoleObjectType                                       `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	ChangeHomeContactInformationData []ChangeHomeContactInformationBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Home_Contact_Information_Data,omitempty"`
}

// Wrapper element for the Legal Name Change business process web service.
type ChangeLegalNameBusinessProcessDataType struct {
	PersonReference      *RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference *UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
	EffectiveDate        *time.Time                     `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	NameData             *PersonNameDetailDataType      `xml:"urn:com.workday/bsvc Name_Data"`
}

func (t *ChangeLegalNameBusinessProcessDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ChangeLegalNameBusinessProcessDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *ChangeLegalNameBusinessProcessDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ChangeLegalNameBusinessProcessDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Allows retrieving Legal Name based on request criteria.
type ChangeLegalNameRequestCriteriaType struct {
	PersonTypeCriteriaData *PersonTypeCriteriaType `xml:"urn:com.workday/bsvc Person_Type_Criteria_Data,omitempty"`
}

// This web service allows updates to the legal name of a worker.
type ChangeLegalNameRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType          `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangeLegalNameData       *ChangeLegalNameBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Legal_Name_Data"`
	Version                   string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the worker data for the Get Change Legal Name response
type ChangeLegalNameResponseDataType struct {
	ChangeLegalName []ChangeLegalNameResponseWrapperType `xml:"urn:com.workday/bsvc Change_Legal_Name,omitempty"`
}

// Responds with the Event ID for the Legal Name Change Event.
type ChangeLegalNameResponseType struct {
	LegalNameChangeEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Legal_Name_Change_Event_Reference,omitempty"`
	Version                       string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Change Legal Name Business Process Data element. This is the element that contains data to load.
type ChangeLegalNameResponseWrapperType struct {
	PersonReference     *RoleObjectType                         `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	ChangeLegalNameData *ChangeLegalNameBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Legal_Name_Data,omitempty"`
}

// Allows retrieving License IDs based on request criteria.
type ChangeLicenseIDRequestCriteriaType struct {
	PersonTypeCriteriaData *PersonTypeCriteriaType `xml:"urn:com.workday/bsvc Person_Type_Criteria_Data,omitempty"`
}

// Wrapper element for the License Identifier data.
type ChangeLicensesBusinessProcessDataType struct {
	PersonReference           *RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference      *UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
	LicenseIdentificationData *LicenseIdentificationDataType `xml:"urn:com.workday/bsvc License_Identification_Data"`
}

// This web service allows the updating of license identifiers for a worker.
type ChangeLicensesRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType         `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangeLicensesData        *ChangeLicensesBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Licenses_Data"`
	Version                   string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the worker data for the Get Change Licenses response.
type ChangeLicensesResponseDataType struct {
	ChangeLicenses []ChangeLicensesResponseWrapperType `xml:"urn:com.workday/bsvc Change_Licenses,omitempty"`
}

// Response for the change licenses web service.
type ChangeLicensesResponseType struct {
	LicenseIdentifierEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc License_Identifier_Event_Reference,omitempty"`
	Version                         string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Change Licenses Business Process Data element. This is the element that contains the data to load.
type ChangeLicensesResponseWrapperType struct {
	PersonReference    *RoleObjectType                         `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	ChangeLicensesData []ChangeLicensesBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Licenses_Data,omitempty"`
}

// Allows retrieving Passport and Visa IDs based on request criteria.
type ChangeOtherIDRequestCriteriaType struct {
	PersonTypeCriteriaData *PersonTypeCriteriaType `xml:"urn:com.workday/bsvc Person_Type_Criteria_Data,omitempty"`
}

// Wrapper element for the Other Identifier Data.
type ChangeOtherIDsBusinessProcessDataType struct {
	PersonReference          *RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference     *UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
	CustomIdentificationData *CustomIdentificationDataType  `xml:"urn:com.workday/bsvc Custom_Identification_Data"`
}

// This web service allows the updating of other identifiers for a worker.
type ChangeOtherIDsRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType         `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangeOtherIDsData        *ChangeOtherIDsBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Other_IDs_Data"`
	Version                   string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// element containing the worker data for the Get Change Other IDs response.
type ChangeOtherIDsResponseDataType struct {
	ChangeOtherIDs []ChangeOtherIDsResponseWrapperType `xml:"urn:com.workday/bsvc Change_Other_IDs,omitempty"`
}

// Response for the change other identifier web service.
type ChangeOtherIDsResponseType struct {
	CustomIdentifierEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Custom_Identifier_Event_Reference,omitempty"`
	Version                        string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Change Other IDs Business Process Data element. This is the element that contains the data to load.
type ChangeOtherIDsResponseWrapperType struct {
	PersonReference    *RoleObjectType                         `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	ChangeOtherIDsData []ChangeOtherIDsBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Other_IDs_Data,omitempty"`
}

// Allows retrieving Passport and Visa IDs based on request criteria.
type ChangePassportandVisaRequestCriteriaType struct {
	PersonTypeCriteriaData *PersonTypeCriteriaType `xml:"urn:com.workday/bsvc Person_Type_Criteria_Data,omitempty"`
}

// Wrapper element for the Passport and Visa Identifier data.
type ChangePassportsandVisasBusinessProcessDataType struct {
	PersonReference                     *RoleObjectType                          `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference                *UniversalIdentifierObjectType           `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
	PassportsandVisasIdentificationData *PassportsandVisasIdentificationDataType `xml:"urn:com.workday/bsvc Passports_and_Visas_Identification_Data"`
}

// This web service allows the updating of passport and visa identifiers for a worker.
type ChangePassportsandVisasRequestType struct {
	BusinessProcessParameters   *BusinessProcessParametersType                  `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangePassportsandVisasData *ChangePassportsandVisasBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Passports_and_Visas_Data"`
	Version                     string                                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the worker data for the Get Change Passports and Visas response.
type ChangePassportsandVisasResponseDataType struct {
	ChangePassportsandVisas []ChangePassportsandVisasResponseWrapperType `xml:"urn:com.workday/bsvc Change_Passports_and_Visas,omitempty"`
}

// Response for the change passports and visas identifier web service.
type ChangePassportsandVisasResponseType struct {
	PassportIdentifierEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Passport_Identifier_Event_Reference,omitempty"`
	Version                          string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Change Passports and Visas Business Process Data element. This is the element that contains the data to load.
type ChangePassportsandVisasResponseWrapperType struct {
	PersonReference             *RoleObjectType                                  `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	ChangePassportsandVisasData []ChangePassportsandVisasBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Passports_and_Visas_Data,omitempty"`
}

// Contains data for adding or updating a person's photo.
type ChangePersonPhotoDataType struct {
	PersonReference      *RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference *UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
	PhotoData            *PersonPhotoDataType           `xml:"urn:com.workday/bsvc Photo_Data"`
}

// Wrapper element for the Person Photo HV Data
type ChangePersonPhotoHVDataType struct {
	PersonPhotoData []ChangePersonPhotoDataType `xml:"urn:com.workday/bsvc Person_Photo_Data,omitempty"`
}

// Contains data for adding or updating a person's photo.
type ChangePersonPhotoRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	PersonPhotoData           *ChangePersonPhotoDataType     `xml:"urn:com.workday/bsvc Person_Photo_Data"`
	Version                   string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Submit Person Photo Response information.
type ChangePersonPhotoResponseType struct {
	PhotoChangeEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Photo_Change_Event_Reference,omitempty"`
	Version                   string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Change Personal Information business process web service.
type ChangePersonalInformationBusinessProcessDataType struct {
	WorkerReference         *WorkerObjectType                  `xml:"urn:com.workday/bsvc Worker_Reference"`
	PersonalInformationData *ChangePersonalInformationDataType `xml:"urn:com.workday/bsvc Personal_Information_Data"`
}

// Container for the data changed in the Change Personal Information business process.
type ChangePersonalInformationDataType struct {
	DateofBirth                     *time.Time                        `xml:"urn:com.workday/bsvc Date_of_Birth,omitempty"`
	BirthCountryReference           *CountryObjectType                `xml:"urn:com.workday/bsvc Birth_Country_Reference,omitempty"`
	BirthRegionReference            *CountryRegionObjectType          `xml:"urn:com.workday/bsvc Birth_Region_Reference,omitempty"`
	GenderReference                 *GenderObjectType                 `xml:"urn:com.workday/bsvc Gender_Reference,omitempty"`
	DisabilityInformationData       *DisabilityInformationDataType    `xml:"urn:com.workday/bsvc Disability_Information_Data,omitempty"`
	MaritalStatusReference          *MaritalStatusObjectType          `xml:"urn:com.workday/bsvc Marital_Status_Reference,omitempty"`
	CitizenshipReference            []CitizenshipStatusObjectType     `xml:"urn:com.workday/bsvc Citizenship_Reference,omitempty"`
	PrimaryNationalityReference     *CountryObjectType                `xml:"urn:com.workday/bsvc Primary_Nationality_Reference,omitempty"`
	AdditionalNationalityReference  []CountryObjectType               `xml:"urn:com.workday/bsvc Additional_Nationality_Reference,omitempty"`
	EthnicityReference              []EthnicityObjectType             `xml:"urn:com.workday/bsvc Ethnicity_Reference,omitempty"`
	HispanicorLatino                *bool                             `xml:"urn:com.workday/bsvc Hispanic_or_Latino,omitempty"`
	VisualSurveyEthnicityReference  []EthnicityObjectType             `xml:"urn:com.workday/bsvc Visual_Survey_Ethnicity_Reference,omitempty"`
	HispanicorLatinoforVisualSurvey *bool                             `xml:"urn:com.workday/bsvc Hispanic_or_Latino_for_Visual_Survey,omitempty"`
	ReligionReference               *ReligionObjectType               `xml:"urn:com.workday/bsvc Religion_Reference,omitempty"`
	HukouRegionReference            *CountryRegionObjectType          `xml:"urn:com.workday/bsvc Hukou_Region_Reference,omitempty"`
	HukouSubregionReference         *CountrySubregionObjectType       `xml:"urn:com.workday/bsvc Hukou_Subregion_Reference,omitempty"`
	HukouLocality                   string                            `xml:"urn:com.workday/bsvc Hukou_Locality,omitempty"`
	HukouPostalCode                 string                            `xml:"urn:com.workday/bsvc Hukou_Postal_Code,omitempty"`
	HukouTypeReference              *HukouTypeObjectType              `xml:"urn:com.workday/bsvc Hukou_Type_Reference,omitempty"`
	NativeRegionReference           *CountryRegionObjectType          `xml:"urn:com.workday/bsvc Native_Region_Reference,omitempty"`
	PersonnelFileAgency             string                            `xml:"urn:com.workday/bsvc Personnel_File_Agency,omitempty"`
	MilitaryInformationData         *MilitaryInformationDataType      `xml:"urn:com.workday/bsvc Military_Information_Data,omitempty"`
	PoliticalAffiliationReference   *PoliticalAffiliationObjectType   `xml:"urn:com.workday/bsvc Political_Affiliation_Reference,omitempty"`
	DateofDeath                     *time.Time                        `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
	CityofBirth                     string                            `xml:"urn:com.workday/bsvc City_of_Birth,omitempty"`
	CityofBirthReference            *CountryCityObjectType            `xml:"urn:com.workday/bsvc City_of_Birth_Reference,omitempty"`
	MaritalStatusDate               *time.Time                        `xml:"urn:com.workday/bsvc Marital_Status_Date,omitempty"`
	LastMedicalExamDate             *time.Time                        `xml:"urn:com.workday/bsvc Last_Medical_Exam_Date,omitempty"`
	LastMedicalExamValidTo          *time.Time                        `xml:"urn:com.workday/bsvc Last_Medical_Exam_Valid_To,omitempty"`
	MedicalExamNotes                string                            `xml:"urn:com.workday/bsvc Medical_Exam_Notes,omitempty"`
	BloodTypeReference              *BloodTypeObjectType              `xml:"urn:com.workday/bsvc Blood_Type_Reference,omitempty"`
	UsesTobacco                     *bool                             `xml:"urn:com.workday/bsvc Uses_Tobacco,omitempty"`
	SocialBenefitsLocalityReference *SocialBenefitsLocalityObjectType `xml:"urn:com.workday/bsvc Social_Benefits_Locality_Reference,omitempty"`
	LGBTIdentificationReference     []LGBTIdentificationObjectType    `xml:"urn:com.workday/bsvc LGBT_Identification_Reference,omitempty"`
	SexualOrientationReference      *SexualOrientationObjectType      `xml:"urn:com.workday/bsvc Sexual_Orientation_Reference,omitempty"`
	GenderIdentityReference         *GenderIdentityObjectType         `xml:"urn:com.workday/bsvc Gender_Identity_Reference,omitempty"`
	PronounReference                *PronounObjectType                `xml:"urn:com.workday/bsvc Pronoun_Reference,omitempty"`
	RelativeNameInformationData     *RelativeNameInformationDataType  `xml:"urn:com.workday/bsvc Relative_Name_Information_Data,omitempty"`
}

func (t *ChangePersonalInformationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ChangePersonalInformationDataType
	var layout struct {
		*T
		DateofBirth            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Birth,omitempty"`
		DateofDeath            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
		MaritalStatusDate      *xsdDate `xml:"urn:com.workday/bsvc Marital_Status_Date,omitempty"`
		LastMedicalExamDate    *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Date,omitempty"`
		LastMedicalExamValidTo *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Valid_To,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DateofBirth = (*xsdDate)(layout.T.DateofBirth)
	layout.DateofDeath = (*xsdDate)(layout.T.DateofDeath)
	layout.MaritalStatusDate = (*xsdDate)(layout.T.MaritalStatusDate)
	layout.LastMedicalExamDate = (*xsdDate)(layout.T.LastMedicalExamDate)
	layout.LastMedicalExamValidTo = (*xsdDate)(layout.T.LastMedicalExamValidTo)
	return e.EncodeElement(layout, start)
}
func (t *ChangePersonalInformationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ChangePersonalInformationDataType
	var overlay struct {
		*T
		DateofBirth            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Birth,omitempty"`
		DateofDeath            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
		MaritalStatusDate      *xsdDate `xml:"urn:com.workday/bsvc Marital_Status_Date,omitempty"`
		LastMedicalExamDate    *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Date,omitempty"`
		LastMedicalExamValidTo *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Valid_To,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DateofBirth = (*xsdDate)(overlay.T.DateofBirth)
	overlay.DateofDeath = (*xsdDate)(overlay.T.DateofDeath)
	overlay.MaritalStatusDate = (*xsdDate)(overlay.T.MaritalStatusDate)
	overlay.LastMedicalExamDate = (*xsdDate)(overlay.T.LastMedicalExamDate)
	overlay.LastMedicalExamValidTo = (*xsdDate)(overlay.T.LastMedicalExamValidTo)
	return d.DecodeElement(&overlay, &start)
}

// This web service allows updates to the personal information of a worker.
type ChangePersonalInformationRequestType struct {
	BusinessProcessParameters     *BusinessProcessParametersType                    `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangePersonalInformationData *ChangePersonalInformationBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Personal_Information_Data"`
	Version                       string                                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Responds with the Event ID for the Personal Information Change Event.
type ChangePersonalInformationResponseType struct {
	PersonalInformationChangeEventReference *UniqueIdentifierObjectType        `xml:"urn:com.workday/bsvc Personal_Information_Change_Event_Reference,omitempty"`
	PersonalInformationData                 *ChangePersonalInformationDataType `xml:"urn:com.workday/bsvc Personal_Information_Data,omitempty"`
	Version                                 string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Preferred Name Change business process web service.
type ChangePreferredNameBusinessProcessDataType struct {
	PersonReference             *RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference        *UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
	UseLegalNameAsPreferredName *bool                          `xml:"urn:com.workday/bsvc Use_Legal_Name_As_Preferred_Name,omitempty"`
	NameData                    *PersonNameDetailDataType      `xml:"urn:com.workday/bsvc Name_Data,omitempty"`
}

// Allows retrieving Preferred Name based on request criteria
type ChangePreferredNameRequestCriteriaType struct {
	PersonTypeCriteriaData *PersonTypeCriteriaType `xml:"urn:com.workday/bsvc Person_Type_Criteria_Data,omitempty"`
}

// This web service allows updates to the preferred name of a worker.
type ChangePreferredNameRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType              `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangePreferredNameData   *ChangePreferredNameBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Preferred_Name_Data"`
	Version                   string                                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the worker data for the Get Change Preferred Name response
type ChangePreferredNameResponseDataType struct {
	ChangePreferredName []ChangePreferredNameResponseWrapperType `xml:"urn:com.workday/bsvc Change_Preferred_Name,omitempty"`
}

// Responds with the Event ID for the Preferred Name Change Event.
type ChangePreferredNameResponseType struct {
	PreferredNameChangeEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Preferred_Name_Change_Event_Reference,omitempty"`
	Version                           string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Change Preferred Name Business Process Data element. This is the element that contains data to load.
type ChangePreferredNameResponseWrapperType struct {
	PersonReference         *RoleObjectType                             `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	ChangePreferredNameData *ChangePreferredNameBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Preferred_Name_Data,omitempty"`
}

// The request element containing all necessary information to assign a Veteran Status Identification for a Worker.
type ChangeVeteranStatusIdentificationRequestType struct {
	BusinessProcessParameters             *BusinessProcessParametersType       `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangeVeteranStatusIdentificationData *VeteranStatusIdentificationDataType `xml:"urn:com.workday/bsvc Change_Veteran_Status_Identification_Data"`
	Version                               string                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the worker data for the Veteran Status Identification response.
type ChangeVeteranStatusIdentificationResponseDataType struct {
	ChangeVeteranStatusIdentification []ChangeVeteranStatusIdentificationType `xml:"urn:com.workday/bsvc Change_Veteran_Status_Identification,omitempty"`
}

// The response element containing all necessary information to assign a Veteran Status Identification for a Worker.
type ChangeVeteranStatusIdentificationResponseType struct {
	SelfIdentificationofVeteranStatusEventReference *UniqueIdentifierObjectType           `xml:"urn:com.workday/bsvc Self-Identification_of_Veteran_Status_Event_Reference,omitempty"`
	ChangeVeteranStatusIdentificationData           []VeteranStatusIdentificationDataType `xml:"urn:com.workday/bsvc Change_Veteran_Status_Identification_Data,omitempty"`
	Version                                         string                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// This request element contains the data element for Veteran Status Identification for a Worker.
type ChangeVeteranStatusIdentificationType struct {
	ChangeVeteranStatusIdentificationData []VeteranStatusIdentificationDataType `xml:"urn:com.workday/bsvc Change_Veteran_Status_Identification_Data,omitempty"`
}

// Wrapper element for the Work Contact Change business process web service
type ChangeWorkContactInformationBusinessProcessDataType struct {
	PersonReference              *RoleObjectType                   `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference         *UniversalIdentifierObjectType    `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
	EventEffectiveDate           *time.Time                        `xml:"urn:com.workday/bsvc Event_Effective_Date,omitempty"`
	PersonContactInformationData *PersonContactInformationDataType `xml:"urn:com.workday/bsvc Person_Contact_Information_Data"`
}

func (t *ChangeWorkContactInformationBusinessProcessDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ChangeWorkContactInformationBusinessProcessDataType
	var layout struct {
		*T
		EventEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Event_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EventEffectiveDate = (*xsdDate)(layout.T.EventEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *ChangeWorkContactInformationBusinessProcessDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ChangeWorkContactInformationBusinessProcessDataType
	var overlay struct {
		*T
		EventEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Event_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EventEffectiveDate = (*xsdDate)(overlay.T.EventEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Operation allowing the addition of contact information for a person
type ChangeWorkContactInformationHVType struct {
	BusinessProcessParameters        *BusinessProcessParametersType                       `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangeWorkContactInformationData *ChangeWorkContactInformationBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Work_Contact_Information_Data"`
}

// Operation allowing the addition of contact information for a person
type ChangeWorkContactInformationRequestType struct {
	BusinessProcessParameters        *BusinessProcessParametersType                       `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ChangeWorkContactInformationData *ChangeWorkContactInformationBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Work_Contact_Information_Data"`
	Version                          string                                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the person data for the Get Work Contact Information response.
type ChangeWorkContactInformationResponseDataType struct {
	ChangeWorkContactInformation []ChangeWorkContactInformationResponseWrapperType `xml:"urn:com.workday/bsvc Change_Work_Contact_Information,omitempty"`
}

// The Work Contact Change Event created by the corresponding request.
type ChangeWorkContactInformationResponseType struct {
	ChangeWorkContactInformationEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Change_Work_Contact_Information_Event_Reference,omitempty"`
	Version                                    string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Change Work Contact Information Business Process Data element.
type ChangeWorkContactInformationResponseWrapperType struct {
	PersonReference                  *RoleObjectType                                       `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	ChangeWorkContactInformationData []ChangeWorkContactInformationBusinessProcessDataType `xml:"urn:com.workday/bsvc Change_Work_Contact_Information_Data,omitempty"`
}

// This web service allows updates to the work space location of a filled Position.
type ChangeWorkSpaceRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	WorkSpaceChangeEventData  *WorkSpaceChangeEventDataType  `xml:"urn:com.workday/bsvc Work_Space_Change_Event_Data"`
	Version                   string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Responds with Event ID for the Change Work Space event.
type ChangeWorkSpaceResponseType struct {
	WorkSpaceChangeEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Work_Space_Change_Event_Reference,omitempty"`
	Version                       string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CitizenshipStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CitizenshipStatusObjectType struct {
	ID         []CitizenshipStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Citizenship Status.
type CitizenshipStatusReferenceType struct {
	CitizenshipStatusDescription string                `xml:"urn:com.workday/bsvc Citizenship_Status_Description"`
	CountryReference             *CountryReferenceType `xml:"urn:com.workday/bsvc Country_Reference"`
}

// Encapsulating element containing all Collective Agreement data.
type CollectiveAgreementDetailDataType struct {
	AssignEmployeeCollectiveAgreementEventReference *UniqueIdentifierObjectType           `xml:"urn:com.workday/bsvc Assign_Employee_Collective_Agreement_Event_Reference,omitempty"`
	EffectiveDate                                   *time.Time                            `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	EndAssignmentDate                               *time.Time                            `xml:"urn:com.workday/bsvc End_Assignment_Date,omitempty"`
	CollectiveAgreementData                         []CollectiveAgreementSnapshotDataType `xml:"urn:com.workday/bsvc Collective_Agreement_Data,omitempty"`
}

func (t *CollectiveAgreementDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CollectiveAgreementDetailDataType
	var layout struct {
		*T
		EffectiveDate     *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
		EndAssignmentDate *xsdDate `xml:"urn:com.workday/bsvc End_Assignment_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	layout.EndAssignmentDate = (*xsdDate)(layout.T.EndAssignmentDate)
	return e.EncodeElement(layout, start)
}
func (t *CollectiveAgreementDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CollectiveAgreementDetailDataType
	var overlay struct {
		*T
		EffectiveDate     *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
		EndAssignmentDate *xsdDate `xml:"urn:com.workday/bsvc End_Assignment_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	overlay.EndAssignmentDate = (*xsdDate)(overlay.T.EndAssignmentDate)
	return d.DecodeElement(&overlay, &start)
}

// Container for the collective agreement factor 1 and factor option 1 data.
type CollectiveAgreementFactor1DataType struct {
	CollectiveAgreementFactor1Reference       *CollectiveAgreementFactorObjectType       `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_1_Reference,omitempty"`
	CollectiveAgreementFactorOption1Reference *CollectiveAgreementFactorOptionObjectType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_Option_1_Reference,omitempty"`
}

// Container for the collective agreement factor 2 and factor option 2 data.
type CollectiveAgreementFactor2DataType struct {
	CollectiveAgreementFactor2Reference       *CollectiveAgreementFactorObjectType       `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_2_Reference,omitempty"`
	CollectiveAgreementFactorOption2Reference *CollectiveAgreementFactorOptionObjectType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_Option_2_Reference,omitempty"`
}

// Container for the collective agreement factor 3 and factor option 3 data.
type CollectiveAgreementFactor3DataType struct {
	CollectiveAgreementFactor3Reference       *CollectiveAgreementFactorObjectType       `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_3_Reference,omitempty"`
	CollectiveAgreementFactorOption3Reference *CollectiveAgreementFactorOptionObjectType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_Option_3_Reference,omitempty"`
}

// Container for the collective agreement factor 4 and factor option 4 data.
type CollectiveAgreementFactor4DataType struct {
	CollectiveAgreementFactor4Reference       *CollectiveAgreementFactorObjectType       `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_4_Reference,omitempty"`
	CollectiveAgreementFactorOption4Reference *CollectiveAgreementFactorOptionObjectType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_Option_4_Reference,omitempty"`
}

// Container for the collective agreement factor 5 and factor option 5 data.
type CollectiveAgreementFactor5DataType struct {
	CollectiveAgreementFactor5Reference       *CollectiveAgreementFactorObjectType       `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_5_Reference,omitempty"`
	CollectiveAgreementFactorOption5Reference *CollectiveAgreementFactorOptionObjectType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_Option_5_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CollectiveAgreementFactorObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CollectiveAgreementFactorObjectType struct {
	ID         []CollectiveAgreementFactorObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CollectiveAgreementFactorOptionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CollectiveAgreementFactorOptionObjectType struct {
	ID         []CollectiveAgreementFactorOptionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper for collective agreement factors and factor options.
type CollectiveAgreementFactorOptionsDataType struct {
	CollectiveAgreementFactor1Data *CollectiveAgreementFactor1DataType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_1_Data,omitempty"`
	CollectiveAgreementFactor2Data *CollectiveAgreementFactor2DataType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_2_Data,omitempty"`
	CollectiveAgreementFactor3Data *CollectiveAgreementFactor3DataType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_3_Data,omitempty"`
	CollectiveAgreementFactor4Data *CollectiveAgreementFactor4DataType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_4_Data,omitempty"`
	CollectiveAgreementFactor5Data *CollectiveAgreementFactor5DataType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_5_Data,omitempty"`
}

// Encapsulating Element for the Collective Agreement Snapshot Data.
type CollectiveAgreementFactorParameterDataType struct {
	Order                                    string                                      `xml:"urn:com.workday/bsvc Order,omitempty"`
	CollectiveAgreementFactorReference       *CollectiveAgreementFactorObjectType        `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_Reference,omitempty"`
	CollectiveAgreementFactorOptionReference []CollectiveAgreementFactorOptionObjectType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor_Option_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CollectiveAgreementObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CollectiveAgreementObjectType struct {
	ID         []CollectiveAgreementObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating Element containing the Collective Agreement Classification Parameter Data.
type CollectiveAgreementSnapshotDataType struct {
	CollectiveAgreementReference *CollectiveAgreementObjectType               `xml:"urn:com.workday/bsvc Collective_Agreement_Reference,omitempty"`
	CollectiveAgreementFactor    []CollectiveAgreementFactorParameterDataType `xml:"urn:com.workday/bsvc Collective_Agreement_Factor,omitempty"`
}

// Encapsulating element containing all Collective Agreement data. Including Corrected data.
type CollectiveAgreementSummaryDataType struct {
	CollectiveAgreementData *CollectiveAgreementDetailDataType `xml:"urn:com.workday/bsvc Collective_Agreement_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommissionPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommissionPlanObjectType struct {
	ID         []CommissionPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Container for the Committee Attachment
type CommitteeAttachmentDataType struct {
	CommitteeAttachmentReference *CommitteeAttachmentObjectType `xml:"urn:com.workday/bsvc Committee_Attachment_Reference,omitempty"`
	ID                           string                         `xml:"urn:com.workday/bsvc ID,omitempty"`
	FileName                     string                         `xml:"urn:com.workday/bsvc FileName"`
	File                         *[]byte                        `xml:"urn:com.workday/bsvc File,omitempty"`
	Comment                      string                         `xml:"urn:com.workday/bsvc Comment,omitempty"`
}

func (t *CommitteeAttachmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CommitteeAttachmentDataType
	var layout struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	layout.T = (*T)(t)
	layout.File = (*xsdBase64Binary)(layout.T.File)
	return e.EncodeElement(layout, start)
}
func (t *CommitteeAttachmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CommitteeAttachmentDataType
	var overlay struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.File = (*xsdBase64Binary)(overlay.T.File)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type CommitteeAttachmentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeAttachmentObjectType struct {
	ID         []CommitteeAttachmentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Data for Committee Classification
type CommitteeClassificationDataType struct {
	ID                                    string                                  `xml:"urn:com.workday/bsvc ID,omitempty"`
	Name                                  string                                  `xml:"urn:com.workday/bsvc Name"`
	Inactive                              *bool                                   `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	CommitteeClassificationGroupReference *CommitteeClassificationGroupObjectType `xml:"urn:com.workday/bsvc Committee_Classification_Group_Reference"`
}

// Data Committee Classification Group
type CommitteeClassificationGroupDataType struct {
	ID                              string                              `xml:"urn:com.workday/bsvc ID,omitempty"`
	Name                            string                              `xml:"urn:com.workday/bsvc Name"`
	Inactive                        *bool                               `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	IncludedClassificationReference []CommitteeClassificationObjectType `xml:"urn:com.workday/bsvc Included_Classification_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeClassificationGroupObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeClassificationGroupObjectType struct {
	ID         []CommitteeClassificationGroupObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Committee Classification Group Request Criteria
type CommitteeClassificationGroupRequestCriteriaType struct {
}

// Utilize the Request References element to retrieve a specific instance(s) of a Committee Classification Group and its associated data.
type CommitteeClassificationGroupRequestReferencesType struct {
	CommitteeClassificationGroupReference []CommitteeClassificationGroupObjectType `xml:"urn:com.workday/bsvc Committee_Classification_Group_Reference"`
}

// Documentation Response element containing an instance of a Committee Classification Group and its associated data.
type CommitteeClassificationGroupResponseDataType struct {
	CommitteeClassificationGroup []CommitteeClassificationGroupType `xml:"urn:com.workday/bsvc Committee_Classification_Group,omitempty"`
}

// Committee Classification Group Response Group
type CommitteeClassificationGroupResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Contains the data for a Committee Classification Group.
type CommitteeClassificationGroupType struct {
	CommitteeClassificationGroupReference *CommitteeClassificationGroupObjectType `xml:"urn:com.workday/bsvc Committee_Classification_Group_Reference,omitempty"`
	CommitteeClassificationGroupData      []CommitteeClassificationGroupDataType  `xml:"urn:com.workday/bsvc Committee_Classification_Group_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeClassificationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeClassificationObjectType struct {
	ID         []CommitteeClassificationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Committee Classification Request Criteria
type CommitteeClassificationRequestCriteriaType struct {
}

// Utilize the Request References element to retrieve a specific instance(s) of a Committee Classification and its associated data.
type CommitteeClassificationRequestReferencesType struct {
	CommitteeClassificationReference []CommitteeClassificationObjectType `xml:"urn:com.workday/bsvc Committee_Classification_Reference"`
}

// Get Committee Classifications Response
type CommitteeClassificationResponseDataType struct {
	CommitteeClassification []CommitteeClassificationType `xml:"urn:com.workday/bsvc Committee_Classification,omitempty"`
}

// Committee Classification Response Group
type CommitteeClassificationResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Contains the data for a Committee Classification.
type CommitteeClassificationType struct {
	CommitteeClassificationReference *CommitteeClassificationObjectType `xml:"urn:com.workday/bsvc Committee_Classification_Reference,omitempty"`
	CommitteeClassificationData      []CommitteeClassificationDataType  `xml:"urn:com.workday/bsvc Committee_Classification_Data,omitempty"`
}

// Wrapper element for the Maintain Committee Definition Task
type CommitteeDefinitionDataType struct {
	ID                                string                               `xml:"urn:com.workday/bsvc ID,omitempty"`
	PrivateCommittee                  *bool                                `xml:"urn:com.workday/bsvc Private_Committee,omitempty"`
	IncludeCodeinName                 *bool                                `xml:"urn:com.workday/bsvc Include_Code_in_Name,omitempty"`
	CommitteeTypeReference            *CommitteeTypeObjectType             `xml:"urn:com.workday/bsvc Committee_Type_Reference"`
	IncludeTypeinName                 *bool                                `xml:"urn:com.workday/bsvc Include_Type_in_Name,omitempty"`
	CommitteeSubtypeReference         *OrganizationSubtypeObjectType       `xml:"urn:com.workday/bsvc Committee_Subtype_Reference"`
	IncludeSubtypeinName              *bool                                `xml:"urn:com.workday/bsvc Include_Subtype_in_Name,omitempty"`
	CommitteeClassificationsReference []CommitteeClassificationObjectType  `xml:"urn:com.workday/bsvc Committee_Classifications_Reference,omitempty"`
	Publishable                       *bool                                `xml:"urn:com.workday/bsvc Publishable,omitempty"`
	ExternalURLReference              *ExternalURLObjectType               `xml:"urn:com.workday/bsvc External_URL_Reference,omitempty"`
	CommitteeAttachmentData           []CommitteeAttachmentDataType        `xml:"urn:com.workday/bsvc Committee_Attachment_Data,omitempty"`
	CommitteeDefinitionSnapshotData   *CommitteeDefinitionSnapshotDataType `xml:"urn:com.workday/bsvc Committee_Definition_Snapshot_Data"`
}

// Committee Definition Response
type CommitteeDefinitionResponseDataType struct {
	CommitteeDefinition []CommitteeDefinitionType `xml:"urn:com.workday/bsvc Committee_Definition,omitempty"`
}

// Wrapper element for the Committee Definition Snapshot.
type CommitteeDefinitionSnapshotDataType struct {
	EffectiveDate                          time.Time                                   `xml:"urn:com.workday/bsvc Effective_Date"`
	CommitteeName                          string                                      `xml:"urn:com.workday/bsvc Committee_Name"`
	CommitteeCode                          string                                      `xml:"urn:com.workday/bsvc Committee_Code,omitempty"`
	SponsoringOrganizationReference        *CommitteeSponsoringOrganizationObjectType  `xml:"urn:com.workday/bsvc Sponsoring_Organization_Reference"`
	JobRequisitionReference                []JobRequisitionObjectType                  `xml:"urn:com.workday/bsvc Job_Requisition_Reference,omitempty"`
	SuperiorCommitteeReference             *CommitteeObjectType                        `xml:"urn:com.workday/bsvc Superior_Committee_Reference,omitempty"`
	CommitteeSummary                       string                                      `xml:"urn:com.workday/bsvc Committee_Summary,omitempty"`
	CommitteePurposeDetailed               string                                      `xml:"urn:com.workday/bsvc Committee_Purpose_-_Detailed,omitempty"`
	Inactive                               *bool                                       `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	CommitteeMembershipTargetDataReference []CommitteeMembershipTargetsDataSubeditType `xml:"urn:com.workday/bsvc Committee_Membership_Target_Data_Reference,omitempty"`
}

func (t *CommitteeDefinitionSnapshotDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CommitteeDefinitionSnapshotDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *CommitteeDefinitionSnapshotDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CommitteeDefinitionSnapshotDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Committee Definition Response Data
type CommitteeDefinitionType struct {
	CommitteeDefinitionReference *CommitteeObjectType          `xml:"urn:com.workday/bsvc Committee_Definition_Reference,omitempty"`
	CommitteeDefinitionData      []CommitteeDefinitionDataType `xml:"urn:com.workday/bsvc Committee_Definition_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingActionItemObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingActionItemObjectType struct {
	ID         []CommitteeMeetingActionItemObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Action Item element for everything about Action Items for Committee Meetings
type CommitteeMeetingActionItemSubDataType struct {
	ActionItemReference *CommitteeMeetingActionItemObjectType `xml:"urn:com.workday/bsvc Action_Item_Reference,omitempty"`
	ActionItemID        string                                `xml:"urn:com.workday/bsvc Action_Item_ID,omitempty"`
	Item                string                                `xml:"urn:com.workday/bsvc Item"`
	AssigneeReference   []CommitteeMemberEnabledObjectType    `xml:"urn:com.workday/bsvc Assignee_Reference,omitempty"`
	Details             string                                `xml:"urn:com.workday/bsvc Details,omitempty"`
	Complete            *bool                                 `xml:"urn:com.workday/bsvc Complete,omitempty"`
	Delete              bool                                  `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
	AddOnly             bool                                  `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
}

// Data for Committee Meeting Agenda Item Attachment
type CommitteeMeetingAgendaItemAttachmentDataType struct {
	AttachmentReference *CommitteeMeetingAgendaItemAttachmentObjectType `xml:"urn:com.workday/bsvc Attachment_Reference,omitempty"`
	ID                  string                                          `xml:"urn:com.workday/bsvc ID,omitempty"`
	Filename            string                                          `xml:"urn:com.workday/bsvc Filename"`
	Comment             string                                          `xml:"urn:com.workday/bsvc Comment,omitempty"`
	File                *[]byte                                         `xml:"urn:com.workday/bsvc File,omitempty"`
}

func (t *CommitteeMeetingAgendaItemAttachmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CommitteeMeetingAgendaItemAttachmentDataType
	var layout struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	layout.T = (*T)(t)
	layout.File = (*xsdBase64Binary)(layout.T.File)
	return e.EncodeElement(layout, start)
}
func (t *CommitteeMeetingAgendaItemAttachmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CommitteeMeetingAgendaItemAttachmentDataType
	var overlay struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.File = (*xsdBase64Binary)(overlay.T.File)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingAgendaItemAttachmentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingAgendaItemAttachmentObjectType struct {
	ID         []CommitteeMeetingAgendaItemAttachmentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Holds Agenda Item Attachment Data
type CommitteeMeetingAgendaItemAttachmentsType struct {
	CommitteeMeetingAgendaItemAttachmentData []CommitteeMeetingAgendaItemAttachmentDataType `xml:"urn:com.workday/bsvc Committee_Meeting_Agenda_Item_Attachment_Data,omitempty"`
}

// Data for the Agenda Item
type CommitteeMeetingAgendaItemDataSubeditType struct {
	AgendaItemReference                      *CommitteeMeetingAgendaItemObjectType           `xml:"urn:com.workday/bsvc Agenda_Item_Reference,omitempty"`
	AgendaItemID                             string                                          `xml:"urn:com.workday/bsvc Agenda_Item_ID,omitempty"`
	AgendaItemNumber                         string                                          `xml:"urn:com.workday/bsvc Agenda_Item_Number"`
	AgendaItemDescription                    string                                          `xml:"urn:com.workday/bsvc Agenda_Item_Description"`
	CommitteeMeetingAgendaItemTypeReference  *CommitteeMeetingAgendaItemTypeObjectType       `xml:"urn:com.workday/bsvc Committee_Meeting_Agenda_Item_Type_Reference"`
	AgendaItemPresenter                      string                                          `xml:"urn:com.workday/bsvc Agenda_Item_Presenter,omitempty"`
	AgendaItemDetails                        string                                          `xml:"urn:com.workday/bsvc Agenda_Item_Details,omitempty"`
	RelatedAcademicAppointmentEventReference *UniqueIdentifierObjectType                     `xml:"urn:com.workday/bsvc Related_Academic_Appointment_Event_Reference,omitempty"`
	AgendaItemMinutesData                    *CommitteeMeetingMinutesSubDataType             `xml:"urn:com.workday/bsvc Agenda_Item_Minutes_Data,omitempty"`
	AgendaItemActionItemData                 []CommitteeMeetingActionItemSubDataType         `xml:"urn:com.workday/bsvc Agenda_Item_Action_Item_Data,omitempty"`
	Attachments                              *CommitteeMeetingAgendaItemAttachmentsType      `xml:"urn:com.workday/bsvc Attachments,omitempty"`
	CommitteeMeetingAgendaItemVote           []CommitteeMeetingAgendaItemVoteDataSubeditType `xml:"urn:com.workday/bsvc Committee_Meeting_Agenda_Item_Vote,omitempty"`
	DeleteOnly                               bool                                            `xml:"urn:com.workday/bsvc Delete_Only,attr,omitempty"`
	AddOnly                                  bool                                            `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingAgendaItemObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingAgendaItemObjectType struct {
	ID         []CommitteeMeetingAgendaItemObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingAgendaItemTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingAgendaItemTypeObjectType struct {
	ID         []CommitteeMeetingAgendaItemTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Data for Committee Meeting Agenda Item
type CommitteeMeetingAgendaItemVoteDataSubeditType struct {
	AgendaItemVoteReference               *CommitteeMeetingAgendaItemVoteObjectType   `xml:"urn:com.workday/bsvc Agenda_Item_Vote_Reference,omitempty"`
	PassingVote                           *bool                                       `xml:"urn:com.workday/bsvc Passing_Vote,omitempty"`
	CommitteeMeetingVoteRecordDataSubedit []CommitteeMeetingVoteRecordDataSubeditType `xml:"urn:com.workday/bsvc Committee_Meeting_Vote_Record_Data_Subedit,omitempty"`
	AddOnly                               bool                                        `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingAgendaItemVoteObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingAgendaItemVoteObjectType struct {
	ID         []CommitteeMeetingAgendaItemVoteObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Data for Committee Meeting Attachments
type CommitteeMeetingAttachmentDataType struct {
	AttachmentReference *CommitteeMeetingAttachmentObjectType `xml:"urn:com.workday/bsvc Attachment_Reference,omitempty"`
	ID                  string                                `xml:"urn:com.workday/bsvc ID,omitempty"`
	Filename            string                                `xml:"urn:com.workday/bsvc Filename"`
	Comment             string                                `xml:"urn:com.workday/bsvc Comment,omitempty"`
	File                *[]byte                               `xml:"urn:com.workday/bsvc File,omitempty"`
}

func (t *CommitteeMeetingAttachmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CommitteeMeetingAttachmentDataType
	var layout struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	layout.T = (*T)(t)
	layout.File = (*xsdBase64Binary)(layout.T.File)
	return e.EncodeElement(layout, start)
}
func (t *CommitteeMeetingAttachmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CommitteeMeetingAttachmentDataType
	var overlay struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.File = (*xsdBase64Binary)(overlay.T.File)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingAttachmentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingAttachmentObjectType struct {
	ID         []CommitteeMeetingAttachmentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Holds Committee Meeting Attachments
type CommitteeMeetingAttachmentsType struct {
	CommitteeMeetingAttachmentData []CommitteeMeetingAttachmentDataType `xml:"urn:com.workday/bsvc Committee_Meeting_Attachment_Data,omitempty"`
}

// Data about the Committee Meeting
type CommitteeMeetingDataType struct {
	CommitteeMeetingID                string                                      `xml:"urn:com.workday/bsvc Committee_Meeting_ID,omitempty"`
	CommitteeReference                *CommitteeObjectType                        `xml:"urn:com.workday/bsvc Committee_Reference"`
	CommitteeMeetingStatusReference   *CommitteeMeetingStatusObjectType           `xml:"urn:com.workday/bsvc Committee_Meeting_Status_Reference"`
	CommitteeMeetingHost              string                                      `xml:"urn:com.workday/bsvc Committee_Meeting_Host,omitempty"`
	CommitteeMeetingTypeReference     *CommitteeMeetingTypeObjectType             `xml:"urn:com.workday/bsvc Committee_Meeting_Type_Reference"`
	CommitteeMeetingSubject           string                                      `xml:"urn:com.workday/bsvc Committee_Meeting_Subject"`
	CommitteeMeetingAbstract          string                                      `xml:"urn:com.workday/bsvc Committee_Meeting_Abstract,omitempty"`
	CommitteeMeetingDate              time.Time                                   `xml:"urn:com.workday/bsvc Committee_Meeting_Date"`
	CommitteeMeetingTime              time.Time                                   `xml:"urn:com.workday/bsvc Committee_Meeting_Time"`
	CommitteeMeetingTimeZoneReference *TimeZoneObjectType                         `xml:"urn:com.workday/bsvc Committee_Meeting_Time_Zone_Reference"`
	DurationinHours                   float64                                     `xml:"urn:com.workday/bsvc Duration_in_Hours"`
	CommitteeMeetingLocation          string                                      `xml:"urn:com.workday/bsvc Committee_Meeting_Location,omitempty"`
	CommitteeMeetingInviteAllMembers  *bool                                       `xml:"urn:com.workday/bsvc Committee_Meeting_Invite_All_Members,omitempty"`
	CommitteeMemberReference          []CommitteeMemberEnabledObjectType          `xml:"urn:com.workday/bsvc Committee_Member_Reference,omitempty"`
	CommitteeMeetingAttendeeReference []CommitteeMemberEnabledObjectType          `xml:"urn:com.workday/bsvc Committee_Meeting_Attendee_Reference,omitempty"`
	CommitteeMeetingMinutesData       *CommitteeMeetingMinutesSubDataType         `xml:"urn:com.workday/bsvc Committee_Meeting_Minutes_Data,omitempty"`
	Attachments                       *CommitteeMeetingAttachmentsType            `xml:"urn:com.workday/bsvc Attachments,omitempty"`
	CommitteeMeetingActionItemData    []CommitteeMeetingActionItemSubDataType     `xml:"urn:com.workday/bsvc Committee_Meeting_Action_Item_Data,omitempty"`
	CommitteeMeetingAgendaItemData    []CommitteeMeetingAgendaItemDataSubeditType `xml:"urn:com.workday/bsvc Committee_Meeting_Agenda_Item_Data,omitempty"`
}

func (t *CommitteeMeetingDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CommitteeMeetingDataType
	var layout struct {
		*T
		CommitteeMeetingDate *xsdDate `xml:"urn:com.workday/bsvc Committee_Meeting_Date"`
		CommitteeMeetingTime *xsdTime `xml:"urn:com.workday/bsvc Committee_Meeting_Time"`
	}
	layout.T = (*T)(t)
	layout.CommitteeMeetingDate = (*xsdDate)(&layout.T.CommitteeMeetingDate)
	layout.CommitteeMeetingTime = (*xsdTime)(&layout.T.CommitteeMeetingTime)
	return e.EncodeElement(layout, start)
}
func (t *CommitteeMeetingDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CommitteeMeetingDataType
	var overlay struct {
		*T
		CommitteeMeetingDate *xsdDate `xml:"urn:com.workday/bsvc Committee_Meeting_Date"`
		CommitteeMeetingTime *xsdTime `xml:"urn:com.workday/bsvc Committee_Meeting_Time"`
	}
	overlay.T = (*T)(t)
	overlay.CommitteeMeetingDate = (*xsdDate)(&overlay.T.CommitteeMeetingDate)
	overlay.CommitteeMeetingTime = (*xsdTime)(&overlay.T.CommitteeMeetingTime)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingMinutesObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingMinutesObjectType struct {
	ID         []CommitteeMeetingMinutesObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Data element for everything about Minutes
type CommitteeMeetingMinutesSubDataType struct {
	MinutesReference          *CommitteeMeetingMinutesObjectType `xml:"urn:com.workday/bsvc Minutes_Reference,omitempty"`
	Details                   string                             `xml:"urn:com.workday/bsvc Details,omitempty"`
	CommitteeMeetingMinutesID string                             `xml:"urn:com.workday/bsvc Committee_Meeting_Minutes_ID,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingObjectType struct {
	ID         []CommitteeMeetingObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request Criteria for Committee Meeting
type CommitteeMeetingRequestCriteriaType struct {
}

// Reference Element for Committee Meeting
type CommitteeMeetingRequestReferencesType struct {
	CommitteeMeetingReference []CommitteeMeetingObjectType `xml:"urn:com.workday/bsvc Committee_Meeting_Reference"`
}

// Response element for Get Committee Meetings
type CommitteeMeetingResponseDataType struct {
	CommitteeMeeting []CommitteeMeetingType `xml:"urn:com.workday/bsvc Committee_Meeting,omitempty"`
}

// Response Group for committee meeting
type CommitteeMeetingResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingStatusObjectType struct {
	ID         []CommitteeMeetingStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Committee Meeting Element
type CommitteeMeetingType struct {
	CommitteeMeetingReference *CommitteeMeetingObjectType `xml:"urn:com.workday/bsvc Committee_Meeting_Reference,omitempty"`
	CommitteeMeetingData      *CommitteeMeetingDataType   `xml:"urn:com.workday/bsvc Committee_Meeting_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingTypeObjectType struct {
	ID         []CommitteeMeetingTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Data for Committee Meeting Vote Record
type CommitteeMeetingVoteRecordDataSubeditType struct {
	AgendaItemVoteRecordReference *CommitteeMeetingVoteRecordObjectType `xml:"urn:com.workday/bsvc Agenda_Item_Vote_Record_Reference,omitempty"`
	VoteStatusReference           *CommitteeMeetingVoteStatusObjectType `xml:"urn:com.workday/bsvc Vote_Status_Reference,omitempty"`
	VoteCount                     float64                               `xml:"urn:com.workday/bsvc Vote_Count,omitempty"`
	AddOnly                       bool                                  `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Delete                        bool                                  `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingVoteRecordObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingVoteRecordObjectType struct {
	ID         []CommitteeMeetingVoteRecordObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMeetingVoteStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMeetingVoteStatusObjectType struct {
	ID         []CommitteeMeetingVoteStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMemberEnabledObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMemberEnabledObjectType struct {
	ID         []CommitteeMemberEnabledObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMembershipTargetObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMembershipTargetObjectType struct {
	ID         []CommitteeMembershipTargetObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Container for Membership Targets
type CommitteeMembershipTargetsDataSubeditType struct {
	CommitteeMembershipTargetReference *CommitteeMembershipTargetObjectType `xml:"urn:com.workday/bsvc Committee_Membership_Target_Reference,omitempty"`
	CommitteeMembershipTypeReference   *CommitteeMembershipTypeObjectType   `xml:"urn:com.workday/bsvc Committee_Membership_Type_Reference,omitempty"`
	TargetQuantity                     float64                              `xml:"urn:com.workday/bsvc Target_Quantity,omitempty"`
	UnlimitedQuantity                  *bool                                `xml:"urn:com.workday/bsvc Unlimited_Quantity,omitempty"`
	DeleteOnly                         bool                                 `xml:"urn:com.workday/bsvc Delete_Only,attr,omitempty"`
	AddOnly                            bool                                 `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
}

// Data for Committee Membership Type
type CommitteeMembershipTypeDataType struct {
	ID       string `xml:"urn:com.workday/bsvc ID,omitempty"`
	Name     string `xml:"urn:com.workday/bsvc Name"`
	Inactive *bool  `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeMembershipTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeMembershipTypeObjectType struct {
	ID         []CommitteeMembershipTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Committee Membership  Type Request Criteria
type CommitteeMembershipTypeRequestCriteriaType struct {
}

// Utilize the Request References element to retrieve a specific instance(s) of a Committee Member Type and its associated data
type CommitteeMembershipTypeRequestReferencesType struct {
	CommitteeMembershipTypeReference []CommitteeMembershipTypeObjectType `xml:"urn:com.workday/bsvc Committee_Membership_Type_Reference"`
}

// Response element containing an instances of committee member type and their associated data
type CommitteeMembershipTypeResponseDataType struct {
	CommitteeMembershipType []CommitteeMembershipTypeType `xml:"urn:com.workday/bsvc Committee_Membership_Type,omitempty"`
}

// Committee Membership Type Response Group
type CommitteeMembershipTypeResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Contains the data for a Committee Membership Type
type CommitteeMembershipTypeType struct {
	CommitteeMembershipTypeReference *CommitteeMembershipTypeObjectType `xml:"urn:com.workday/bsvc Committee_Membership_Type_Reference,omitempty"`
	CommitteeMembershipTypeData      []CommitteeMembershipTypeDataType  `xml:"urn:com.workday/bsvc Committee_Membership_Type_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeObjectType struct {
	ID         []CommitteeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeSponsoringOrganizationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeSponsoringOrganizationObjectType struct {
	ID         []CommitteeSponsoringOrganizationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Data for Committee Type
type CommitteeTypeDataType struct {
	ID              string `xml:"urn:com.workday/bsvc ID,omitempty"`
	Name            string `xml:"urn:com.workday/bsvc Name"`
	SearchCommittee *bool  `xml:"urn:com.workday/bsvc Search_Committee,omitempty"`
	Inactive        *bool  `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommitteeTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommitteeTypeObjectType struct {
	ID         []CommitteeTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Committee Type Request Criteria
type CommitteeTypeRequestCriteriaType struct {
}

// Committee Type Request References
type CommitteeTypeRequestReferencesType struct {
	CommitteeTypeReference []CommitteeTypeObjectType `xml:"urn:com.workday/bsvc Committee_Type_Reference"`
}

// Committee Type Response Data
type CommitteeTypeResponseDataType struct {
	CommitteeType []CommitteeTypeType `xml:"urn:com.workday/bsvc Committee_Type,omitempty"`
}

// Committee Type Response Group
type CommitteeTypeResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Committee Type
type CommitteeTypeType struct {
	CommitteeTypeReference *CommitteeTypeObjectType `xml:"urn:com.workday/bsvc Committee_Type_Reference,omitempty"`
	CommitteeTypeData      *CommitteeTypeDataType   `xml:"urn:com.workday/bsvc Committee_Type_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommonBooleanEnumerationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommonBooleanEnumerationObjectType struct {
	ID         []CommonBooleanEnumerationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommonYesNoObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommonYesNoObjectType struct {
	ID         []CommonYesNoObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element for all Communication Method Usage data.
type CommunicationMethodUsageDataType struct {
	TypeReference   []CommunicationUsageTypeReferenceType `xml:"urn:com.workday/bsvc Type_Reference"`
	UseForReference []string                              `xml:"urn:com.workday/bsvc Use_For_Reference,omitempty"`
	Comments        string                                `xml:"urn:com.workday/bsvc Comments,omitempty"`
	Public          bool                                  `xml:"urn:com.workday/bsvc Public,attr,omitempty"`
}

// Encapsulating element for all Communication Method Usage data.
type CommunicationMethodUsageInformationDataType struct {
	TypeData                []CommunicationUsageTypeDataType               `xml:"urn:com.workday/bsvc Type_Data"`
	UseForReference         []CommunicationUsageBehaviorObjectType         `xml:"urn:com.workday/bsvc Use_For_Reference,omitempty"`
	UseForTenantedReference []CommunicationUsageBehaviorTenantedObjectType `xml:"urn:com.workday/bsvc Use_For_Tenanted_Reference,omitempty"`
	Comments                string                                         `xml:"urn:com.workday/bsvc Comments,omitempty"`
	Public                  bool                                           `xml:"urn:com.workday/bsvc Public,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommunicationUsageBehaviorObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommunicationUsageBehaviorObjectType struct {
	ID         []CommunicationUsageBehaviorObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommunicationUsageBehaviorTenantedObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommunicationUsageBehaviorTenantedObjectType struct {
	ID         []CommunicationUsageBehaviorTenantedObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference ID for the communication usage type.
type CommunicationUsageTypeDataType struct {
	TypeReference *CommunicationUsageTypeObjectType `xml:"urn:com.workday/bsvc Type_Reference"`
	Primary       bool                              `xml:"urn:com.workday/bsvc Primary,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CommunicationUsageTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CommunicationUsageTypeObjectType struct {
	ID         []CommunicationUsageTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Communication Usage Type.
type CommunicationUsageTypeReferenceType struct {
	Value   string `xml:",chardata"`
	Primary bool   `xml:"urn:com.workday/bsvc Primary,attr,omitempty"`
}

// Element containing the Company Insider Type data for a job profile.
type CompanyInsiderJobProfileDataType struct {
	CompanyInsiderTypeReference *CompanyInsiderTypeObjectType `xml:"urn:com.workday/bsvc Company_Insider_Type_Reference"`
	Delete                      bool                          `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Element containing all company insider type data.
type CompanyInsiderTypeDataType struct {
	CompanyInsiderTypeID          string `xml:"urn:com.workday/bsvc Company_Insider_Type_ID,omitempty"`
	CompanyInsiderTypeName        string `xml:"urn:com.workday/bsvc Company_Insider_Type_Name,omitempty"`
	CompanyInsiderTypeDescription string `xml:"urn:com.workday/bsvc Company_Insider_Type_Description,omitempty"`
	Inactive                      *bool  `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CompanyInsiderTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CompanyInsiderTypeObjectType struct {
	ID         []CompanyInsiderTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Company Insider Type.
type CompanyInsiderTypeReferenceType struct {
	CompanyInsiderTypeName string `xml:"urn:com.workday/bsvc Company_Insider_Type_Name"`
}

// Element containing reference instance for a Company Insider Type
type CompanyInsiderTypeRequestReferencesType struct {
	CompanyInsiderTypeReference []CompanyInsiderTypeObjectType `xml:"urn:com.workday/bsvc Company_Insider_Type_Reference"`
}

// Wrapper element that includes Company Insider reference instance and Company Insider Type data.
type CompanyInsiderTypeResponseDataType struct {
	CompanyInsiderType []CompanyInsiderTypeType `xml:"urn:com.workday/bsvc Company_Insider_Type,omitempty"`
}

// Element containing company insider type reference and data.
type CompanyInsiderTypeType struct {
	CompanyInsiderTypeReference *CompanyInsiderTypeObjectType `xml:"urn:com.workday/bsvc Company_Insider_Type_Reference,omitempty"`
	CompanyInsiderTypeData      []CompanyInsiderTypeDataType  `xml:"urn:com.workday/bsvc Company_Insider_Type_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CompanyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CompanyObjectType struct {
	ID         []CompanyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Data element containing the compensation guidelines for a compensation change.
type CompensatableGuidelinesDataType struct {
	CompensationPackageReference      *CompensationPackageObjectType      `xml:"urn:com.workday/bsvc Compensation_Package_Reference,omitempty"`
	CompensationGradeReference        *CompensationGradeObjectType        `xml:"urn:com.workday/bsvc Compensation_Grade_Reference,omitempty"`
	CompensationGradeProfileReference *CompensationGradeProfileObjectType `xml:"urn:com.workday/bsvc Compensation_Grade_Profile_Reference,omitempty"`
	CompensationStepReference         *CompensationStepObjectType         `xml:"urn:com.workday/bsvc Compensation_Step_Reference,omitempty"`
	ProgressionStartDate              *time.Time                          `xml:"urn:com.workday/bsvc Progression_Start_Date,omitempty"`
}

func (t *CompensatableGuidelinesDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CompensatableGuidelinesDataType
	var layout struct {
		*T
		ProgressionStartDate *xsdDate `xml:"urn:com.workday/bsvc Progression_Start_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ProgressionStartDate = (*xsdDate)(layout.T.ProgressionStartDate)
	return e.EncodeElement(layout, start)
}
func (t *CompensatableGuidelinesDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CompensatableGuidelinesDataType
	var overlay struct {
		*T
		ProgressionStartDate *xsdDate `xml:"urn:com.workday/bsvc Progression_Start_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProgressionStartDate = (*xsdDate)(overlay.T.ProgressionStartDate)
	return d.DecodeElement(&overlay, &start)
}

// Data element containing annualized summary compensation information for a worker.
type CompensatableSummaryAmountAnnualizedDataType struct {
	TotalBasePay             float64              `xml:"urn:com.workday/bsvc Total_Base_Pay,omitempty"`
	TotalSalaryandAllowances float64              `xml:"urn:com.workday/bsvc Total_Salary_and_Allowances,omitempty"`
	PrimaryCompensationBasis float64              `xml:"urn:com.workday/bsvc Primary_Compensation_Basis,omitempty"`
	CurrencyReference        *CurrencyObjectType  `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference       *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
}

// Data element containing annualized summary compensation information for a worker in the default currency.
type CompensatableSummaryAmountAnnualizedInReportingCurrencyDataType struct {
	TotalBasePay             float64              `xml:"urn:com.workday/bsvc Total_Base_Pay,omitempty"`
	TotalSalaryandAllowances float64              `xml:"urn:com.workday/bsvc Total_Salary_and_Allowances,omitempty"`
	PrimaryCompensationBasis float64              `xml:"urn:com.workday/bsvc Primary_Compensation_Basis,omitempty"`
	CurrencyReference        *CurrencyObjectType  `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference       *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
}

// Data element containing summary compensation information for the worker.
type CompensatableSummaryAmountDataType struct {
	TotalBasePay             float64              `xml:"urn:com.workday/bsvc Total_Base_Pay,omitempty"`
	TotalSalaryandAllowances float64              `xml:"urn:com.workday/bsvc Total_Salary_and_Allowances,omitempty"`
	PrimaryCompensationBasis float64              `xml:"urn:com.workday/bsvc Primary_Compensation_Basis,omitempty"`
	CurrencyReference        *CurrencyObjectType  `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference       *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
}

// Data element containing summary compensation information for the worker in an hourly frequency when the worker has at least one hourly pay plan assigned.
type CompensatableSummaryAmountHourlyDataType struct {
	TotalBasePay       float64              `xml:"urn:com.workday/bsvc Total_Base_Pay,omitempty"`
	CurrencyReference  *CurrencyObjectType  `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
}

// Data element containing summary compensation information for a worker converted to their pay group frequency.
type CompensatableSummaryAmountInTargetFrequencyDataType struct {
	TotalBasePay             float64              `xml:"urn:com.workday/bsvc Total_Base_Pay,omitempty"`
	TotalSalaryandAllowances float64              `xml:"urn:com.workday/bsvc Total_Salary_and_Allowances,omitempty"`
	PrimaryCompensationBasis float64              `xml:"urn:com.workday/bsvc Primary_Compensation_Basis,omitempty"`
	CurrencyReference        *CurrencyObjectType  `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference       *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
}

// Wrapper element containing summary compensation information for a position.  The information is in the position's compensation currency and frequency, annualized, and annualized in the default currency.
type CompensatableSummaryDataType struct {
	EmployeeCompensationSummaryData          *CompensatableSummaryAmountDataType                              `xml:"urn:com.workday/bsvc Employee_Compensation_Summary_Data,omitempty"`
	AnnualizedSummaryData                    *CompensatableSummaryAmountAnnualizedDataType                    `xml:"urn:com.workday/bsvc Annualized_Summary_Data,omitempty"`
	SummaryDatainPayGroupFrequency           *CompensatableSummaryAmountInTargetFrequencyDataType             `xml:"urn:com.workday/bsvc Summary_Data_in_Pay_Group_Frequency,omitempty"`
	AnnualizedinReportingCurrencySummaryData *CompensatableSummaryAmountAnnualizedInReportingCurrencyDataType `xml:"urn:com.workday/bsvc Annualized_in_Reporting_Currency_Summary_Data,omitempty"`
	SummaryDatainHourlyFrequency             *CompensatableSummaryAmountHourlyDataType                        `xml:"urn:com.workday/bsvc Summary_Data_in_Hourly_Frequency,omitempty"`
}

// Encapsulating element containg all Compensation Data.
type CompensationDataType struct {
	EffectiveDate           *time.Time                   `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	SummaryCompensationData *CompensationSummaryDataType `xml:"urn:com.workday/bsvc Summary_Compensation_Data,omitempty"`
}

func (t *CompensationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CompensationDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *CompensationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CompensationDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Compesation Detail data.
type CompensationDetailDataType struct {
	CompensationPackageReference         *CompensationPackageReferenceType                         `xml:"urn:com.workday/bsvc Compensation_Package_Reference"`
	CompensationGradeReference           *CompensationGradeReferenceType                           `xml:"urn:com.workday/bsvc Compensation_Grade_Reference"`
	CompensationGradeProfileReference    *CompensationGradeProfileReferenceType                    `xml:"urn:com.workday/bsvc Compensation_Grade_Profile_Reference,omitempty"`
	CompensationStepReference            *CompensationStepReferenceDataType                        `xml:"urn:com.workday/bsvc Compensation_Step_Reference,omitempty"`
	SalaryPlanforCompensationData        []EmployeeCompensationSalaryPlanAssignmentDataType        `xml:"urn:com.workday/bsvc Salary_Plan_for_Compensation_Data,omitempty"`
	HourlyPlanforCompensationData        []EmployeeCompensationHourlyPlanAssignmentDataType        `xml:"urn:com.workday/bsvc Hourly_Plan_for_Compensation_Data,omitempty"`
	UnitSalaryPlanforCompensationData    []EmployeeCompensationSalaryUnitPlanAssignmentDataType    `xml:"urn:com.workday/bsvc Unit_Salary_Plan_for_Compensation_Data,omitempty"`
	AllowancePlanforCompensationData     []EmployeeCompensationAllowancePlanAssignmentDataType     `xml:"urn:com.workday/bsvc Allowance_Plan_for_Compensation_Data,omitempty"`
	UnitAllowancePlanforCompensationData []EmployeeCompensationAllowanceUnitPlanAssignmentDataType `xml:"urn:com.workday/bsvc Unit_Allowance_Plan_for_Compensation_Data,omitempty"`
	BonusPlanforCompensationData         []EmployeeCompensationBonusPlanAssignmentDataType         `xml:"urn:com.workday/bsvc Bonus_Plan_for_Compensation_Data,omitempty"`
	MeritPlanforCompensationData         []EmployeeCompensationMeritPlanAssignmentDataType         `xml:"urn:com.workday/bsvc Merit_Plan_for_Compensation_Data,omitempty"`
	CommissionPlanforCompensationData    []EmployeeCompensationCommissionPlanAssignmentDataType    `xml:"urn:com.workday/bsvc Commission_Plan_for_Compensation_Data,omitempty"`
	PeriodSalaryPlanforCompensationData  []EmployeeCompensationPeriodSalaryPlanAssignmentDataType  `xml:"urn:com.workday/bsvc Period_Salary_Plan_for_Compensation_Data,omitempty"`
}

// Reference element representing a unique instance of Compensation Element.
type CompensationElementReferenceType struct {
	CompensationElementName string `xml:"urn:com.workday/bsvc Compensation_Element_Name"`
}

// Contains a unique identifier for an instance of an object.
type CompensationGradeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CompensationGradeObjectType struct {
	ID         []CompensationGradeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CompensationGradeProfileObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CompensationGradeProfileObjectType struct {
	ID         []CompensationGradeProfileObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Profile within the Compensation Grade to assign.   Does not default for Request Compensation Change.
type CompensationGradeProfileReferenceType struct {
	CompensationProfileName    string                          `xml:"urn:com.workday/bsvc Compensation_Profile_Name"`
	CompensationGradeReference *CompensationGradeReferenceType `xml:"urn:com.workday/bsvc Compensation_Grade_Reference"`
}

// Compensation grade to assign. Required if you select a compensation package. Doesn't default for Request Compensation Change.
type CompensationGradeReferenceType struct {
	CompensationGradeName string `xml:"urn:com.workday/bsvc Compensation_Grade_Name"`
}

// Contains a unique identifier for an instance of an object.
type CompensationMatrixObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CompensationMatrixObjectType struct {
	ID         []CompensationMatrixObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CompensationPackageObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CompensationPackageObjectType struct {
	ID         []CompensationPackageObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Compensation Package to assign.
type CompensationPackageReferenceType struct {
	CompensationPackageName string `xml:"urn:com.workday/bsvc Compensation_Package_Name"`
}

// Contains a unique identifier for an instance of an object.
type CompensationPayEarningObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CompensationPayEarningObjectType struct {
	ID         []CompensationPayEarningObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CompensationPeriodObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CompensationPeriodObjectType struct {
	ID         []CompensationPeriodObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CompensationStepObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CompensationStepObjectType struct {
	ID         []CompensationStepObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Compensation Step within the Compensation Grade Profile.
type CompensationStepReferenceDataType struct {
	CompensationStepName string     `xml:"urn:com.workday/bsvc Compensation_Step_Name"`
	ProgressionStartDate *time.Time `xml:"urn:com.workday/bsvc Progression_Start_Date,omitempty"`
}

func (t *CompensationStepReferenceDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CompensationStepReferenceDataType
	var layout struct {
		*T
		ProgressionStartDate *xsdDate `xml:"urn:com.workday/bsvc Progression_Start_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ProgressionStartDate = (*xsdDate)(layout.T.ProgressionStartDate)
	return e.EncodeElement(layout, start)
}
func (t *CompensationStepReferenceDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CompensationStepReferenceDataType
	var overlay struct {
		*T
		ProgressionStartDate *xsdDate `xml:"urn:com.workday/bsvc Progression_Start_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProgressionStartDate = (*xsdDate)(overlay.T.ProgressionStartDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containg a brief summary of Compensation data.
type CompensationSummaryDataType struct {
	TotalCompensation  float64                     `xml:"urn:com.workday/bsvc Total_Compensation,omitempty"`
	TotalBasePay       float64                     `xml:"urn:com.workday/bsvc Total_Base_Pay,omitempty"`
	CurrencyReference  *CurrencyReferenceDataType  `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference *FrequencyReferenceDataType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
}

// Wrapper element for Competency Data.
type CompetencyAchievementDatav10Type struct {
	CompetencyLevelBehaviorReference  *ProficiencyRatingBehaviorObjectType `xml:"urn:com.workday/bsvc Competency_Level_Behavior_Reference,omitempty"`
	CompetencyLevelBehaviorDescriptor string                               `xml:"urn:com.workday/bsvc Competency_Level_Behavior_Descriptor,omitempty"`
	AssessmentComment                 string                               `xml:"urn:com.workday/bsvc Assessment_Comment,omitempty"`
	AssessedOn                        *time.Time                           `xml:"urn:com.workday/bsvc Assessed_On,omitempty"`
	AssessedByPersonReference         *RoleObjectType                      `xml:"urn:com.workday/bsvc Assessed_By_Person_Reference,omitempty"`
	AssessedByWorkerDescriptor        string                               `xml:"urn:com.workday/bsvc Assessed_By_Worker_Descriptor,omitempty"`
	CompetencyReference               *CompetencyObjectType                `xml:"urn:com.workday/bsvc Competency_Reference"`
	CompetencyDescriptor              string                               `xml:"urn:com.workday/bsvc Competency_Descriptor,omitempty"`
}

func (t *CompetencyAchievementDatav10Type) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CompetencyAchievementDatav10Type
	var layout struct {
		*T
		AssessedOn *xsdDate `xml:"urn:com.workday/bsvc Assessed_On,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssessedOn = (*xsdDate)(layout.T.AssessedOn)
	return e.EncodeElement(layout, start)
}
func (t *CompetencyAchievementDatav10Type) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CompetencyAchievementDatav10Type
	var overlay struct {
		*T
		AssessedOn *xsdDate `xml:"urn:com.workday/bsvc Assessed_On,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssessedOn = (*xsdDate)(overlay.T.AssessedOn)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type CompetencyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CompetencyObjectType struct {
	ID         []CompetencyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Replacement element containing Competency Qualifications for the Job Profile
// When updating a Job Profile, all Competencies for the Job Profile will be replaced by the submitted data. If no data is submitted, then the existing Competencies are not changed.
type CompetencyQualificationProfileReplacementDataType struct {
	CompetencyReference        *CompetencyObjectType        `xml:"urn:com.workday/bsvc Competency_Reference"`
	ProficiencyRatingReference *ProficiencyRatingObjectType `xml:"urn:com.workday/bsvc Proficiency_Rating_Reference,omitempty"`
	Required                   *bool                        `xml:"urn:com.workday/bsvc Required,omitempty"`
}

// Wrapper element for Competency Qualifications. Allows all competency qualifications for a Job Profile or Position Restriction to be removed - or to replace all existing competency qualifications with those sent in the web service
type CompetencyQualificationReplacementType struct {
	CompetencyQualificationReplacementData []CompetencyQualificationProfileReplacementDataType `xml:"urn:com.workday/bsvc Competency_Qualification_Replacement_Data,omitempty"`
	Delete                                 bool                                                `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ComponentCompletionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ComponentCompletionObjectType struct {
	ID         []ComponentCompletionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ConditionRuleObjectIDType struct {
	Value      string `xml:",chardata"`
	Type       string `xml:"urn:com.workday/bsvc type,attr"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
}

type ConditionRuleObjectType struct {
	ID         []ConditionRuleObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element for all of the contact methods for the person. Contact methods in workday represents methods to contact an entity. For example these methods include: Address (via post), Phone, Email, Instant Messenger and/or Web.
type ContactDataType struct {
	InternetEmailAddressData []InternetEmailAddressDataType `xml:"urn:com.workday/bsvc Internet_Email_Address_Data,omitempty"`
	PhoneNumberData          []PhoneNumberDataType          `xml:"urn:com.workday/bsvc Phone_Number_Data,omitempty"`
	AddressData              []AddressDataType              `xml:"urn:com.workday/bsvc Address_Data,omitempty"`
	WebAddressData           []WebAddressDataType           `xml:"urn:com.workday/bsvc Web_Address_Data,omitempty"`
	InstantMessengerData     []InstantMessengerDataType     `xml:"urn:com.workday/bsvc Instant_Messenger_Data,omitempty"`
}

// All of the person's contact data (address, phone, email, instant messenger, web address).
type ContactInformationDataType struct {
	AddressData          []AddressInformationDataType          `xml:"urn:com.workday/bsvc Address_Data,omitempty"`
	PhoneData            []PhoneInformationDataType            `xml:"urn:com.workday/bsvc Phone_Data,omitempty"`
	EmailAddressData     []EmailAddressInformationDataType     `xml:"urn:com.workday/bsvc Email_Address_Data,omitempty"`
	InstantMessengerData []InstantMessengerInformationDataType `xml:"urn:com.workday/bsvc Instant_Messenger_Data,omitempty"`
	WebAddressData       []WebAddressInformationDataType       `xml:"urn:com.workday/bsvc Web_Address_Data,omitempty"`
}

// Wrapper element for the Maintain Contact Information for Person business process web service
type ContactInformationforPersonEventDataType struct {
	WorkerReference              *WorkerObjectType           `xml:"urn:com.workday/bsvc Worker_Reference"`
	EffectiveDate                *time.Time                  `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	WorkerContactInformationData *ContactInformationDataType `xml:"urn:com.workday/bsvc Worker_Contact_Information_Data"`
}

func (t *ContactInformationforPersonEventDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ContactInformationforPersonEventDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *ContactInformationforPersonEventDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ContactInformationforPersonEventDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Reference element representing a unique instance of Organization that contains or includes other Organizations. An organization can be included in multiple hierarchies, but it can only be included in one node in each top level hierarchy for any given effective date.
type ContainerOrganizationReferenceDataType struct {
	OrganizationReference *OrganizationReferenceType `xml:"urn:com.workday/bsvc Organization_Reference"`
}

// Encapsulating element containing all Contingent Worker Contract Information data.
type ContingentWorkerContractInfoDataType struct {
	WorkerStatusData         *WorkerStatusDataType      `xml:"urn:com.workday/bsvc Worker_Status_Data,omitempty"`
	WorkerPositionData       *WorkerPositionDataType    `xml:"urn:com.workday/bsvc Worker_Position_Data,omitempty"`
	ContingentWorkerTypeName string                     `xml:"urn:com.workday/bsvc Contingent_Worker_Type_Name,omitempty"`
	VendorReferenceData      *VendorReferenceType       `xml:"urn:com.workday/bsvc Vendor_Reference_Data,omitempty"`
	ContractDetailsData      *ContractDetailsDataType   `xml:"urn:com.workday/bsvc Contract_Details_Data,omitempty"`
	ContractEndDate          *time.Time                 `xml:"urn:com.workday/bsvc Contract_End_Date,omitempty"`
	WorkerDocumentData       *WorkerDocumentDataWWSType `xml:"urn:com.workday/bsvc Worker_Document_Data,omitempty"`
}

func (t *ContingentWorkerContractInfoDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ContingentWorkerContractInfoDataType
	var layout struct {
		*T
		ContractEndDate *xsdDate `xml:"urn:com.workday/bsvc Contract_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ContractEndDate = (*xsdDate)(layout.T.ContractEndDate)
	return e.EncodeElement(layout, start)
}
func (t *ContingentWorkerContractInfoDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ContingentWorkerContractInfoDataType
	var overlay struct {
		*T
		ContractEndDate *xsdDate `xml:"urn:com.workday/bsvc Contract_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ContractEndDate = (*xsdDate)(overlay.T.ContractEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following Reference element (and other optional attributes) to retrieve an instance of Contingent Worker and his/her Contract Information.
type ContingentWorkerContractInfoGetType struct {
	ContingentWorkerReference *ContingentWorkerReferenceDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Reference"`
	AsOfDate                  time.Time                          `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment                time.Time                          `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version                   string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *ContingentWorkerContractInfoGetType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ContingentWorkerContractInfoGetType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *ContingentWorkerContractInfoGetType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ContingentWorkerContractInfoGetType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Response element containing an instance of Contingent Worker and his/her Contract Information.
type ContingentWorkerContractInfoType struct {
	ContingentWorkerReferenceData    *ContingentWorkerReferenceDataType    `xml:"urn:com.workday/bsvc Contingent_Worker_Reference_Data,omitempty"`
	ContingentWorkerContractInfoData *ContingentWorkerContractInfoDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Contract_Info_Data,omitempty"`
	AsOfDate                         time.Time                             `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment                       time.Time                             `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version                          string                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *ContingentWorkerContractInfoType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ContingentWorkerContractInfoType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *ContingentWorkerContractInfoType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ContingentWorkerContractInfoType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Contingent Worker data.
type ContingentWorkerDataType struct {
	UserID                           string                                 `xml:"urn:com.workday/bsvc User_ID,omitempty"`
	IntegrationIDData                *ExternalIntegrationIDDataType         `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	PersonalInfoData                 []PersonalInfoDataType                 `xml:"urn:com.workday/bsvc Personal_Info_Data,omitempty"`
	ContingentWorkerContractInfoData []ContingentWorkerContractInfoDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Contract_Info_Data,omitempty"`
}

// Utilize the following Reference element (and other optional attributes) to retrieve an instance of Contingent Worker and its associated data.
type ContingentWorkerGetType struct {
	ContingentWorkerReference *ContingentWorkerReferenceDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Reference"`
	AsOfDate                  time.Time                          `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment                time.Time                          `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version                   string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *ContingentWorkerGetType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ContingentWorkerGetType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *ContingentWorkerGetType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ContingentWorkerGetType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following Reference element (and other optional attributes) to retrieve an instance of Contingent Worker and his/her Personal Information.
type ContingentWorkerPersonalInfoGetType struct {
	ContingentWorkerReference *ContingentWorkerReferenceDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Reference"`
	AsOfDate                  time.Time                          `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment                time.Time                          `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version                   string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *ContingentWorkerPersonalInfoGetType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ContingentWorkerPersonalInfoGetType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *ContingentWorkerPersonalInfoGetType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ContingentWorkerPersonalInfoGetType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Response element containing an instance of Contingent Worker and his/her Personal Information.
type ContingentWorkerPersonalInfoType struct {
	ContingentWorkerReference        *ContingentWorkerReferenceDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Reference,omitempty"`
	ContingentWorkerPersonalInfoData *WorkerPersonalInfoDataType        `xml:"urn:com.workday/bsvc Contingent_Worker_Personal_Info_Data,omitempty"`
	AsOfDate                         time.Time                          `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment                       time.Time                          `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *ContingentWorkerPersonalInfoType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ContingentWorkerPersonalInfoType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *ContingentWorkerPersonalInfoType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ContingentWorkerPersonalInfoType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following elements to update the Personal Information for an existing Contingent Worker within the Workday system.
type ContingentWorkerPersonalInfoUpdateType struct {
	ContingentWorkerReference        *ContingentWorkerReferenceDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Reference"`
	ContingentWorkerPersonalInfoData *WorkerPersonalInfoDataType        `xml:"urn:com.workday/bsvc Contingent_Worker_Personal_Info_Data"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Reference element representing a unique instance of Contingent Worker.
type ContingentWorkerReferenceDataType struct {
	IntegrationIDReference *ExternalIntegrationIDReferenceDataType `xml:"urn:com.workday/bsvc Integration_ID_Reference"`
}

// Contingent Worker Tax Authority Form Information
type ContingentWorkerTaxAuthorityFormInformationDataType struct {
	TaxAuthorityFormTypeReference *TaxAuthorityFormTypeObjectType `xml:"urn:com.workday/bsvc Tax_Authority_Form_Type_Reference,omitempty"`
}

// Response element containing an instance of Contingent Worker and its associated data.
type ContingentWorkerType struct {
	ContingentWorkerReference *ContingentWorkerReferenceDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Reference,omitempty"`
	ContingentWorkerData      *ContingentWorkerDataType          `xml:"urn:com.workday/bsvc Contingent_Worker_Data,omitempty"`
	AsOfDate                  time.Time                          `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment                time.Time                          `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version                   string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *ContingentWorkerType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ContingentWorkerType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *ContingentWorkerType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ContingentWorkerType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Contract Details data.
type ContractDetailsDataType struct {
	ContractPayRate           float64                      `xml:"urn:com.workday/bsvc Contract_Pay_Rate,omitempty"`
	CurrencyReferenceData     *CurrencyReferenceDataType   `xml:"urn:com.workday/bsvc Currency_Reference_Data,omitempty"`
	FrequencyReferenceData    []FrequencyReferenceDataType `xml:"urn:com.workday/bsvc Frequency_Reference_Data,omitempty"`
	ContractAssignmentDetails string                       `xml:"urn:com.workday/bsvc Contract_Assignment_Details,omitempty"`
}

// Contains the contribution amount for the retirement savings election.
type ContributionAmountDataType struct {
	ContributionAmount float64              `xml:"urn:com.workday/bsvc Contribution_Amount"`
	FrequencyReference *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference"`
}

// Contains the contribtion information for the spending account election.
type ContributionDataType struct {
	ContributionAmount float64              `xml:"urn:com.workday/bsvc Contribution_Amount,omitempty"`
	FrequencyReference *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
}

// Transaction Data for an event that has been rescinded or corrected.
type CorrectedOrRescindedTransactionDataType struct {
	MainTransactionData     []MainTransactionLogEntryDataType              `xml:"urn:com.workday/bsvc Main_Transaction_Data,omitempty"`
	CorrectionOrRescindData []TransactionLogRescindAndCorrectEventDataType `xml:"urn:com.workday/bsvc Correction_Or_Rescind_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CountryCityObjectIDType struct {
	Value      string `xml:",chardata"`
	Type       string `xml:"urn:com.workday/bsvc type,attr"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
}

type CountryCityObjectType struct {
	ID         []CountryCityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CountryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CountryObjectType struct {
	ID         []CountryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Country of Birth.
type CountryOfBirthReferenceType struct {
	CountryReference *CountryReferenceType `xml:"urn:com.workday/bsvc Country_Reference"`
}

// Contains a unique identifier for an instance of an object.
type CountryPhoneCodeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CountryPhoneCodeObjectType struct {
	ID         []CountryPhoneCodeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CountryPredefinedPersonNameComponentValueObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CountryPredefinedPersonNameComponentValueObjectType struct {
	ID         []CountryPredefinedPersonNameComponentValueObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Country ISO code. If the Country ISO code is specified, then this ISO code will be used to determine the Country Phone Code for (eliminate space between f and o) the phone. Pass this ISO code to distinguish between multiple countries sharing the same Country Phone Code. (For example, 1 is the Country Phone Code that is shared by USA, Canada, Dominican Republic, Bermuda, Jamaica, and Puerto Rico.)
type CountryReferenceType struct {
	CountryISOCode string `xml:"urn:com.workday/bsvc Country_ISO_Code"`
}

// Contains a unique identifier for an instance of an object.
type CountryRegionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CountryRegionObjectType struct {
	ID         []CountryRegionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Country Region.  Note that this is a multipart key of Region name and Country code.
type CountryRegionReferenceType struct {
	CountryReference  *CountryReferenceType `xml:"urn:com.workday/bsvc Country_Reference"`
	CountryRegionName string                `xml:"urn:com.workday/bsvc Country_Region_Name"`
}

// Contains a unique identifier for an instance of an object.
type CountrySubregionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CountrySubregionObjectType struct {
	ID         []CountrySubregionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CourseDefinitionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CourseDefinitionObjectType struct {
	ID         []CourseDefinitionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CourseSubjectObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CourseSubjectObjectType struct {
	ID         []CourseSubjectObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the detailed insurance coverage level information for an election.
type CoverageLevelValueDataType struct {
	CoverageLevelValue      float64             `xml:"urn:com.workday/bsvc Coverage_Level_Value"`
	BuyUpAmount             float64             `xml:"urn:com.workday/bsvc Buy_Up_Amount,omitempty"`
	GuaranteeIssueAmount    float64             `xml:"urn:com.workday/bsvc Guarantee_Issue_Amount,omitempty"`
	CoverageLevelMultiplier float64             `xml:"urn:com.workday/bsvc Coverage_Level_Multiplier"`
	CoverageLevelType       string              `xml:"urn:com.workday/bsvc Coverage_Level_Type"`
	CurrencyReference       *CurrencyObjectType `xml:"urn:com.workday/bsvc Currency_Reference"`
}

// Data for a new Academic Affiliate if an affiliate is to be created as part of the appointment.
type CreateAcademicAffiliateDataType struct {
	ID                        string                              `xml:"urn:com.workday/bsvc ID,omitempty"`
	PersonNameData            *PersonNameDataType                 `xml:"urn:com.workday/bsvc Person_Name_Data,omitempty"`
	ContactInformationData    *ContactInformationDataType         `xml:"urn:com.workday/bsvc Contact_Information_Data,omitempty"`
	PersonalInformationData   *GenericPersonalInformationDataType `xml:"urn:com.workday/bsvc Personal_Information_Data,omitempty"`
	PersonIdentificationData  *PersonIdentificationDataType       `xml:"urn:com.workday/bsvc Person_Identification_Data,omitempty"`
	PersonPhotoData           *PersonPhotoDataType                `xml:"urn:com.workday/bsvc Person_Photo_Data,omitempty"`
	LocationContextsReference []LocationContextObjectType         `xml:"urn:com.workday/bsvc Location_Contexts_Reference,omitempty"`
}

// All the data needed to create a Committee Membership Service Event
type CreateExternalCommitteeMemberDataType struct {
	PersonNameData            *PersonNameDataType                 `xml:"urn:com.workday/bsvc Person_Name_Data"`
	ContactInformationData    *ContactInformationDataType         `xml:"urn:com.workday/bsvc Contact_Information_Data"`
	PersonalInformationData   *GenericPersonalInformationDataType `xml:"urn:com.workday/bsvc Personal_Information_Data,omitempty"`
	PersonIdentificationData  []PersonIdentificationDataType      `xml:"urn:com.workday/bsvc Person_Identification_Data,omitempty"`
	PersonPhotoData           *PersonPhotoDataType                `xml:"urn:com.workday/bsvc Person_Photo_Data,omitempty"`
	LocationContextsReference []LocationContextObjectType         `xml:"urn:com.workday/bsvc Location_Contexts_Reference,omitempty"`
}

// Wrapper element for the Create Named Professorship business process.
type CreateNamedProfessorshipDataType struct {
	ReasonReference                *GeneralEventSubcategoryObjectType  `xml:"urn:com.workday/bsvc Reason_Reference"`
	NamedProfessorshipID           string                              `xml:"urn:com.workday/bsvc Named_Professorship_ID,omitempty"`
	InitiallyEstablishedDate       time.Time                           `xml:"urn:com.workday/bsvc Initially_Established_Date"`
	InitiallyAvailableDate         *time.Time                          `xml:"urn:com.workday/bsvc Initially_Available_Date,omitempty"`
	IncludeCodeinDisplayName       *bool                               `xml:"urn:com.workday/bsvc Include_Code_in_Display_Name,omitempty"`
	NamedProfessorshipSnapshotData *NamedProfessorshipSnapshotDataType `xml:"urn:com.workday/bsvc Named_Professorship_Snapshot_Data"`
}

func (t *CreateNamedProfessorshipDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CreateNamedProfessorshipDataType
	var layout struct {
		*T
		InitiallyEstablishedDate *xsdDate `xml:"urn:com.workday/bsvc Initially_Established_Date"`
		InitiallyAvailableDate   *xsdDate `xml:"urn:com.workday/bsvc Initially_Available_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.InitiallyEstablishedDate = (*xsdDate)(&layout.T.InitiallyEstablishedDate)
	layout.InitiallyAvailableDate = (*xsdDate)(layout.T.InitiallyAvailableDate)
	return e.EncodeElement(layout, start)
}
func (t *CreateNamedProfessorshipDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CreateNamedProfessorshipDataType
	var overlay struct {
		*T
		InitiallyEstablishedDate *xsdDate `xml:"urn:com.workday/bsvc Initially_Established_Date"`
		InitiallyAvailableDate   *xsdDate `xml:"urn:com.workday/bsvc Initially_Available_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.InitiallyEstablishedDate = (*xsdDate)(&overlay.T.InitiallyEstablishedDate)
	overlay.InitiallyAvailableDate = (*xsdDate)(overlay.T.InitiallyAvailableDate)
	return d.DecodeElement(&overlay, &start)
}

// Top-level request element to create a named professorship
type CreateNamedProfessorshipRequestType struct {
	BusinessProcessParameters    *BusinessProcessParametersType    `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	CreateNamedProfessorshipData *CreateNamedProfessorshipDataType `xml:"urn:com.workday/bsvc Create_Named_Professorship_Data"`
	Version                      string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Top-level response element for Create Named Professorship business process operations.
type CreateNamedProfessorshipResponseType struct {
	EventReference              *UniqueIdentifierObjectType   `xml:"urn:com.workday/bsvc Event_Reference,omitempty"`
	GiftReference               *GiftObjectType               `xml:"urn:com.workday/bsvc Gift_Reference,omitempty"`
	NamedProfessorshipReference *NamedProfessorshipObjectType `xml:"urn:com.workday/bsvc Named_Professorship_Reference,omitempty"`
	Version                     string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Create Reference Letter for Worker Request Element
type CreateReferenceLetterforWorkerRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ReferenceLetterEventData  *ReferenceLetterEventDataType  `xml:"urn:com.workday/bsvc Reference_Letter_Event_Data,omitempty"`
	Version                   string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Create Reference Letter for Worker Response Element
type CreateReferenceLetterforWorkerResponseType struct {
	ReferenceLetterEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Reference_Letter_Event_Reference,omitempty"`
	Version                       string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper to hold the business process configuration and user account details.
type CreateWorkdayAccountSubBusinessProcessType struct {
	BusinessSubProcessParameters *BusinessSubProcessParametersType `xml:"urn:com.workday/bsvc Business_Sub_Process_Parameters,omitempty"`
	CreateWorkdayAccountData     *SystemUserDataType               `xml:"urn:com.workday/bsvc Create_Workday_Account_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CurrencyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CurrencyObjectType struct {
	ID         []CurrencyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// This element references a unique type of Currency.
type CurrencyReferenceDataType struct {
	CurrencyCode string `xml:"urn:com.workday/bsvc Currency_Code"`
}

// Wrapper for Custom Identifier Data.
type CustomIDDataType struct {
	ID                      string                  `xml:"urn:com.workday/bsvc ID,omitempty"`
	IDTypeReference         *CustomIDTypeObjectType `xml:"urn:com.workday/bsvc ID_Type_Reference,omitempty"`
	IssuedDate              *time.Time              `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate          *time.Time              `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	OrganizationIDReference *OrganizationObjectType `xml:"urn:com.workday/bsvc Organization_ID_Reference,omitempty"`
	CustomDescription       string                  `xml:"urn:com.workday/bsvc Custom_Description,omitempty"`
}

func (t *CustomIDDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CustomIDDataType
	var layout struct {
		*T
		IssuedDate     *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	return e.EncodeElement(layout, start)
}
func (t *CustomIDDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CustomIDDataType
	var overlay struct {
		*T
		IssuedDate     *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element for all Custom Identifier data.
type CustomIDType struct {
	CustomIDReference       *UniqueIdentifierObjectType          `xml:"urn:com.workday/bsvc Custom_ID_Reference,omitempty"`
	CustomIDData            *CustomIDDataType                    `xml:"urn:com.workday/bsvc Custom_ID_Data,omitempty"`
	CustomIDSharedReference *CustomIdentifierReferenceObjectType `xml:"urn:com.workday/bsvc Custom_ID_Shared_Reference,omitempty"`
	Delete                  bool                                 `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type CustomIDTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CustomIDTypeObjectType struct {
	ID         []CustomIDTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Custom ID Type.
type CustomIDTypeReferenceType struct {
	CustomIDTypeName string `xml:"urn:com.workday/bsvc Custom_ID_Type_Name"`
}

// Wrapper for Custom Identification Data. Includes Custom Identifiers.
type CustomIdentificationDataType struct {
	CustomID   []CustomIDType `xml:"urn:com.workday/bsvc Custom_ID,omitempty"`
	ReplaceAll bool           `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Encapsulating element for all Custom Identifier data.
type CustomIdentifierDataType struct {
	CustomID              string                     `xml:"urn:com.workday/bsvc Custom_ID"`
	CustomIDTypeReference *CustomIDTypeReferenceType `xml:"urn:com.workday/bsvc Custom_ID_Type_Reference"`
	IssuedDate            *time.Time                 `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate        *time.Time                 `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	OrganizationReference *OrganizationReferenceType `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	CustomDescription     string                     `xml:"urn:com.workday/bsvc Custom_Description,omitempty"`
}

func (t *CustomIdentifierDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T CustomIdentifierDataType
	var layout struct {
		*T
		IssuedDate     *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	return e.EncodeElement(layout, start)
}
func (t *CustomIdentifierDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CustomIdentifierDataType
	var overlay struct {
		*T
		IssuedDate     *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type CustomIdentifierReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type CustomIdentifierReferenceObjectType struct {
	ID         []CustomIdentifierReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DayBreakerDividerObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DayBreakerDividerObjectType struct {
	ID         []DayBreakerDividerObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DayoftheMonthObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DayoftheMonthObjectType struct {
	ID         []DayoftheMonthObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DayoftheWeekObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DayoftheWeekObjectType struct {
	ID         []DayoftheWeekObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DegreeCompletedObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DegreeCompletedObjectType struct {
	ID         []DegreeCompletedObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DegreeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DegreeObjectType struct {
	ID         []DegreeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// A unique identifier used to reference a Degree.
type DegreeReferenceType struct {
	DegreeName string `xml:"urn:com.workday/bsvc Degree_Name"`
}

// Contains a unique identifier for an instance of an object.
type DeliveryModeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DeliveryModeObjectType struct {
	ID         []DeliveryModeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element for all Demographic data (e.g. Marital Status, Ethnicity, etc.) associated with a person.
type DemographicDataType struct {
	MaritalStatusReference     *MaritalStatusReferenceType      `xml:"urn:com.workday/bsvc Marital_Status_Reference,omitempty"`
	HispanicorLatino           *bool                            `xml:"urn:com.workday/bsvc Hispanic_or_Latino,omitempty"`
	EthnicityReference         []EthnicityReferenceType         `xml:"urn:com.workday/bsvc Ethnicity_Reference,omitempty"`
	CitizenshipStatusReference []CitizenshipStatusReferenceType `xml:"urn:com.workday/bsvc Citizenship_Status_Reference,omitempty"`
	NationalityReference       *CountryObjectType               `xml:"urn:com.workday/bsvc Nationality_Reference,omitempty"`
	HukouRegionReference       *CountryRegionObjectType         `xml:"urn:com.workday/bsvc Hukou_Region_Reference,omitempty"`
	HukouSubregionReference    *CountrySubregionObjectType      `xml:"urn:com.workday/bsvc Hukou_Subregion_Reference,omitempty"`
	HukouLocality              string                           `xml:"urn:com.workday/bsvc Hukou_Locality,omitempty"`
	HukouPostalCode            string                           `xml:"urn:com.workday/bsvc Hukou_Postal_Code,omitempty"`
	HukouTypeReference         *HukouTypeObjectType             `xml:"urn:com.workday/bsvc Hukou_Type_Reference,omitempty"`
	NativeRegionReference      *CountryRegionObjectType         `xml:"urn:com.workday/bsvc Native_Region_Reference,omitempty"`
	PersonnelFileAgency        string                           `xml:"urn:com.workday/bsvc Personnel_File_Agency,omitempty"`
	MilitaryServiceData        []MilitaryServiceDataType        `xml:"urn:com.workday/bsvc Military_Service_Data,omitempty"`
}

// Contains the dependents covered for the election.
type DependentCoverageDataType struct {
	DependentReference                              *DependentObjectType       `xml:"urn:com.workday/bsvc Dependent_Reference,omitempty"`
	OriginalCoverageBeginDate                       *time.Time                 `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date,omitempty"`
	CoverageEndDate                                 *time.Time                 `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
	OriginalCoverageBeginDateforBenefitCoverageType *time.Time                 `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Benefit_Coverage_Type,omitempty"`
	FirstDateCoveredbyBenefitPlan                   *time.Time                 `xml:"urn:com.workday/bsvc First_Date_Covered_by_Benefit_Plan,omitempty"`
	FirstDateCoveredbyBenefitProvider               *time.Time                 `xml:"urn:com.workday/bsvc First_Date_Covered_by_Benefit_Provider,omitempty"`
	ProviderID                                      string                     `xml:"urn:com.workday/bsvc Provider_ID,omitempty"`
	COBRAEligibilityData                            []COBRAEligibilityDataType `xml:"urn:com.workday/bsvc COBRA_Eligibility_Data,omitempty"`
}

func (t *DependentCoverageDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T DependentCoverageDataType
	var layout struct {
		*T
		OriginalCoverageBeginDate                       *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date,omitempty"`
		CoverageEndDate                                 *xsdDate `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
		OriginalCoverageBeginDateforBenefitCoverageType *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Benefit_Coverage_Type,omitempty"`
		FirstDateCoveredbyBenefitPlan                   *xsdDate `xml:"urn:com.workday/bsvc First_Date_Covered_by_Benefit_Plan,omitempty"`
		FirstDateCoveredbyBenefitProvider               *xsdDate `xml:"urn:com.workday/bsvc First_Date_Covered_by_Benefit_Provider,omitempty"`
	}
	layout.T = (*T)(t)
	layout.OriginalCoverageBeginDate = (*xsdDate)(layout.T.OriginalCoverageBeginDate)
	layout.CoverageEndDate = (*xsdDate)(layout.T.CoverageEndDate)
	layout.OriginalCoverageBeginDateforBenefitCoverageType = (*xsdDate)(layout.T.OriginalCoverageBeginDateforBenefitCoverageType)
	layout.FirstDateCoveredbyBenefitPlan = (*xsdDate)(layout.T.FirstDateCoveredbyBenefitPlan)
	layout.FirstDateCoveredbyBenefitProvider = (*xsdDate)(layout.T.FirstDateCoveredbyBenefitProvider)
	return e.EncodeElement(layout, start)
}
func (t *DependentCoverageDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T DependentCoverageDataType
	var overlay struct {
		*T
		OriginalCoverageBeginDate                       *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date,omitempty"`
		CoverageEndDate                                 *xsdDate `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
		OriginalCoverageBeginDateforBenefitCoverageType *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Benefit_Coverage_Type,omitempty"`
		FirstDateCoveredbyBenefitPlan                   *xsdDate `xml:"urn:com.workday/bsvc First_Date_Covered_by_Benefit_Plan,omitempty"`
		FirstDateCoveredbyBenefitProvider               *xsdDate `xml:"urn:com.workday/bsvc First_Date_Covered_by_Benefit_Provider,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.OriginalCoverageBeginDate = (*xsdDate)(overlay.T.OriginalCoverageBeginDate)
	overlay.CoverageEndDate = (*xsdDate)(overlay.T.CoverageEndDate)
	overlay.OriginalCoverageBeginDateforBenefitCoverageType = (*xsdDate)(overlay.T.OriginalCoverageBeginDateforBenefitCoverageType)
	overlay.FirstDateCoveredbyBenefitPlan = (*xsdDate)(overlay.T.FirstDateCoveredbyBenefitPlan)
	overlay.FirstDateCoveredbyBenefitProvider = (*xsdDate)(overlay.T.FirstDateCoveredbyBenefitProvider)
	return d.DecodeElement(&overlay, &start)
}

// Contains the detailed information for a dependent.
type DependentDataType struct {
	DependentID                   string                                               `xml:"urn:com.workday/bsvc Dependent_ID,omitempty"`
	FulltimeStudent               *bool                                                `xml:"urn:com.workday/bsvc Full-time_Student,omitempty"`
	StudentStatusStartDate        *time.Time                                           `xml:"urn:com.workday/bsvc Student_Status_Start_Date,omitempty"`
	StudentStatusEndDate          *time.Time                                           `xml:"urn:com.workday/bsvc Student_Status_End_Date,omitempty"`
	Disabled                      *bool                                                `xml:"urn:com.workday/bsvc Disabled,omitempty"`
	InactiveDate                  *time.Time                                           `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	DependentforPayrollPurposes   *bool                                                `xml:"urn:com.workday/bsvc Dependent_for_Payroll_Purposes,omitempty"`
	CitizenshipStatusReference    []CitizenshipStatusObjectType                        `xml:"urn:com.workday/bsvc Citizenship_Status_Reference,omitempty"`
	CountryofNationalityReference *CountryObjectType                                   `xml:"urn:com.workday/bsvc Country_of_Nationality_Reference,omitempty"`
	CountryofBirthReference       *CountryObjectType                                   `xml:"urn:com.workday/bsvc Country_of_Birth_Reference,omitempty"`
	RegionofBirthReference        *CountryRegionObjectType                             `xml:"urn:com.workday/bsvc Region_of_Birth_Reference,omitempty"`
	CityofBirth                   string                                               `xml:"urn:com.workday/bsvc City_of_Birth,omitempty"`
	CourtOrder                    []QualifiedDomesticRelationsOrderReplacementDataType `xml:"urn:com.workday/bsvc Court_Order,omitempty"`
	LivesWithWorkerData           []LivesWithWorkerDataType                            `xml:"urn:com.workday/bsvc Lives_With_Worker_Data,omitempty"`
	HasHealthInsuranceData        []HasHealthInsuranceDataType                         `xml:"urn:com.workday/bsvc Has_Health_Insurance_Data,omitempty"`
	AllowedforTaxDeductionData    []AllowedforTaxDeductionDataType                     `xml:"urn:com.workday/bsvc Allowed_for_Tax_Deduction_Data,omitempty"`
	AnnualIncomeData              []AnnualIncomeDataType                               `xml:"urn:com.workday/bsvc Annual_Income_Data,omitempty"`
	OccupationData                []OccupationDataType                                 `xml:"urn:com.workday/bsvc Occupation_Data,omitempty"`
	DisabilityData                []DisabilityInformationDataforRelatedPersonType      `xml:"urn:com.workday/bsvc Disability_Data,omitempty"`
}

func (t *DependentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T DependentDataType
	var layout struct {
		*T
		StudentStatusStartDate *xsdDate `xml:"urn:com.workday/bsvc Student_Status_Start_Date,omitempty"`
		StudentStatusEndDate   *xsdDate `xml:"urn:com.workday/bsvc Student_Status_End_Date,omitempty"`
		InactiveDate           *xsdDate `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StudentStatusStartDate = (*xsdDate)(layout.T.StudentStatusStartDate)
	layout.StudentStatusEndDate = (*xsdDate)(layout.T.StudentStatusEndDate)
	layout.InactiveDate = (*xsdDate)(layout.T.InactiveDate)
	return e.EncodeElement(layout, start)
}
func (t *DependentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T DependentDataType
	var overlay struct {
		*T
		StudentStatusStartDate *xsdDate `xml:"urn:com.workday/bsvc Student_Status_Start_Date,omitempty"`
		StudentStatusEndDate   *xsdDate `xml:"urn:com.workday/bsvc Student_Status_End_Date,omitempty"`
		InactiveDate           *xsdDate `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StudentStatusStartDate = (*xsdDate)(overlay.T.StudentStatusStartDate)
	overlay.StudentStatusEndDate = (*xsdDate)(overlay.T.StudentStatusEndDate)
	overlay.InactiveDate = (*xsdDate)(overlay.T.InactiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Dependent data.
type DependentDataWWSType struct {
	IntegrationIDData               *ExternalIntegrationIDDataType                       `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	DependentEducationalInstitution string                                               `xml:"urn:com.workday/bsvc Dependent_Educational_Institution,omitempty"`
	FulltimeStudent                 *bool                                                `xml:"urn:com.workday/bsvc Full-time_Student,omitempty"`
	StudentStatusStartDate          *time.Time                                           `xml:"urn:com.workday/bsvc Student_Status_Start_Date,omitempty"`
	StudentStatusEndDate            *time.Time                                           `xml:"urn:com.workday/bsvc Student_Status_End_Date,omitempty"`
	DependentDateofDeath            *time.Time                                           `xml:"urn:com.workday/bsvc Dependent_Date_of_Death,omitempty"`
	Disabled                        *bool                                                `xml:"urn:com.workday/bsvc Disabled,omitempty"`
	CourtOrderReplacementData       []QualifiedDomesticRelationsOrderReplacementDataType `xml:"urn:com.workday/bsvc Court_Order_Replacement_Data,omitempty"`
}

func (t *DependentDataWWSType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T DependentDataWWSType
	var layout struct {
		*T
		StudentStatusStartDate *xsdDate `xml:"urn:com.workday/bsvc Student_Status_Start_Date,omitempty"`
		StudentStatusEndDate   *xsdDate `xml:"urn:com.workday/bsvc Student_Status_End_Date,omitempty"`
		DependentDateofDeath   *xsdDate `xml:"urn:com.workday/bsvc Dependent_Date_of_Death,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StudentStatusStartDate = (*xsdDate)(layout.T.StudentStatusStartDate)
	layout.StudentStatusEndDate = (*xsdDate)(layout.T.StudentStatusEndDate)
	layout.DependentDateofDeath = (*xsdDate)(layout.T.DependentDateofDeath)
	return e.EncodeElement(layout, start)
}
func (t *DependentDataWWSType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T DependentDataWWSType
	var overlay struct {
		*T
		StudentStatusStartDate *xsdDate `xml:"urn:com.workday/bsvc Student_Status_Start_Date,omitempty"`
		StudentStatusEndDate   *xsdDate `xml:"urn:com.workday/bsvc Student_Status_End_Date,omitempty"`
		DependentDateofDeath   *xsdDate `xml:"urn:com.workday/bsvc Dependent_Date_of_Death,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StudentStatusStartDate = (*xsdDate)(overlay.T.StudentStatusStartDate)
	overlay.StudentStatusEndDate = (*xsdDate)(overlay.T.StudentStatusEndDate)
	overlay.DependentDateofDeath = (*xsdDate)(overlay.T.DependentDateofDeath)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type DependentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DependentObjectType struct {
	ID         []DependentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for this dependent's personal information.
type DependentPersonalInformationDataType struct {
	PersonNameData           *PersonNameDataType           `xml:"urn:com.workday/bsvc Person_Name_Data,omitempty"`
	ContactInformationData   *ContactInformationDataType   `xml:"urn:com.workday/bsvc Contact_Information_Data,omitempty"`
	PersonIdentificationData *PersonIdentificationDataType `xml:"urn:com.workday/bsvc Person_Identification_Data,omitempty"`
	DateofBirth              *time.Time                    `xml:"urn:com.workday/bsvc Date_of_Birth,omitempty"`
	DateofDeath              *time.Time                    `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
	GenderReference          *GenderObjectType             `xml:"urn:com.workday/bsvc Gender_Reference,omitempty"`
	UsesTobacco              *bool                         `xml:"urn:com.workday/bsvc Uses_Tobacco,omitempty"`
	FullTimeStudent          *bool                         `xml:"urn:com.workday/bsvc Full-Time_Student,omitempty"`
	StudentStatusStartDate   *time.Time                    `xml:"urn:com.workday/bsvc Student_Status_Start_Date,omitempty"`
	StudentStatusEndDate     *time.Time                    `xml:"urn:com.workday/bsvc Student_Status_End_Date,omitempty"`
	Disabled                 *bool                         `xml:"urn:com.workday/bsvc Disabled,omitempty"`
	InactiveDate             *time.Time                    `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
}

func (t *DependentPersonalInformationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T DependentPersonalInformationDataType
	var layout struct {
		*T
		DateofBirth            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Birth,omitempty"`
		DateofDeath            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
		StudentStatusStartDate *xsdDate `xml:"urn:com.workday/bsvc Student_Status_Start_Date,omitempty"`
		StudentStatusEndDate   *xsdDate `xml:"urn:com.workday/bsvc Student_Status_End_Date,omitempty"`
		InactiveDate           *xsdDate `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DateofBirth = (*xsdDate)(layout.T.DateofBirth)
	layout.DateofDeath = (*xsdDate)(layout.T.DateofDeath)
	layout.StudentStatusStartDate = (*xsdDate)(layout.T.StudentStatusStartDate)
	layout.StudentStatusEndDate = (*xsdDate)(layout.T.StudentStatusEndDate)
	layout.InactiveDate = (*xsdDate)(layout.T.InactiveDate)
	return e.EncodeElement(layout, start)
}
func (t *DependentPersonalInformationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T DependentPersonalInformationDataType
	var overlay struct {
		*T
		DateofBirth            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Birth,omitempty"`
		DateofDeath            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
		StudentStatusStartDate *xsdDate `xml:"urn:com.workday/bsvc Student_Status_Start_Date,omitempty"`
		StudentStatusEndDate   *xsdDate `xml:"urn:com.workday/bsvc Student_Status_End_Date,omitempty"`
		InactiveDate           *xsdDate `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DateofBirth = (*xsdDate)(overlay.T.DateofBirth)
	overlay.DateofDeath = (*xsdDate)(overlay.T.DateofDeath)
	overlay.StudentStatusStartDate = (*xsdDate)(overlay.T.StudentStatusStartDate)
	overlay.StudentStatusEndDate = (*xsdDate)(overlay.T.StudentStatusEndDate)
	overlay.InactiveDate = (*xsdDate)(overlay.T.InactiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Dependent data.
type DependentType struct {
	DependentReference *DependentObjectType `xml:"urn:com.workday/bsvc Dependent_Reference"`
	DependentData      *DependentDataType   `xml:"urn:com.workday/bsvc Dependent_Data"`
}

// Contains a unique identifier for an instance of an object.
type DevelopmentItemCategoryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DevelopmentItemCategoryObjectType struct {
	ID         []DevelopmentItemCategoryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DevelopmentItemObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DevelopmentItemObjectType struct {
	ID         []DevelopmentItemObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DevelopmentItemStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DevelopmentItemStatusObjectType struct {
	ID         []DevelopmentItemStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains detailed data for the referenced Development Item
type DevelopmentItemVersionDataType struct {
	ID                            string                              `xml:"urn:com.workday/bsvc ID,omitempty"`
	DevelopmentItem               string                              `xml:"urn:com.workday/bsvc Development_Item"`
	AdditionalInformation         string                              `xml:"urn:com.workday/bsvc Additional_Information,omitempty"`
	CategoryReference             []DevelopmentItemCategoryObjectType `xml:"urn:com.workday/bsvc Category_Reference,omitempty"`
	DevelopmentItemStartDate      *time.Time                          `xml:"urn:com.workday/bsvc Development_Item_Start_Date,omitempty"`
	DevelopmentItemCompletionDate *time.Time                          `xml:"urn:com.workday/bsvc Development_Item_Completion_Date,omitempty"`
	StatusReference               *DevelopmentItemStatusObjectType    `xml:"urn:com.workday/bsvc Status_Reference"`
	StatusNote                    string                              `xml:"urn:com.workday/bsvc Status_Note,omitempty"`
	UpdatedbyWorkerReference      *WorkerObjectType                   `xml:"urn:com.workday/bsvc Updated_by_Worker_Reference,omitempty"`
	RelatesToReference            []TalentTagObjectType               `xml:"urn:com.workday/bsvc Relates_To_Reference,omitempty"`
}

func (t *DevelopmentItemVersionDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T DevelopmentItemVersionDataType
	var layout struct {
		*T
		DevelopmentItemStartDate      *xsdDate `xml:"urn:com.workday/bsvc Development_Item_Start_Date,omitempty"`
		DevelopmentItemCompletionDate *xsdDate `xml:"urn:com.workday/bsvc Development_Item_Completion_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DevelopmentItemStartDate = (*xsdDate)(layout.T.DevelopmentItemStartDate)
	layout.DevelopmentItemCompletionDate = (*xsdDate)(layout.T.DevelopmentItemCompletionDate)
	return e.EncodeElement(layout, start)
}
func (t *DevelopmentItemVersionDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T DevelopmentItemVersionDataType
	var overlay struct {
		*T
		DevelopmentItemStartDate      *xsdDate `xml:"urn:com.workday/bsvc Development_Item_Start_Date,omitempty"`
		DevelopmentItemCompletionDate *xsdDate `xml:"urn:com.workday/bsvc Development_Item_Completion_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DevelopmentItemStartDate = (*xsdDate)(overlay.T.DevelopmentItemStartDate)
	overlay.DevelopmentItemCompletionDate = (*xsdDate)(overlay.T.DevelopmentItemCompletionDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains the latest completed development plan for the employee.
type DevelopmentPlanDataType struct {
	DevelopmentPlanReference *DevelopmentPlanObjectType     `xml:"urn:com.workday/bsvc Development_Plan_Reference,omitempty"`
	ReviewData               *EmployeeReviewDetailsDataType `xml:"urn:com.workday/bsvc Review_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DevelopmentPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DevelopmentPlanObjectType struct {
	ID         []DevelopmentPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Container for the difficulty to fill data.
type DifficultytoFillDataType struct {
	DifficultytoFillSortOrder   string `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Sort_Order"`
	DifficultytoFillName        string `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Name"`
	DifficultytoFillCode        string `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Code"`
	DifficultytoFillDescription string `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Description,omitempty"`
	DifficultytoFillInactive    *bool  `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DifficultytoFillObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DifficultytoFillObjectType struct {
	ID         []DifficultytoFillObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// References to Difficulty to Fill
type DifficultytoFillRequestReferencesType struct {
	DifficultytoFillReference []DifficultytoFillObjectType `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Reference"`
}

// Container for the difficulty to fill data.
type DifficultytoFillResponseDataType struct {
	DifficultytoFill []DifficultytoFillType `xml:"urn:com.workday/bsvc Difficulty_to_Fill,omitempty"`
}

// Difficulty to Fill
type DifficultytoFillType struct {
	DifficultytoFillReference *DifficultytoFillObjectType `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Reference,omitempty"`
	DifficultytoFillData      *DifficultytoFillDataType   `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DisabilityCertificationAuthorityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DisabilityCertificationAuthorityObjectType struct {
	ID         []DisabilityCertificationAuthorityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DisabilityCertificationBasisObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DisabilityCertificationBasisObjectType struct {
	ID         []DisabilityCertificationBasisObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Disability data.
type DisabilityDataType struct {
	ID                string                     `xml:"urn:com.workday/bsvc ID,omitempty"`
	Name              string                     `xml:"urn:com.workday/bsvc Name,omitempty"`
	Code              string                     `xml:"urn:com.workday/bsvc Code,omitempty"`
	Description       string                     `xml:"urn:com.workday/bsvc Description,omitempty"`
	LocationReference *LocationContextObjectType `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	Inactive          *bool                      `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DisabilityGradeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DisabilityGradeObjectType struct {
	ID         []DisabilityGradeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for all Disability Status data for the worker.
type DisabilityInformationDataType struct {
	DisabilityStatusInformationData []DisabilityStatusInformationDataType `xml:"urn:com.workday/bsvc Disability_Status_Information_Data,omitempty"`
	ReplaceAll                      bool                                  `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Wrapper element for all Disability Status data for the Dependent.
type DisabilityInformationDataforRelatedPersonType struct {
	ReplaceAll                      *bool                                                 `xml:"urn:com.workday/bsvc Replace_All,omitempty"`
	DisabilityStatusInformationData []DisabilityStatusInformationDataforRelatedPersonType `xml:"urn:com.workday/bsvc Disability_Status_Information_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DisabilityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DisabilityObjectType struct {
	ID         []DisabilityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Disability.  Does not support the update of Disability Status.  Use Put Applicant web service to update the Disability Status for a Person.
type DisabilityReferenceType struct {
	DisabilityName                        string                      `xml:"urn:com.workday/bsvc Disability_Name"`
	RegulatoryRegionOrganizationReference []OrganizationReferenceType `xml:"urn:com.workday/bsvc Regulatory_Region_Organization_Reference,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Disability and its associated data.
type DisabilityRequestReferencesType struct {
	DisabilityReference []DisabilityObjectType `xml:"urn:com.workday/bsvc Disability_Reference"`
}

// The "Response Data" element contains the core data results based on the inbound request that was processed.
type DisabilityResponseDataType struct {
	Disability []DisabilityType `xml:"urn:com.workday/bsvc Disability,omitempty"`
}

// Wrapper element for each disability status entry.
type DisabilityStatusInformationDataType struct {
	DisabilityStatusReference *DisabilityStatusReferenceObjectType `xml:"urn:com.workday/bsvc Disability_Status_Reference,omitempty"`
	DisabilityStatusData      *DisabilityStatusSubDataType         `xml:"urn:com.workday/bsvc Disability_Status_Data,omitempty"`
	Delete                    bool                                 `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Wrapper element for each disability status entry.
type DisabilityStatusInformationDataforRelatedPersonType struct {
	DisabilityStatusReference *DisabilityStatusReferenceObjectType         `xml:"urn:com.workday/bsvc Disability_Status_Reference,omitempty"`
	Delete                    *bool                                        `xml:"urn:com.workday/bsvc Delete,omitempty"`
	DisabilityStatusData      *DisabilityStatusSubDataforRelatedPersonType `xml:"urn:com.workday/bsvc Disability_Status_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DisabilityStatusReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DisabilityStatusReferenceObjectType struct {
	ID         []DisabilityStatusReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Container for disability status data for the Personal Information Change business process.
type DisabilityStatusSubDataType struct {
	DisabilityReference                       *DisabilityObjectType                       `xml:"urn:com.workday/bsvc Disability_Reference"`
	DisabilityStatusDate                      *time.Time                                  `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
	DisabilityDateKnown                       *time.Time                                  `xml:"urn:com.workday/bsvc Disability_Date_Known,omitempty"`
	DisabilityEndDate                         *time.Time                                  `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
	DisabilityGradeReference                  *DisabilityGradeObjectType                  `xml:"urn:com.workday/bsvc Disability_Grade_Reference,omitempty"`
	DisabilityDegree                          float64                                     `xml:"urn:com.workday/bsvc Disability_Degree,omitempty"`
	DisabilityRemainingCapacity               float64                                     `xml:"urn:com.workday/bsvc Disability_Remaining_Capacity,omitempty"`
	DisabilityCertificationAuthorityReference *DisabilityCertificationAuthorityObjectType `xml:"urn:com.workday/bsvc Disability_Certification_Authority_Reference,omitempty"`
	DisabilityCertificationAuthority          string                                      `xml:"urn:com.workday/bsvc Disability_Certification_Authority,omitempty"`
	DisabilityCertifiedAt                     string                                      `xml:"urn:com.workday/bsvc Disability_Certified_At,omitempty"`
	DisabilityCertificationID                 string                                      `xml:"urn:com.workday/bsvc Disability_Certification_ID,omitempty"`
	DisabilityCertificationBasisReference     *DisabilityCertificationBasisObjectType     `xml:"urn:com.workday/bsvc Disability_Certification_Basis_Reference,omitempty"`
	DisabilitySeverityRecognitionDate         *time.Time                                  `xml:"urn:com.workday/bsvc Disability_Severity_Recognition_Date,omitempty"`
	DisabilityFTETowardQuota                  float64                                     `xml:"urn:com.workday/bsvc Disability_FTE_Toward_Quota,omitempty"`
	DisabilityWorkRestrictions                string                                      `xml:"urn:com.workday/bsvc Disability_Work_Restrictions,omitempty"`
	DisabilityAccommodationsRequested         string                                      `xml:"urn:com.workday/bsvc Disability_Accommodations_Requested,omitempty"`
	DisabilityAccommodationsProvided          string                                      `xml:"urn:com.workday/bsvc Disability_Accommodations_Provided,omitempty"`
	DisabilityRehabilitationRequested         string                                      `xml:"urn:com.workday/bsvc Disability_Rehabilitation_Requested,omitempty"`
	DisabilityRehabilitationProvided          string                                      `xml:"urn:com.workday/bsvc Disability_Rehabilitation_Provided,omitempty"`
	Note                                      string                                      `xml:"urn:com.workday/bsvc Note,omitempty"`
	WorkerDocumentReference                   []WorkerDocumentObjectType                  `xml:"urn:com.workday/bsvc Worker_Document_Reference,omitempty"`
}

func (t *DisabilityStatusSubDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T DisabilityStatusSubDataType
	var layout struct {
		*T
		DisabilityStatusDate              *xsdDate `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
		DisabilityDateKnown               *xsdDate `xml:"urn:com.workday/bsvc Disability_Date_Known,omitempty"`
		DisabilityEndDate                 *xsdDate `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
		DisabilitySeverityRecognitionDate *xsdDate `xml:"urn:com.workday/bsvc Disability_Severity_Recognition_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DisabilityStatusDate = (*xsdDate)(layout.T.DisabilityStatusDate)
	layout.DisabilityDateKnown = (*xsdDate)(layout.T.DisabilityDateKnown)
	layout.DisabilityEndDate = (*xsdDate)(layout.T.DisabilityEndDate)
	layout.DisabilitySeverityRecognitionDate = (*xsdDate)(layout.T.DisabilitySeverityRecognitionDate)
	return e.EncodeElement(layout, start)
}
func (t *DisabilityStatusSubDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T DisabilityStatusSubDataType
	var overlay struct {
		*T
		DisabilityStatusDate              *xsdDate `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
		DisabilityDateKnown               *xsdDate `xml:"urn:com.workday/bsvc Disability_Date_Known,omitempty"`
		DisabilityEndDate                 *xsdDate `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
		DisabilitySeverityRecognitionDate *xsdDate `xml:"urn:com.workday/bsvc Disability_Severity_Recognition_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DisabilityStatusDate = (*xsdDate)(overlay.T.DisabilityStatusDate)
	overlay.DisabilityDateKnown = (*xsdDate)(overlay.T.DisabilityDateKnown)
	overlay.DisabilityEndDate = (*xsdDate)(overlay.T.DisabilityEndDate)
	overlay.DisabilitySeverityRecognitionDate = (*xsdDate)(overlay.T.DisabilitySeverityRecognitionDate)
	return d.DecodeElement(&overlay, &start)
}

// Container for disability status data for the Personal Information Change business process.
type DisabilityStatusSubDataforRelatedPersonType struct {
	DisabilityReference      *DisabilityObjectType      `xml:"urn:com.workday/bsvc Disability_Reference"`
	DisabilityStatusDate     *time.Time                 `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
	DateKnown                *time.Time                 `xml:"urn:com.workday/bsvc Date_Known,omitempty"`
	DisabilityEndDate        *time.Time                 `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
	DisabilityGradeReference *DisabilityGradeObjectType `xml:"urn:com.workday/bsvc Disability_Grade_Reference,omitempty"`
}

func (t *DisabilityStatusSubDataforRelatedPersonType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T DisabilityStatusSubDataforRelatedPersonType
	var layout struct {
		*T
		DisabilityStatusDate *xsdDate `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
		DateKnown            *xsdDate `xml:"urn:com.workday/bsvc Date_Known,omitempty"`
		DisabilityEndDate    *xsdDate `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DisabilityStatusDate = (*xsdDate)(layout.T.DisabilityStatusDate)
	layout.DateKnown = (*xsdDate)(layout.T.DateKnown)
	layout.DisabilityEndDate = (*xsdDate)(layout.T.DisabilityEndDate)
	return e.EncodeElement(layout, start)
}
func (t *DisabilityStatusSubDataforRelatedPersonType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T DisabilityStatusSubDataforRelatedPersonType
	var overlay struct {
		*T
		DisabilityStatusDate *xsdDate `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
		DateKnown            *xsdDate `xml:"urn:com.workday/bsvc Date_Known,omitempty"`
		DisabilityEndDate    *xsdDate `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DisabilityStatusDate = (*xsdDate)(overlay.T.DisabilityStatusDate)
	overlay.DateKnown = (*xsdDate)(overlay.T.DateKnown)
	overlay.DisabilityEndDate = (*xsdDate)(overlay.T.DisabilityEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains the response elements for the Get Disabilities and Put Disability service requests.
type DisabilityType struct {
	DisabilityReference *DisabilityObjectType `xml:"urn:com.workday/bsvc Disability_Reference,omitempty"`
	DisabilityData      *DisabilityDataType   `xml:"urn:com.workday/bsvc Disability_Data,omitempty"`
}

// Contains the latest completed disciplinary action for the employee.
type DisciplinaryActionDataType struct {
	DisciplinaryActionReference          *DisciplinaryActionObjectType        `xml:"urn:com.workday/bsvc Disciplinary_Action_Reference,omitempty"`
	DisciplinaryActionReasonReference    []DisciplinaryActionReasonObjectType `xml:"urn:com.workday/bsvc Disciplinary_Action_Reason_Reference,omitempty"`
	DisciplinaryActionRelatedToReference []DisciplinaryActionObjectType       `xml:"urn:com.workday/bsvc Disciplinary_Action_Related_To_Reference,omitempty"`
	ReviewData                           *EmployeeReviewDetailsDataType       `xml:"urn:com.workday/bsvc Review_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DisciplinaryActionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DisciplinaryActionObjectType struct {
	ID         []DisciplinaryActionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DisciplinaryActionReasonObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DisciplinaryActionReasonObjectType struct {
	ID         []DisciplinaryActionReasonObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type DocumentCategoryAllObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type DocumentCategoryAllObjectType struct {
	ID         []DocumentCategoryAllObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Result of the evaluation of an External Field based on a contextual instance.
type DocumentFieldResultDataType struct {
	FieldReference *IntegrationDocumentFieldObjectType `xml:"urn:com.workday/bsvc Field_Reference,omitempty"`
	Value          string                              `xml:"urn:com.workday/bsvc Value,omitempty"`
}

// Reference element representing a unique instance of Frequency.
type DrawFrequencyReferenceType struct {
	FrequencyName string `xml:"urn:com.workday/bsvc Frequency_Name"`
}

// Top-level element for editing Academic Appointment Track Additional Data
type EditAcademicAppointmentTrackAdditionalDataRequestType struct {
	AcademicAppointmentTrackAdditionalData *AcademicAppointmentTrackCustomObjectDataType `xml:"urn:com.workday/bsvc Academic_Appointment_Track_Additional_Data"`
	Version                                string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Top-level response for Edit Academic Appointment Track Additional Data
type EditAcademicAppointmentTrackAdditionalDataResponseType struct {
	AcademicAppointmentTrackReference *AcademicAppointmentTrackObjectType          `xml:"urn:com.workday/bsvc Academic_Appointment_Track_Reference,omitempty"`
	EffectiveDate                     *time.Time                                   `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	AdditionalData                    []EffectiveDatedWebServiceAdditionalDataType `xml:"urn:com.workday/bsvc Additional_Data,omitempty"`
	Version                           string                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *EditAcademicAppointmentTrackAdditionalDataResponseType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EditAcademicAppointmentTrackAdditionalDataResponseType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EditAcademicAppointmentTrackAdditionalDataResponseType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EditAcademicAppointmentTrackAdditionalDataResponseType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper Element for Named Professorship Data
type EditNamedProfessorshipDataType struct {
	NamedProfessorshipReference    *NamedProfessorshipObjectType       `xml:"urn:com.workday/bsvc Named_Professorship_Reference"`
	EffectiveDate                  time.Time                           `xml:"urn:com.workday/bsvc Effective_Date"`
	ReasonReference                *GeneralEventSubcategoryObjectType  `xml:"urn:com.workday/bsvc Reason_Reference"`
	IncludeCodeinDisplayName       *bool                               `xml:"urn:com.workday/bsvc Include_Code_in_Display_Name,omitempty"`
	InitiallyAvailableDate         *time.Time                          `xml:"urn:com.workday/bsvc Initially_Available_Date,omitempty"`
	OnHoldDate                     *time.Time                          `xml:"urn:com.workday/bsvc On_Hold_Date,omitempty"`
	DiscontinuedDate               *time.Time                          `xml:"urn:com.workday/bsvc Discontinued_Date,omitempty"`
	NamedProfessorshipSnapshotData *NamedProfessorshipSnapshotDataType `xml:"urn:com.workday/bsvc Named_Professorship_Snapshot_Data"`
}

func (t *EditNamedProfessorshipDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EditNamedProfessorshipDataType
	var layout struct {
		*T
		EffectiveDate          *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
		InitiallyAvailableDate *xsdDate `xml:"urn:com.workday/bsvc Initially_Available_Date,omitempty"`
		OnHoldDate             *xsdDate `xml:"urn:com.workday/bsvc On_Hold_Date,omitempty"`
		DiscontinuedDate       *xsdDate `xml:"urn:com.workday/bsvc Discontinued_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	layout.InitiallyAvailableDate = (*xsdDate)(layout.T.InitiallyAvailableDate)
	layout.OnHoldDate = (*xsdDate)(layout.T.OnHoldDate)
	layout.DiscontinuedDate = (*xsdDate)(layout.T.DiscontinuedDate)
	return e.EncodeElement(layout, start)
}
func (t *EditNamedProfessorshipDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EditNamedProfessorshipDataType
	var overlay struct {
		*T
		EffectiveDate          *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
		InitiallyAvailableDate *xsdDate `xml:"urn:com.workday/bsvc Initially_Available_Date,omitempty"`
		OnHoldDate             *xsdDate `xml:"urn:com.workday/bsvc On_Hold_Date,omitempty"`
		DiscontinuedDate       *xsdDate `xml:"urn:com.workday/bsvc Discontinued_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	overlay.InitiallyAvailableDate = (*xsdDate)(overlay.T.InitiallyAvailableDate)
	overlay.OnHoldDate = (*xsdDate)(overlay.T.OnHoldDate)
	overlay.DiscontinuedDate = (*xsdDate)(overlay.T.DiscontinuedDate)
	return d.DecodeElement(&overlay, &start)
}

// Edit Named Professorship Event Request
type EditNamedProfessorshipRequestType struct {
	BusinessProcessParameters  *BusinessProcessParametersType  `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	EditNamedProfessorshipData *EditNamedProfessorshipDataType `xml:"urn:com.workday/bsvc Edit_Named_Professorship_Data"`
	Version                    string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper for Edit Named Professorship Web Service Response
type EditNamedProfessorshipResponseType struct {
	EventReference              *UniqueIdentifierObjectType   `xml:"urn:com.workday/bsvc Event_Reference,omitempty"`
	GiftReference               *GiftObjectType               `xml:"urn:com.workday/bsvc Gift_Reference,omitempty"`
	NamedProfessorshipReference *NamedProfessorshipObjectType `xml:"urn:com.workday/bsvc Named_Professorship_Reference,omitempty"`
	Version                     string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for Education information.
type EducationAchievementDataType struct {
	EducationID               string                     `xml:"urn:com.workday/bsvc Education_ID,omitempty"`
	RemoveEducation           *bool                      `xml:"urn:com.workday/bsvc Remove_Education,omitempty"`
	CountryReference          *CountryObjectType         `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	SchoolReference           *SchoolObjectType          `xml:"urn:com.workday/bsvc School_Reference,omitempty"`
	SchoolName                string                     `xml:"urn:com.workday/bsvc School_Name,omitempty"`
	SchoolTypeReference       *SchoolTypeObjectType      `xml:"urn:com.workday/bsvc School_Type_Reference,omitempty"`
	Location                  string                     `xml:"urn:com.workday/bsvc Location,omitempty"`
	DegreeReference           *DegreeObjectType          `xml:"urn:com.workday/bsvc Degree_Reference,omitempty"`
	DegreeCompletedReference  *DegreeCompletedObjectType `xml:"urn:com.workday/bsvc Degree_Completed_Reference,omitempty"`
	DateDegreeReceived        *time.Time                 `xml:"urn:com.workday/bsvc Date_Degree_Received,omitempty"`
	FieldOfStudyReference     *FieldofStudyObjectType    `xml:"urn:com.workday/bsvc Field_Of_Study_Reference,omitempty"`
	GradeAverage              string                     `xml:"urn:com.workday/bsvc Grade_Average,omitempty"`
	FirstYearAttended         *time.Time                 `xml:"urn:com.workday/bsvc First_Year_Attended,omitempty"`
	LastYearAttended          *time.Time                 `xml:"urn:com.workday/bsvc Last_Year_Attended,omitempty"`
	IsHighestLevelofEducation *bool                      `xml:"urn:com.workday/bsvc Is_Highest_Level_of_Education,omitempty"`
	FirstDayAttended          *time.Time                 `xml:"urn:com.workday/bsvc First_Day_Attended,omitempty"`
	LastDayAttended           *time.Time                 `xml:"urn:com.workday/bsvc Last_Day_Attended,omitempty"`
}

func (t *EducationAchievementDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EducationAchievementDataType
	var layout struct {
		*T
		DateDegreeReceived *xsdDate `xml:"urn:com.workday/bsvc Date_Degree_Received,omitempty"`
		FirstYearAttended  *xsdDate `xml:"urn:com.workday/bsvc First_Year_Attended,omitempty"`
		LastYearAttended   *xsdDate `xml:"urn:com.workday/bsvc Last_Year_Attended,omitempty"`
		FirstDayAttended   *xsdDate `xml:"urn:com.workday/bsvc First_Day_Attended,omitempty"`
		LastDayAttended    *xsdDate `xml:"urn:com.workday/bsvc Last_Day_Attended,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DateDegreeReceived = (*xsdDate)(layout.T.DateDegreeReceived)
	layout.FirstYearAttended = (*xsdDate)(layout.T.FirstYearAttended)
	layout.LastYearAttended = (*xsdDate)(layout.T.LastYearAttended)
	layout.FirstDayAttended = (*xsdDate)(layout.T.FirstDayAttended)
	layout.LastDayAttended = (*xsdDate)(layout.T.LastDayAttended)
	return e.EncodeElement(layout, start)
}
func (t *EducationAchievementDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EducationAchievementDataType
	var overlay struct {
		*T
		DateDegreeReceived *xsdDate `xml:"urn:com.workday/bsvc Date_Degree_Received,omitempty"`
		FirstYearAttended  *xsdDate `xml:"urn:com.workday/bsvc First_Year_Attended,omitempty"`
		LastYearAttended   *xsdDate `xml:"urn:com.workday/bsvc Last_Year_Attended,omitempty"`
		FirstDayAttended   *xsdDate `xml:"urn:com.workday/bsvc First_Day_Attended,omitempty"`
		LastDayAttended    *xsdDate `xml:"urn:com.workday/bsvc Last_Day_Attended,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DateDegreeReceived = (*xsdDate)(overlay.T.DateDegreeReceived)
	overlay.FirstYearAttended = (*xsdDate)(overlay.T.FirstYearAttended)
	overlay.LastYearAttended = (*xsdDate)(overlay.T.LastYearAttended)
	overlay.FirstDayAttended = (*xsdDate)(overlay.T.FirstDayAttended)
	overlay.LastDayAttended = (*xsdDate)(overlay.T.LastDayAttended)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Education data.
type EducationHistoryDataType struct {
	CountryReference                    *CountryObjectType         `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	SchoolReference                     *SchoolObjectType          `xml:"urn:com.workday/bsvc School_Reference,omitempty"`
	EducationInstitution                string                     `xml:"urn:com.workday/bsvc Education_Institution,omitempty"`
	EducationalInstitutionTypeReference *SchoolTypeReferenceType   `xml:"urn:com.workday/bsvc Educational_Institution_Type_Reference,omitempty"`
	DegreeReference                     *DegreeReferenceType       `xml:"urn:com.workday/bsvc Degree_Reference"`
	DegreeCompletedReference            *DegreeCompletedObjectType `xml:"urn:com.workday/bsvc Degree_Completed_Reference,omitempty"`
	FieldOfStudyReference               *FieldOfStudyReferenceType `xml:"urn:com.workday/bsvc Field_Of_Study_Reference,omitempty"`
	EducationInstitutionLocation        string                     `xml:"urn:com.workday/bsvc Education_Institution_Location,omitempty"`
	EducationGradeAverage               string                     `xml:"urn:com.workday/bsvc Education_Grade_Average,omitempty"`
	FirstYearAttended                   *time.Time                 `xml:"urn:com.workday/bsvc First_Year_Attended,omitempty"`
	LastYearAttended                    *time.Time                 `xml:"urn:com.workday/bsvc Last_Year_Attended,omitempty"`
}

func (t *EducationHistoryDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EducationHistoryDataType
	var layout struct {
		*T
		FirstYearAttended *xsdDate `xml:"urn:com.workday/bsvc First_Year_Attended,omitempty"`
		LastYearAttended  *xsdDate `xml:"urn:com.workday/bsvc Last_Year_Attended,omitempty"`
	}
	layout.T = (*T)(t)
	layout.FirstYearAttended = (*xsdDate)(layout.T.FirstYearAttended)
	layout.LastYearAttended = (*xsdDate)(layout.T.LastYearAttended)
	return e.EncodeElement(layout, start)
}
func (t *EducationHistoryDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EducationHistoryDataType
	var overlay struct {
		*T
		FirstYearAttended *xsdDate `xml:"urn:com.workday/bsvc First_Year_Attended,omitempty"`
		LastYearAttended  *xsdDate `xml:"urn:com.workday/bsvc Last_Year_Attended,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.FirstYearAttended = (*xsdDate)(overlay.T.FirstYearAttended)
	overlay.LastYearAttended = (*xsdDate)(overlay.T.LastYearAttended)
	return d.DecodeElement(&overlay, &start)
}

// Replacement element containing Education Qualifications for the Job Profile
// When updating a Job Profile, all Education Qualifications for the Job Profile will be replaced by the submitted data. If no data is submitted, then the existing Education Qualifications are not changed.
type EducationQualificationProfileReplacementDataType struct {
	DegreeReference       *DegreeObjectType       `xml:"urn:com.workday/bsvc Degree_Reference,omitempty"`
	FieldOfStudyReference *FieldofStudyObjectType `xml:"urn:com.workday/bsvc Field_Of_Study_Reference,omitempty"`
	Required              *bool                   `xml:"urn:com.workday/bsvc Required,omitempty"`
}

// Wrapper element for Education Qualifications. Allows all education qualifications for a Job Profile or Position Restriction to be removed - or to replace all existing education qualifications with those sent in the web service.
type EducationQualificationReplacementType struct {
	EducationQualificationReplacementData []EducationQualificationProfileReplacementDataType `xml:"urn:com.workday/bsvc Education_Qualification_Replacement_Data,omitempty"`
	Delete                                bool                                               `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EducationSkillObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EducationSkillObjectType struct {
	ID         []EducationSkillObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for Education information.
type EducationType struct {
	EducationReference *EducationSkillObjectType      `xml:"urn:com.workday/bsvc Education_Reference,omitempty"`
	EducationData      []EducationAchievementDataType `xml:"urn:com.workday/bsvc Education_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EducationalTaxonomyCodeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EducationalTaxonomyCodeObjectType struct {
	ID         []EducationalTaxonomyCodeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element contains effective and updated date/time data.
type EffectiveAndUpdatedDateTimeDataType struct {
	UpdatedFrom      *time.Time `xml:"urn:com.workday/bsvc Updated_From,omitempty"`
	UpdatedThrough   *time.Time `xml:"urn:com.workday/bsvc Updated_Through,omitempty"`
	EffectiveFrom    *time.Time `xml:"urn:com.workday/bsvc Effective_From,omitempty"`
	EffectiveThrough *time.Time `xml:"urn:com.workday/bsvc Effective_Through,omitempty"`
}

func (t *EffectiveAndUpdatedDateTimeDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EffectiveAndUpdatedDateTimeDataType
	var layout struct {
		*T
		UpdatedFrom      *xsdDateTime `xml:"urn:com.workday/bsvc Updated_From,omitempty"`
		UpdatedThrough   *xsdDateTime `xml:"urn:com.workday/bsvc Updated_Through,omitempty"`
		EffectiveFrom    *xsdDateTime `xml:"urn:com.workday/bsvc Effective_From,omitempty"`
		EffectiveThrough *xsdDateTime `xml:"urn:com.workday/bsvc Effective_Through,omitempty"`
	}
	layout.T = (*T)(t)
	layout.UpdatedFrom = (*xsdDateTime)(layout.T.UpdatedFrom)
	layout.UpdatedThrough = (*xsdDateTime)(layout.T.UpdatedThrough)
	layout.EffectiveFrom = (*xsdDateTime)(layout.T.EffectiveFrom)
	layout.EffectiveThrough = (*xsdDateTime)(layout.T.EffectiveThrough)
	return e.EncodeElement(layout, start)
}
func (t *EffectiveAndUpdatedDateTimeDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EffectiveAndUpdatedDateTimeDataType
	var overlay struct {
		*T
		UpdatedFrom      *xsdDateTime `xml:"urn:com.workday/bsvc Updated_From,omitempty"`
		UpdatedThrough   *xsdDateTime `xml:"urn:com.workday/bsvc Updated_Through,omitempty"`
		EffectiveFrom    *xsdDateTime `xml:"urn:com.workday/bsvc Effective_From,omitempty"`
		EffectiveThrough *xsdDateTime `xml:"urn:com.workday/bsvc Effective_Through,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UpdatedFrom = (*xsdDateTime)(overlay.T.UpdatedFrom)
	overlay.UpdatedThrough = (*xsdDateTime)(overlay.T.UpdatedThrough)
	overlay.EffectiveFrom = (*xsdDateTime)(overlay.T.EffectiveFrom)
	overlay.EffectiveThrough = (*xsdDateTime)(overlay.T.EffectiveThrough)
	return d.DecodeElement(&overlay, &start)
}

// Web Service Additional Data
type EffectiveDatedWebServiceAdditionalDataType []string

func (a EffectiveDatedWebServiceAdditionalDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	var output struct {
		ArrayType string   `xml:"http://schemas.xmlsoap.org/wsdl/ arrayType,attr"`
		Items     []string `xml:" item"`
	}
	output.Items = []string(a)
	start.Attr = append(start.Attr, xml.Attr{Name: xml.Name{"", "xmlns:ns1"}, Value: "http://www.w3.org/2001/XMLSchema"})
	output.ArrayType = "ns1:anyType[]"
	return e.EncodeElement(&output, start)
}
func (a *EffectiveDatedWebServiceAdditionalDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) (err error) {
	var tok xml.Token
	for tok, err = d.Token(); err == nil; tok, err = d.Token() {
		if tok, ok := tok.(xml.StartElement); ok {
			var item string
			if err = d.DecodeElement(&item, &tok); err == nil {
				*a = append(*a, item)
			}
		}
		if _, ok := tok.(xml.EndElement); ok {
			break
		}
	}
	return err
}

// Eligibility Criteria Data.  Eligibility Criteria element is used in conjunction with Workday delivered integrations.
type EligibilityCriteriaDataType struct {
	FieldReference    *IntegrationDocumentFieldObjectType `xml:"urn:com.workday/bsvc Field_Reference"`
	AsOfEffectiveDate *time.Time                          `xml:"urn:com.workday/bsvc As_Of_Effective_Date,omitempty"`
	AsOfEntryDateTime *time.Time                          `xml:"urn:com.workday/bsvc As_Of_Entry_DateTime,omitempty"`
}

func (t *EligibilityCriteriaDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EligibilityCriteriaDataType
	var layout struct {
		*T
		AsOfEffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Effective_Date,omitempty"`
		AsOfEntryDateTime *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Entry_DateTime,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfEffectiveDate = (*xsdDate)(layout.T.AsOfEffectiveDate)
	layout.AsOfEntryDateTime = (*xsdDateTime)(layout.T.AsOfEntryDateTime)
	return e.EncodeElement(layout, start)
}
func (t *EligibilityCriteriaDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EligibilityCriteriaDataType
	var overlay struct {
		*T
		AsOfEffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Effective_Date,omitempty"`
		AsOfEntryDateTime *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Entry_DateTime,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfEffectiveDate = (*xsdDate)(overlay.T.AsOfEffectiveDate)
	overlay.AsOfEntryDateTime = (*xsdDateTime)(overlay.T.AsOfEntryDateTime)
	return d.DecodeElement(&overlay, &start)
}

// Email Address Information
type EmailAddressInformationDataType struct {
	EmailAddress    string                                        `xml:"urn:com.workday/bsvc Email_Address,omitempty"`
	EmailComment    string                                        `xml:"urn:com.workday/bsvc Email_Comment,omitempty"`
	UsageData       []CommunicationMethodUsageInformationDataType `xml:"urn:com.workday/bsvc Usage_Data,omitempty"`
	EmailReference  *EmailReferenceObjectType                     `xml:"urn:com.workday/bsvc Email_Reference,omitempty"`
	ID              string                                        `xml:"urn:com.workday/bsvc ID,omitempty"`
	Delete          bool                                          `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
	DoNotReplaceAll bool                                          `xml:"urn:com.workday/bsvc Do_Not_Replace_All,attr,omitempty"`
}

// Email Address core data.
type EmailCoreDataType struct {
	EmailAddress string `xml:"urn:com.workday/bsvc Email_Address"`
	EmailComment string `xml:"urn:com.workday/bsvc Email_Comment,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EmailReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmailReferenceObjectType struct {
	ID         []EmailReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the details about an emergency contact.
type EmergencyContactDataType struct {
	EmergencyContactID                string                              `xml:"urn:com.workday/bsvc Emergency_Contact_ID,omitempty"`
	LanguageReference                 []LanguageObjectType                `xml:"urn:com.workday/bsvc Language_Reference,omitempty"`
	EmergencyContactPriorityReference *EmergencyContactPriorityObjectType `xml:"urn:com.workday/bsvc Emergency_Contact_Priority_Reference,omitempty"`
	Primary                           bool                                `xml:"urn:com.workday/bsvc Primary,attr,omitempty"`
	Priority                          float64                             `xml:"urn:com.workday/bsvc Priority,attr,omitempty"`
}

// Encapsulating element containing all Emergency Contact data.
type EmergencyContactDataWWSType struct {
	IntegrationIDData                 *ExternalIntegrationIDDataType          `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	LanguageReference                 []LanguageReferenceType                 `xml:"urn:com.workday/bsvc Language_Reference,omitempty"`
	EmergencyContactPriorityReference []EmergencyContactPriorityReferenceType `xml:"urn:com.workday/bsvc Emergency_Contact_Priority_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EmergencyContactObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmergencyContactObjectType struct {
	ID         []EmergencyContactObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element to hold the name and contact information of the emergency contact
type EmergencyContactPersonalInformationDataType struct {
	PersonNameData         []PersonNameDataType         `xml:"urn:com.workday/bsvc Person_Name_Data,omitempty"`
	ContactInformationData []ContactInformationDataType `xml:"urn:com.workday/bsvc Contact_Information_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EmergencyContactPriorityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmergencyContactPriorityObjectType struct {
	ID         []EmergencyContactPriorityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Emergency Contact Priority.
type EmergencyContactPriorityReferenceType struct {
	EmergencyContactPriority string `xml:"urn:com.workday/bsvc Emergency_Contact_Priority,omitempty"`
}

// Encapsulating element containing all Allowance Plan Compensation data.
type EmployeeAllowancePlanAssignmentDataType struct {
	CompensationPlanReference    *AllowanceValuePlanObjectType     `xml:"urn:com.workday/bsvc Compensation_Plan_Reference,omitempty"`
	CompensationElementReference *CompensationPayEarningObjectType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	Percent                      float64                           `xml:"urn:com.workday/bsvc Percent,omitempty"`
	Amount                       float64                           `xml:"urn:com.workday/bsvc Amount,omitempty"`
	CurrencyReference            *CurrencyObjectType               `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference           *FrequencyObjectType              `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	AssignmentEffectiveDate      *time.Time                        `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
}

func (t *EmployeeAllowancePlanAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeAllowancePlanAssignmentDataType
	var layout struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssignmentEffectiveDate = (*xsdDate)(layout.T.AssignmentEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeAllowancePlanAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeAllowancePlanAssignmentDataType
	var overlay struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssignmentEffectiveDate = (*xsdDate)(overlay.T.AssignmentEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Unit Allowance Plan Compensation data.
type EmployeeAllowanceUnitPlanAssignmentDataType struct {
	CompensationPlanReference    *AllowanceUnitPlanObjectType      `xml:"urn:com.workday/bsvc Compensation_Plan_Reference,omitempty"`
	CompensationElementReference *CompensationPayEarningObjectType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	NumberofUnits                float64                           `xml:"urn:com.workday/bsvc Number_of_Units,omitempty"`
	UnitReference                *UnitofMeasureObjectType          `xml:"urn:com.workday/bsvc Unit_Reference,omitempty"`
	FrequencyReference           *FrequencyObjectType              `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	PerUnitAmount                float64                           `xml:"urn:com.workday/bsvc Per_Unit_Amount,omitempty"`
	CurrencyReference            *CurrencyObjectType               `xml:"urn:com.workday/bsvc Currency_Reference"`
	AssignmentEffectiveDate      *time.Time                        `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
}

func (t *EmployeeAllowanceUnitPlanAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeAllowanceUnitPlanAssignmentDataType
	var layout struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssignmentEffectiveDate = (*xsdDate)(layout.T.AssignmentEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeAllowanceUnitPlanAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeAllowanceUnitPlanAssignmentDataType
	var overlay struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssignmentEffectiveDate = (*xsdDate)(overlay.T.AssignmentEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Salary or Hourly Plan Compensation data.
type EmployeeBasePayPlanAssignmentDataType struct {
	CompensationPlanReference    *SalaryPayPlanObjectType          `xml:"urn:com.workday/bsvc Compensation_Plan_Reference,omitempty"`
	CompensationElementReference *CompensationPayEarningObjectType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	Amount                       float64                           `xml:"urn:com.workday/bsvc Amount,omitempty"`
	CurrencyReference            *CurrencyObjectType               `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference           *FrequencyObjectType              `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	AssignmentEffectiveDate      *time.Time                        `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
}

func (t *EmployeeBasePayPlanAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeBasePayPlanAssignmentDataType
	var layout struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssignmentEffectiveDate = (*xsdDate)(layout.T.AssignmentEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeBasePayPlanAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeBasePayPlanAssignmentDataType
	var overlay struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssignmentEffectiveDate = (*xsdDate)(overlay.T.AssignmentEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Bonus Plan Compensation data.
type EmployeeBonusPlanAssignmentDataType struct {
	CompensationPlanReference    *BonusPlanObjectType              `xml:"urn:com.workday/bsvc Compensation_Plan_Reference,omitempty"`
	CompensationElementReference *CompensationPayEarningObjectType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	IndividualTargetAmount       float64                           `xml:"urn:com.workday/bsvc Individual_Target_Amount,omitempty"`
	DefaultTargetAmount          float64                           `xml:"urn:com.workday/bsvc Default_Target_Amount,omitempty"`
	IndividualTargetPercent      float64                           `xml:"urn:com.workday/bsvc Individual_Target_Percent,omitempty"`
	DefaultTargetPercent         float64                           `xml:"urn:com.workday/bsvc Default_Target_Percent,omitempty"`
	GuaranteedMinimum            *bool                             `xml:"urn:com.workday/bsvc Guaranteed_Minimum,omitempty"`
	CurrencyReference            *CurrencyObjectType               `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference           *FrequencyObjectType              `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	PercentAssigned              float64                           `xml:"urn:com.workday/bsvc Percent_Assigned,omitempty"`
	AssignmentEffectiveDate      *time.Time                        `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
}

func (t *EmployeeBonusPlanAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeBonusPlanAssignmentDataType
	var layout struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssignmentEffectiveDate = (*xsdDate)(layout.T.AssignmentEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeBonusPlanAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeBonusPlanAssignmentDataType
	var overlay struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssignmentEffectiveDate = (*xsdDate)(overlay.T.AssignmentEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Commission Plan Compensation data.
type EmployeeCommissionPlanAssignmentDataType struct {
	CompensationPlanReference    *CommissionPlanObjectType         `xml:"urn:com.workday/bsvc Compensation_Plan_Reference,omitempty"`
	CompensationElementReference *CompensationPayEarningObjectType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	TargetAmount                 float64                           `xml:"urn:com.workday/bsvc Target_Amount,omitempty"`
	CurrencyReference            *CurrencyObjectType               `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference           *FrequencyObjectType              `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	DrawAmount                   float64                           `xml:"urn:com.workday/bsvc Draw_Amount,omitempty"`
	DrawFrequencyReference       *FrequencyObjectType              `xml:"urn:com.workday/bsvc Draw_Frequency_Reference,omitempty"`
	DrawDuration                 string                            `xml:"urn:com.workday/bsvc Draw_Duration,omitempty"`
	Recoverable                  *bool                             `xml:"urn:com.workday/bsvc Recoverable,omitempty"`
	AssignmentEffectiveDate      *time.Time                        `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
}

func (t *EmployeeCommissionPlanAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeCommissionPlanAssignmentDataType
	var layout struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssignmentEffectiveDate = (*xsdDate)(layout.T.AssignmentEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeCommissionPlanAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeCommissionPlanAssignmentDataType
	var overlay struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssignmentEffectiveDate = (*xsdDate)(overlay.T.AssignmentEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Allowance Plan Compensation data.
type EmployeeCompensationAllowancePlanAssignmentDataType struct {
	AllowancePlanName                             string                                                     `xml:"urn:com.workday/bsvc Allowance_Plan_Name"`
	CompensationElementValuesforAllowancePlanData *EmployeeCompensationAllowancePlanAssignmentDetailDataType `xml:"urn:com.workday/bsvc Compensation_Element_Values_for_Allowance_Plan_Data"`
}

// Encapsulating element containing all Compensation Element Values for Allowance Plan data.
type EmployeeCompensationAllowancePlanAssignmentDetailDataType struct {
	CompensationElementReference *CompensationElementReferenceType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	Percent                      float64                           `xml:"urn:com.workday/bsvc Percent,omitempty"`
	Amount                       float64                           `xml:"urn:com.workday/bsvc Amount,omitempty"`
	CurrencyReference            *CurrencyReferenceDataType        `xml:"urn:com.workday/bsvc Currency_Reference"`
	FrequencyReference           *FrequencyReferenceDataType       `xml:"urn:com.workday/bsvc Frequency_Reference"`
	ExpectedEndDate              *time.Time                        `xml:"urn:com.workday/bsvc Expected_End_Date,omitempty"`
	ReimbursementStartDate       *time.Time                        `xml:"urn:com.workday/bsvc Reimbursement_Start_Date,omitempty"`
	ActualEndDate                *time.Time                        `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
}

func (t *EmployeeCompensationAllowancePlanAssignmentDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeCompensationAllowancePlanAssignmentDetailDataType
	var layout struct {
		*T
		ExpectedEndDate        *xsdDate `xml:"urn:com.workday/bsvc Expected_End_Date,omitempty"`
		ReimbursementStartDate *xsdDate `xml:"urn:com.workday/bsvc Reimbursement_Start_Date,omitempty"`
		ActualEndDate          *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ExpectedEndDate = (*xsdDate)(layout.T.ExpectedEndDate)
	layout.ReimbursementStartDate = (*xsdDate)(layout.T.ReimbursementStartDate)
	layout.ActualEndDate = (*xsdDate)(layout.T.ActualEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeCompensationAllowancePlanAssignmentDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeCompensationAllowancePlanAssignmentDetailDataType
	var overlay struct {
		*T
		ExpectedEndDate        *xsdDate `xml:"urn:com.workday/bsvc Expected_End_Date,omitempty"`
		ReimbursementStartDate *xsdDate `xml:"urn:com.workday/bsvc Reimbursement_Start_Date,omitempty"`
		ActualEndDate          *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ExpectedEndDate = (*xsdDate)(overlay.T.ExpectedEndDate)
	overlay.ReimbursementStartDate = (*xsdDate)(overlay.T.ReimbursementStartDate)
	overlay.ActualEndDate = (*xsdDate)(overlay.T.ActualEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Unit Allowance Plan Compensation data.
type EmployeeCompensationAllowanceUnitPlanAssignmentDataType struct {
	AllowancePlanName                                 string                                                         `xml:"urn:com.workday/bsvc Allowance_Plan_Name"`
	CompensationElementValuesforUnitAllowancePlanData *EmployeeCompensationAllowanceUnitPlanAssignmentDetailDataType `xml:"urn:com.workday/bsvc Compensation_Element_Values_for_Unit_Allowance_Plan_Data"`
}

// Encapsulating element containing all Compensation Element Values for Unit Allowance Plan data.
type EmployeeCompensationAllowanceUnitPlanAssignmentDetailDataType struct {
	CompensationElementReference *CompensationElementReferenceType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	NumberofUnits                float64                           `xml:"urn:com.workday/bsvc Number_of_Units"`
	UnitReference                *UnitofMeasureReferenceType       `xml:"urn:com.workday/bsvc Unit_Reference,omitempty"`
	FrequencyReference           *FrequencyReferenceDataType       `xml:"urn:com.workday/bsvc Frequency_Reference"`
	PerUnitAmount                float64                           `xml:"urn:com.workday/bsvc Per_Unit_Amount"`
	CurrencyReference            *CurrencyReferenceDataType        `xml:"urn:com.workday/bsvc Currency_Reference"`
	ReimbursementStartDate       *time.Time                        `xml:"urn:com.workday/bsvc Reimbursement_Start_Date,omitempty"`
	ActualEndDate                *time.Time                        `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
}

func (t *EmployeeCompensationAllowanceUnitPlanAssignmentDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeCompensationAllowanceUnitPlanAssignmentDetailDataType
	var layout struct {
		*T
		ReimbursementStartDate *xsdDate `xml:"urn:com.workday/bsvc Reimbursement_Start_Date,omitempty"`
		ActualEndDate          *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ReimbursementStartDate = (*xsdDate)(layout.T.ReimbursementStartDate)
	layout.ActualEndDate = (*xsdDate)(layout.T.ActualEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeCompensationAllowanceUnitPlanAssignmentDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeCompensationAllowanceUnitPlanAssignmentDetailDataType
	var overlay struct {
		*T
		ReimbursementStartDate *xsdDate `xml:"urn:com.workday/bsvc Reimbursement_Start_Date,omitempty"`
		ActualEndDate          *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ReimbursementStartDate = (*xsdDate)(overlay.T.ReimbursementStartDate)
	overlay.ActualEndDate = (*xsdDate)(overlay.T.ActualEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Bonus Plan Compensation data.
type EmployeeCompensationBonusPlanAssignmentDataType struct {
	BonusPlanName                             string                                                 `xml:"urn:com.workday/bsvc Bonus_Plan_Name"`
	CompensationElementValuesforBonusPlanData *EmployeeCompensationBonusPlanAssignmentDetailDataType `xml:"urn:com.workday/bsvc Compensation_Element_Values_for_Bonus_Plan_Data"`
}

// Encapsulating element containing all Compensation Element Values for Bonus Plan data.
type EmployeeCompensationBonusPlanAssignmentDetailDataType struct {
	CompensationElementReference *CompensationElementReferenceType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	Amount                       float64                           `xml:"urn:com.workday/bsvc Amount,omitempty"`
	Percentage                   float64                           `xml:"urn:com.workday/bsvc Percentage,omitempty"`
	GuaranteedMinimum            *bool                             `xml:"urn:com.workday/bsvc Guaranteed_Minimum,omitempty"`
	CurrencyReference            *CurrencyReferenceDataType        `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference           *FrequencyReferenceDataType       `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	PercentageAssigned           float64                           `xml:"urn:com.workday/bsvc Percentage_Assigned"`
	ActualEndDate                *time.Time                        `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
}

func (t *EmployeeCompensationBonusPlanAssignmentDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeCompensationBonusPlanAssignmentDetailDataType
	var layout struct {
		*T
		ActualEndDate *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ActualEndDate = (*xsdDate)(layout.T.ActualEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeCompensationBonusPlanAssignmentDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeCompensationBonusPlanAssignmentDetailDataType
	var overlay struct {
		*T
		ActualEndDate *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ActualEndDate = (*xsdDate)(overlay.T.ActualEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Commission Plan Compensation data.
type EmployeeCompensationCommissionPlanAssignmentDataType struct {
	CommissionPlanName                             string                                                      `xml:"urn:com.workday/bsvc Commission_Plan_Name"`
	CompensationElementValuesforCommissionPlanData *EmployeeCompensationCommissionPlanAssignmentDetailDataType `xml:"urn:com.workday/bsvc Compensation_Element_Values_for_Commission_Plan_Data"`
}

// Encapsulating element containing all Compensation Element Values for Commission Plan data.
type EmployeeCompensationCommissionPlanAssignmentDetailDataType struct {
	CompensationElementReference *CompensationElementReferenceType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	TargetAmount                 float64                           `xml:"urn:com.workday/bsvc Target_Amount,omitempty"`
	CurrencyReference            *CurrencyReferenceDataType        `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference           *FrequencyReferenceDataType       `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	DrawAmount                   float64                           `xml:"urn:com.workday/bsvc Draw_Amount,omitempty"`
	DrawFrequencyReference       *DrawFrequencyReferenceType       `xml:"urn:com.workday/bsvc Draw_Frequency_Reference,omitempty"`
	DrawDuration                 string                            `xml:"urn:com.workday/bsvc Draw_Duration,omitempty"`
	Recoverable                  *bool                             `xml:"urn:com.workday/bsvc Recoverable,omitempty"`
	ActualEndDate                *time.Time                        `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
}

func (t *EmployeeCompensationCommissionPlanAssignmentDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeCompensationCommissionPlanAssignmentDetailDataType
	var layout struct {
		*T
		ActualEndDate *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ActualEndDate = (*xsdDate)(layout.T.ActualEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeCompensationCommissionPlanAssignmentDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeCompensationCommissionPlanAssignmentDetailDataType
	var overlay struct {
		*T
		ActualEndDate *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ActualEndDate = (*xsdDate)(overlay.T.ActualEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Hourly Plan Compensation data.
type EmployeeCompensationHourlyPlanAssignmentDataType struct {
	HourlyPlanName                          string                                                  `xml:"urn:com.workday/bsvc Hourly_Plan_Name"`
	CompensationElementValuesforBasePayData *EmployeeCompensationSalaryPlanAssignmentDetailDataType `xml:"urn:com.workday/bsvc Compensation_Element_Values_for_Base_Pay_Data"`
}

// Reference element representing a unique instance of Merit Plan.
type EmployeeCompensationMeritPlanAssignmentDataType struct {
	MeritPlanName                             string                                                 `xml:"urn:com.workday/bsvc Merit_Plan_Name"`
	CompensationElementValuesforMeritPlanData *EmployeeCompensationMeritPlanAssignmentDetailDataType `xml:"urn:com.workday/bsvc Compensation_Element_Values_for_Merit_Plan_Data,omitempty"`
}

// Encapsulating element containing all values for Merit Plan Assignment data
type EmployeeCompensationMeritPlanAssignmentDetailDataType struct {
	IndividualTarget  float64    `xml:"urn:com.workday/bsvc Individual_Target,omitempty"`
	GuaranteedMinimum *bool      `xml:"urn:com.workday/bsvc Guaranteed_Minimum,omitempty"`
	ActualEndDate     *time.Time `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
}

func (t *EmployeeCompensationMeritPlanAssignmentDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeCompensationMeritPlanAssignmentDetailDataType
	var layout struct {
		*T
		ActualEndDate *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ActualEndDate = (*xsdDate)(layout.T.ActualEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeCompensationMeritPlanAssignmentDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeCompensationMeritPlanAssignmentDetailDataType
	var overlay struct {
		*T
		ActualEndDate *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ActualEndDate = (*xsdDate)(overlay.T.ActualEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Period Salary Plan Compensation data.
type EmployeeCompensationPeriodSalaryPlanAssignmentDataType struct {
	PeriodSalaryPlanName                             string                                                        `xml:"urn:com.workday/bsvc Period_Salary_Plan_Name"`
	CompensationElementValuesforPeriodSalaryPlanData *EmployeeCompensationPeriodSalaryPlanAssignmentDetailDataType `xml:"urn:com.workday/bsvc Compensation_Element_Values_for_Period_Salary_Plan_Data"`
}

// Encapsulating element containing all Period Salary Plan Compensation data.
type EmployeeCompensationPeriodSalaryPlanAssignmentDetailDataType struct {
	CompensationElementReference *CompensationElementReferenceType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	CompensationPeriodReference  *CompensationPeriodObjectType     `xml:"urn:com.workday/bsvc Compensation_Period_Reference,omitempty"`
	CurrencyReference            *CurrencyReferenceDataType        `xml:"urn:com.workday/bsvc Currency_Reference"`
	CompensationMultiplier       float64                           `xml:"urn:com.workday/bsvc Compensation_Multiplier,omitempty"`
	FrequencyReference           *FrequencyReferenceDataType       `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	ActualEndDate                *time.Time                        `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
}

func (t *EmployeeCompensationPeriodSalaryPlanAssignmentDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeCompensationPeriodSalaryPlanAssignmentDetailDataType
	var layout struct {
		*T
		ActualEndDate *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ActualEndDate = (*xsdDate)(layout.T.ActualEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeCompensationPeriodSalaryPlanAssignmentDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeCompensationPeriodSalaryPlanAssignmentDetailDataType
	var overlay struct {
		*T
		ActualEndDate *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ActualEndDate = (*xsdDate)(overlay.T.ActualEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Salary  Plan Compensation data.
type EmployeeCompensationSalaryPlanAssignmentDataType struct {
	SalaryPlanName                          string                                                  `xml:"urn:com.workday/bsvc Salary_Plan_Name"`
	CompensationElementValuesforBasePayData *EmployeeCompensationSalaryPlanAssignmentDetailDataType `xml:"urn:com.workday/bsvc Compensation_Element_Values_for_Base_Pay_Data"`
}

// Encapsulating element containing all Compensation Element Values for Base Pay data.
type EmployeeCompensationSalaryPlanAssignmentDetailDataType struct {
	CompensationElementReference *CompensationElementReferenceType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	CompensationElementAmount    float64                           `xml:"urn:com.workday/bsvc Compensation_Element_Amount"`
	CurrencyReference            *CurrencyReferenceDataType        `xml:"urn:com.workday/bsvc Currency_Reference"`
	FrequencyReference           *FrequencyReferenceDataType       `xml:"urn:com.workday/bsvc Frequency_Reference"`
	ExpectedEndDate              *time.Time                        `xml:"urn:com.workday/bsvc Expected_End_Date,omitempty"`
	ActualEndDate                *time.Time                        `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
}

func (t *EmployeeCompensationSalaryPlanAssignmentDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeCompensationSalaryPlanAssignmentDetailDataType
	var layout struct {
		*T
		ExpectedEndDate *xsdDate `xml:"urn:com.workday/bsvc Expected_End_Date,omitempty"`
		ActualEndDate   *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ExpectedEndDate = (*xsdDate)(layout.T.ExpectedEndDate)
	layout.ActualEndDate = (*xsdDate)(layout.T.ActualEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeCompensationSalaryPlanAssignmentDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeCompensationSalaryPlanAssignmentDetailDataType
	var overlay struct {
		*T
		ExpectedEndDate *xsdDate `xml:"urn:com.workday/bsvc Expected_End_Date,omitempty"`
		ActualEndDate   *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ExpectedEndDate = (*xsdDate)(overlay.T.ExpectedEndDate)
	overlay.ActualEndDate = (*xsdDate)(overlay.T.ActualEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Unit Salary Plan Compensation data.
type EmployeeCompensationSalaryUnitPlanAssignmentDataType struct {
	UnitSalaryPlanName                             string                                                      `xml:"urn:com.workday/bsvc Unit_Salary_Plan_Name"`
	CompensationElementValuesforUnitSalaryPlanData *EmployeeCompensationSalaryUnitPlanAssignmentDetailDataType `xml:"urn:com.workday/bsvc Compensation_Element_Values_for_Unit_Salary_Plan_Data"`
}

// Encapsulating element containing all Compensation Element Values for Unit Salary Plan data.
type EmployeeCompensationSalaryUnitPlanAssignmentDetailDataType struct {
	CompensationElementReference *CompensationElementReferenceType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	UnitReference                *UnitofMeasureReferenceType       `xml:"urn:com.workday/bsvc Unit_Reference,omitempty"`
	PerUnitAmount                float64                           `xml:"urn:com.workday/bsvc Per_Unit_Amount"`
	CurrencyReference            *CurrencyReferenceDataType        `xml:"urn:com.workday/bsvc Currency_Reference"`
	NumberofUnits                float64                           `xml:"urn:com.workday/bsvc Number_of_Units,omitempty"`
	FrequencyReference           *FrequencyReferenceDataType       `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	ActualEndDate                *time.Time                        `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
}

func (t *EmployeeCompensationSalaryUnitPlanAssignmentDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeCompensationSalaryUnitPlanAssignmentDetailDataType
	var layout struct {
		*T
		ActualEndDate *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ActualEndDate = (*xsdDate)(layout.T.ActualEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeCompensationSalaryUnitPlanAssignmentDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeCompensationSalaryUnitPlanAssignmentDetailDataType
	var overlay struct {
		*T
		ActualEndDate *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ActualEndDate = (*xsdDate)(overlay.T.ActualEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains data for an Employee Contract.
type EmployeeContractDataType struct {
	EmployeeContractReference                    *EmployeeContractObjectType        `xml:"urn:com.workday/bsvc Employee_Contract_Reference,omitempty"`
	EmployeeContractReasonReference              []EmployeeContractReasonObjectType `xml:"urn:com.workday/bsvc Employee_Contract_Reason_Reference,omitempty"`
	EmployeeContractID                           string                             `xml:"urn:com.workday/bsvc Employee_Contract_ID,omitempty"`
	EffectiveDate                                time.Time                          `xml:"urn:com.workday/bsvc Effective_Date"`
	ContractID                                   string                             `xml:"urn:com.workday/bsvc Contract_ID,omitempty"`
	ContractTypeReference                        *EmployeeContractTypeObjectType    `xml:"urn:com.workday/bsvc Contract_Type_Reference,omitempty"`
	ContractStartDate                            time.Time                          `xml:"urn:com.workday/bsvc Contract_Start_Date"`
	ContractEndDate                              *time.Time                         `xml:"urn:com.workday/bsvc Contract_End_Date,omitempty"`
	EmployeeContractCollectiveAgreementReference []CollectiveAgreementObjectType    `xml:"urn:com.workday/bsvc Employee_Contract_Collective_Agreement_Reference,omitempty"`
	MaximumWeeklyHours                           float64                            `xml:"urn:com.workday/bsvc Maximum_Weekly_Hours,omitempty"`
	MinimumWeeklyHours                           float64                            `xml:"urn:com.workday/bsvc Minimum_Weekly_Hours,omitempty"`
	ContractStatusReference                      *EmployeeContractStatusObjectType  `xml:"urn:com.workday/bsvc Contract_Status_Reference"`
	PositionReference                            *PositionElementObjectType         `xml:"urn:com.workday/bsvc Position_Reference,omitempty"`
	ContractDescription                          string                             `xml:"urn:com.workday/bsvc Contract_Description,omitempty"`
	DateEmployeeSigned                           *time.Time                         `xml:"urn:com.workday/bsvc Date_Employee_Signed,omitempty"`
	DateEmployerSigned                           *time.Time                         `xml:"urn:com.workday/bsvc Date_Employer_Signed,omitempty"`
	WorkerDocumentReference                      []WorkerDocumentObjectType         `xml:"urn:com.workday/bsvc Worker_Document_Reference,omitempty"`
}

func (t *EmployeeContractDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeContractDataType
	var layout struct {
		*T
		EffectiveDate      *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
		ContractStartDate  *xsdDate `xml:"urn:com.workday/bsvc Contract_Start_Date"`
		ContractEndDate    *xsdDate `xml:"urn:com.workday/bsvc Contract_End_Date,omitempty"`
		DateEmployeeSigned *xsdDate `xml:"urn:com.workday/bsvc Date_Employee_Signed,omitempty"`
		DateEmployerSigned *xsdDate `xml:"urn:com.workday/bsvc Date_Employer_Signed,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	layout.ContractStartDate = (*xsdDate)(&layout.T.ContractStartDate)
	layout.ContractEndDate = (*xsdDate)(layout.T.ContractEndDate)
	layout.DateEmployeeSigned = (*xsdDate)(layout.T.DateEmployeeSigned)
	layout.DateEmployerSigned = (*xsdDate)(layout.T.DateEmployerSigned)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeContractDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeContractDataType
	var overlay struct {
		*T
		EffectiveDate      *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
		ContractStartDate  *xsdDate `xml:"urn:com.workday/bsvc Contract_Start_Date"`
		ContractEndDate    *xsdDate `xml:"urn:com.workday/bsvc Contract_End_Date,omitempty"`
		DateEmployeeSigned *xsdDate `xml:"urn:com.workday/bsvc Date_Employee_Signed,omitempty"`
		DateEmployerSigned *xsdDate `xml:"urn:com.workday/bsvc Date_Employer_Signed,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	overlay.ContractStartDate = (*xsdDate)(&overlay.T.ContractStartDate)
	overlay.ContractEndDate = (*xsdDate)(overlay.T.ContractEndDate)
	overlay.DateEmployeeSigned = (*xsdDate)(overlay.T.DateEmployeeSigned)
	overlay.DateEmployerSigned = (*xsdDate)(overlay.T.DateEmployerSigned)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type EmployeeContractObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmployeeContractObjectType struct {
	ID         []EmployeeContractObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EmployeeContractReasonObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmployeeContractReasonObjectType struct {
	ID         []EmployeeContractReasonObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EmployeeContractStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmployeeContractStatusObjectType struct {
	ID         []EmployeeContractStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EmployeeContractTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmployeeContractTypeObjectType struct {
	ID         []EmployeeContractTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the employee's contract information.
type EmployeeContractsDataType struct {
	EmployeeContractData []EmployeeContractDataType `xml:"urn:com.workday/bsvc Employee_Contract_Data,omitempty"`
}

// Contains the retirement savings amount information.
type EmployeeContributionAmountDataType struct {
	ContributionAmountData                 *ContributionAmountDataType                 `xml:"urn:com.workday/bsvc Contribution_Amount_Data"`
	PayrollInterfaceContributionAmountData *PayrollInterfaceContributionAmountDataType `xml:"urn:com.workday/bsvc Payroll_Interface_Contribution_Amount_Data,omitempty"`
	ContributionAmountMaximum              float64                                     `xml:"urn:com.workday/bsvc Contribution_Amount_Maximum"`
	CurrencyReference                      *CurrencyObjectType                         `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
}

// Contains the spending account election information including the contribution, payroll interface contribution, goal, and annual contribution information.
type EmployeeContributionDataType struct {
	ContributionData                 *ContributionDataType                 `xml:"urn:com.workday/bsvc Contribution_Data,omitempty"`
	PayrollInterfaceContributionData *PayrollInterfaceContributionDataType `xml:"urn:com.workday/bsvc Payroll_Interface_Contribution_Data,omitempty"`
	GoalData                         *GoalDataType                         `xml:"urn:com.workday/bsvc Goal_Data,omitempty"`
	AnnualContributionData           *AnnualContributionDataType           `xml:"urn:com.workday/bsvc Annual_Contribution_Data,omitempty"`
	CurrencyReference                *CurrencyObjectType                   `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
}

// This section holds the employee's election and the maximum the employee can elect when the benefit plan uses percentages as elections.
type EmployeeContributionPercentageDataType struct {
	ElectionPercentage            float64 `xml:"urn:com.workday/bsvc Election_Percentage"`
	ContributionPercentageMaximum float64 `xml:"urn:com.workday/bsvc Contribution_Percentage_Maximum"`
}

// Encapsulating element containing all Employee data.
type EmployeeDataType struct {
	EmployeeID             string                         `xml:"urn:com.workday/bsvc Employee_ID,omitempty"`
	UserID                 string                         `xml:"urn:com.workday/bsvc User_ID,omitempty"`
	IntegrationIDData      *ExternalIntegrationIDDataType `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	PersonalInfoData       []PersonalInfoDataType         `xml:"urn:com.workday/bsvc Personal_Info_Data,omitempty"`
	WorkerStatusData       []WorkerStatusDataType         `xml:"urn:com.workday/bsvc Worker_Status_Data,omitempty"`
	WorkerPositionData     []WorkerPositionDataType       `xml:"urn:com.workday/bsvc Worker_Position_Data,omitempty"`
	CompensationData       []CompensationDataType         `xml:"urn:com.workday/bsvc Compensation_Data,omitempty"`
	CompensationDetailData []CompensationDetailDataType   `xml:"urn:com.workday/bsvc Compensation_Detail_Data,omitempty"`
	WorkerDocumentData     *WorkerDocumentDataWWSType     `xml:"urn:com.workday/bsvc Worker_Document_Data,omitempty"`
}

// Encapsulating element containg all Employment data (e.g. Status, Position, Compensation, etc.) for an Employee.
type EmployeeEmploymentInfoDataType struct {
	WorkerStatusData   *WorkerStatusDataType      `xml:"urn:com.workday/bsvc Worker_Status_Data,omitempty"`
	WorkerPositionData *WorkerPositionDataType    `xml:"urn:com.workday/bsvc Worker_Position_Data,omitempty"`
	CompensationData   *CompensationDataType      `xml:"urn:com.workday/bsvc Compensation_Data,omitempty"`
	WorkerDocumentData *WorkerDocumentDataWWSType `xml:"urn:com.workday/bsvc Worker_Document_Data,omitempty"`
}

// Utilize the following Reference element (and other optional attributes) to retrieve an instance of Employee and his/her Employment Information.
type EmployeeEmploymentInfoGetType struct {
	EmployeeReference *EmployeeReferenceType `xml:"urn:com.workday/bsvc Employee_Reference"`
	AsOfDate          time.Time              `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment        time.Time              `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version           string                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *EmployeeEmploymentInfoGetType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeEmploymentInfoGetType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeEmploymentInfoGetType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeEmploymentInfoGetType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Response element containing an instance of Employee and his/her Employment Information.
type EmployeeEmploymentInfoType struct {
	EmployeeReference          *EmployeeReferenceType          `xml:"urn:com.workday/bsvc Employee_Reference"`
	EmployeeEmploymentInfoData *EmployeeEmploymentInfoDataType `xml:"urn:com.workday/bsvc Employee_Employment_Info_Data,omitempty"`
	AsOfDate                   time.Time                       `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment                 time.Time                       `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version                    string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *EmployeeEmploymentInfoType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeEmploymentInfoType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeEmploymentInfoType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeEmploymentInfoType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following Reference element (and other optional attributes) to retrieve an instance of Employee and its associated data.
type EmployeeGetType struct {
	EmployeeReference *EmployeeReferenceType `xml:"urn:com.workday/bsvc Employee_Reference"`
	AsOfDate          time.Time              `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment        time.Time              `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version           string                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *EmployeeGetType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeGetType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeGetType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeGetType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Employee Image data.
type EmployeeImageDataType struct {
	Filename string  `xml:"urn:com.workday/bsvc Filename"`
	Image    *[]byte `xml:"urn:com.workday/bsvc Image,omitempty"`
}

func (t *EmployeeImageDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeImageDataType
	var layout struct {
		*T
		Image *xsdBase64Binary `xml:"urn:com.workday/bsvc Image,omitempty"`
	}
	layout.T = (*T)(t)
	layout.Image = (*xsdBase64Binary)(layout.T.Image)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeImageDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeImageDataType
	var overlay struct {
		*T
		Image *xsdBase64Binary `xml:"urn:com.workday/bsvc Image,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Image = (*xsdBase64Binary)(overlay.T.Image)
	return d.DecodeElement(&overlay, &start)
}

// The reference to the employee for which the photographic image is required
type EmployeeImageGetType struct {
	EmployeeReference []EmployeeReferenceType `xml:"urn:com.workday/bsvc Employee_Reference,omitempty"`
	Version           string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The Employee photographic image data for a specified employee reference
type EmployeeImageType struct {
	EmployeeReference *EmployeeReferenceType `xml:"urn:com.workday/bsvc Employee_Reference"`
	EmployeeImageData *EmployeeImageDataType `xml:"urn:com.workday/bsvc Employee_Image_Data,omitempty"`
	Version           string                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Utilize the following elements to update the Image (e.g. picture) for an existing Employee within the Workday system.
type EmployeeImageUpdateType struct {
	EmployeeReference           *EmployeeObjectType     `xml:"urn:com.workday/bsvc Employee_Reference"`
	EmployeeExternalIDReference *EmployeeReferenceType  `xml:"urn:com.workday/bsvc Employee_External_ID_Reference"`
	EmployeeImageData           []EmployeeImageDataType `xml:"urn:com.workday/bsvc Employee_Image_Data"`
	Version                     string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Encapsulating element containing all Merit Plan Compensation data.
type EmployeeMeritPlanAssignmentDataType struct {
	CompensationPlanReference    *MeritPercentPlanObjectType   `xml:"urn:com.workday/bsvc Compensation_Plan_Reference,omitempty"`
	IndividualTargetPercent      float64                       `xml:"urn:com.workday/bsvc Individual_Target_Percent,omitempty"`
	DefaultTargetPercent         float64                       `xml:"urn:com.workday/bsvc Default_Target_Percent,omitempty"`
	MeritIncreaseMatrixReference *CompensationMatrixObjectType `xml:"urn:com.workday/bsvc Merit_Increase_Matrix_Reference,omitempty"`
	GuaranteedMinimum            *bool                         `xml:"urn:com.workday/bsvc Guaranteed_Minimum,omitempty"`
	AssignmentEffectiveDate      *time.Time                    `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
}

func (t *EmployeeMeritPlanAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeMeritPlanAssignmentDataType
	var layout struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssignmentEffectiveDate = (*xsdDate)(layout.T.AssignmentEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeMeritPlanAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeMeritPlanAssignmentDataType
	var overlay struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssignmentEffectiveDate = (*xsdDate)(overlay.T.AssignmentEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type EmployeeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmployeeObjectType struct {
	ID         []EmployeeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Period Salary Plan Compensation data.
type EmployeePeriodSalaryPlanAssignmentDataType struct {
	CompensationPlanReference    *PeriodSalaryPlanObjectType       `xml:"urn:com.workday/bsvc Compensation_Plan_Reference,omitempty"`
	CompensationElementReference *CompensationPayEarningObjectType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	CompensationPeriodReference  *CompensationPeriodObjectType     `xml:"urn:com.workday/bsvc Compensation_Period_Reference,omitempty"`
	CurrencyReference            *CurrencyObjectType               `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	CompensationPeriodMultiplier float64                           `xml:"urn:com.workday/bsvc Compensation_Period_Multiplier,omitempty"`
	FrequencyReference           *FrequencyObjectType              `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	AssignmentEffectiveDate      *time.Time                        `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
}

func (t *EmployeePeriodSalaryPlanAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeePeriodSalaryPlanAssignmentDataType
	var layout struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssignmentEffectiveDate = (*xsdDate)(layout.T.AssignmentEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeePeriodSalaryPlanAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeePeriodSalaryPlanAssignmentDataType
	var overlay struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssignmentEffectiveDate = (*xsdDate)(overlay.T.AssignmentEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following Reference element (and other optional attributes) to retrieve an instance of Employee and his/her Personal Information.
type EmployeePersonalInfoGetType struct {
	EmployeeReference *EmployeeReferenceType `xml:"urn:com.workday/bsvc Employee_Reference"`
	AsOfDate          time.Time              `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment        time.Time              `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version           string                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *EmployeePersonalInfoGetType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeePersonalInfoGetType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *EmployeePersonalInfoGetType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeePersonalInfoGetType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Response element containing an instance of Employee and his/her Personal Information.
type EmployeePersonalInfoType struct {
	EmployeeReference        *EmployeeReferenceType      `xml:"urn:com.workday/bsvc Employee_Reference,omitempty"`
	EmployeePersonalInfoData *WorkerPersonalInfoDataType `xml:"urn:com.workday/bsvc Employee_Personal_Info_Data,omitempty"`
	AsOfDate                 time.Time                   `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment               time.Time                   `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version                  string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *EmployeePersonalInfoType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeePersonalInfoType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *EmployeePersonalInfoType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeePersonalInfoType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following elements to update the Personal Information for an existing Employee within the Workday system.
type EmployeePersonalInfoUpdateType struct {
	EmployeeReference        *EmployeeReferenceType      `xml:"urn:com.workday/bsvc Employee_Reference"`
	EmployeePersonalInfoData *WorkerPersonalInfoDataType `xml:"urn:com.workday/bsvc Employee_Personal_Info_Data"`
	Version                  string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element Containing Worker Reference and Photo Data.
type EmployeePhotoDataType struct {
	ID       string  `xml:"urn:com.workday/bsvc ID,omitempty"`
	Filename string  `xml:"urn:com.workday/bsvc Filename,omitempty"`
	File     *[]byte `xml:"urn:com.workday/bsvc File,omitempty"`
}

func (t *EmployeePhotoDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeePhotoDataType
	var layout struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	layout.T = (*T)(t)
	layout.File = (*xsdBase64Binary)(layout.T.File)
	return e.EncodeElement(layout, start)
}
func (t *EmployeePhotoDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeePhotoDataType
	var overlay struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.File = (*xsdBase64Binary)(overlay.T.File)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Probation Period data. Including Corrected data.
type EmployeeProbationPeriodDetailDataType struct {
	EmployeeProbationPeriodEventReference *UniqueIdentifierObjectType              `xml:"urn:com.workday/bsvc Employee_Probation_Period_Event_Reference,omitempty"`
	EmployeeProbationPeriodReference      *EmployeeProbationPeriodObjectType       `xml:"urn:com.workday/bsvc Employee_Probation_Period_Reference,omitempty"`
	EffectiveDate                         *time.Time                               `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	StartDate                             *time.Time                               `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
	EndDate                               *time.Time                               `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	ProbationTypeReference                *EmployeeProbationPeriodTypeObjectType   `xml:"urn:com.workday/bsvc Probation_Type_Reference,omitempty"`
	ProbationReasonReference              *EmployeeProbationPeriodReasonObjectType `xml:"urn:com.workday/bsvc Probation_Reason_Reference,omitempty"`
	ExtendedEndDate                       *time.Time                               `xml:"urn:com.workday/bsvc Extended_End_Date,omitempty"`
	Note                                  string                                   `xml:"urn:com.workday/bsvc Note,omitempty"`
}

func (t *EmployeeProbationPeriodDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeProbationPeriodDetailDataType
	var layout struct {
		*T
		EffectiveDate   *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
		StartDate       *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndDate         *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
		ExtendedEndDate *xsdDate `xml:"urn:com.workday/bsvc Extended_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	layout.StartDate = (*xsdDate)(layout.T.StartDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	layout.ExtendedEndDate = (*xsdDate)(layout.T.ExtendedEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeProbationPeriodDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeProbationPeriodDetailDataType
	var overlay struct {
		*T
		EffectiveDate   *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
		StartDate       *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndDate         *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
		ExtendedEndDate *xsdDate `xml:"urn:com.workday/bsvc Extended_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	overlay.StartDate = (*xsdDate)(overlay.T.StartDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	overlay.ExtendedEndDate = (*xsdDate)(overlay.T.ExtendedEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type EmployeeProbationPeriodObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmployeeProbationPeriodObjectType struct {
	ID         []EmployeeProbationPeriodObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EmployeeProbationPeriodReasonObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmployeeProbationPeriodReasonObjectType struct {
	ID         []EmployeeProbationPeriodReasonObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Probation Period data.
type EmployeeProbationPeriodSummaryDataType struct {
	EmployeeProbationPeriodDetailData []EmployeeProbationPeriodDetailDataType `xml:"urn:com.workday/bsvc Employee_Probation_Period_Detail_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EmployeeProbationPeriodTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmployeeProbationPeriodTypeObjectType struct {
	ID         []EmployeeProbationPeriodTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Employee.
type EmployeeReferenceType struct {
	IntegrationIDReference *ExternalIntegrationIDReferenceDataType `xml:"urn:com.workday/bsvc Integration_ID_Reference"`
}

// Utilize the following Reference element (and other optional attributes) to retrieve an instance of Employee, all of his/her Related Persons and personal information for each.
type EmployeeRelatedPersonsGetType struct {
	EmployeeReference *EmployeeReferenceType `xml:"urn:com.workday/bsvc Employee_Reference"`
	AsOfDate          time.Time              `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment        time.Time              `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version           string                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *EmployeeRelatedPersonsGetType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeRelatedPersonsGetType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeRelatedPersonsGetType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeRelatedPersonsGetType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Response element containing an instance of Employee, all of his/her Related Persons and personal information for each.
type EmployeeRelatedPersonsType struct {
	EmployeeReference  *EmployeeReferenceType  `xml:"urn:com.workday/bsvc Employee_Reference"`
	RelatedPersonsData *RelatedPersonsDataType `xml:"urn:com.workday/bsvc Related_Persons_Data,omitempty"`
	AsOfDate           time.Time               `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment         time.Time               `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version            string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *EmployeeRelatedPersonsType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeRelatedPersonsType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeRelatedPersonsType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeRelatedPersonsType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Contains the latest completed performance review for the employee.
type EmployeeReviewDataType struct {
	PerformanceReviewData          *PerformanceReviewDataType          `xml:"urn:com.workday/bsvc Performance_Review_Data,omitempty"`
	PerformanceImprovementPlanData *PerformanceImprovementPlanDataType `xml:"urn:com.workday/bsvc Performance_Improvement_Plan_Data,omitempty"`
	DevelopmentPlanData            *DevelopmentPlanDataType            `xml:"urn:com.workday/bsvc Development_Plan_Data,omitempty"`
	DisciplinaryActionData         *DisciplinaryActionDataType         `xml:"urn:com.workday/bsvc Disciplinary_Action_Data,omitempty"`
}

// Contains the information about the review for the employee.
type EmployeeReviewDetailsDataType struct {
	ManagerReference         *WorkerObjectType                 `xml:"urn:com.workday/bsvc Manager_Reference,omitempty"`
	MultipleManagerReference []WorkerObjectType                `xml:"urn:com.workday/bsvc Multiple_Manager_Reference,omitempty"`
	ReviewTypeReference      *ReviewTypeObjectType             `xml:"urn:com.workday/bsvc Review_Type_Reference,omitempty"`
	ReviewTemplateReference  *EmployeeReviewTemplateObjectType `xml:"urn:com.workday/bsvc Review_Template_Reference,omitempty"`
	ReviewInitiatedDate      *time.Time                        `xml:"urn:com.workday/bsvc Review_Initiated_Date,omitempty"`
	PeriodStartDate          *time.Time                        `xml:"urn:com.workday/bsvc Period_Start_Date,omitempty"`
	PeriodEndDate            *time.Time                        `xml:"urn:com.workday/bsvc Period_End_Date,omitempty"`
	SelfEvaluationData       *SelfEvaluationDetailDataType     `xml:"urn:com.workday/bsvc Self_Evaluation_Data,omitempty"`
	ManagerEvaluationData    *ManagerEvaluationDetailDataType  `xml:"urn:com.workday/bsvc Manager_Evaluation_Data,omitempty"`
}

func (t *EmployeeReviewDetailsDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeReviewDetailsDataType
	var layout struct {
		*T
		ReviewInitiatedDate *xsdDateTime `xml:"urn:com.workday/bsvc Review_Initiated_Date,omitempty"`
		PeriodStartDate     *xsdDate     `xml:"urn:com.workday/bsvc Period_Start_Date,omitempty"`
		PeriodEndDate       *xsdDate     `xml:"urn:com.workday/bsvc Period_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ReviewInitiatedDate = (*xsdDateTime)(layout.T.ReviewInitiatedDate)
	layout.PeriodStartDate = (*xsdDate)(layout.T.PeriodStartDate)
	layout.PeriodEndDate = (*xsdDate)(layout.T.PeriodEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeReviewDetailsDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeReviewDetailsDataType
	var overlay struct {
		*T
		ReviewInitiatedDate *xsdDateTime `xml:"urn:com.workday/bsvc Review_Initiated_Date,omitempty"`
		PeriodStartDate     *xsdDate     `xml:"urn:com.workday/bsvc Period_Start_Date,omitempty"`
		PeriodEndDate       *xsdDate     `xml:"urn:com.workday/bsvc Period_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ReviewInitiatedDate = (*xsdDateTime)(overlay.T.ReviewInitiatedDate)
	overlay.PeriodStartDate = (*xsdDate)(overlay.T.PeriodStartDate)
	overlay.PeriodEndDate = (*xsdDate)(overlay.T.PeriodEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type EmployeeReviewTemplateObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EmployeeReviewTemplateObjectType struct {
	ID         []EmployeeReviewTemplateObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Unit Salary Plan Compensation data.
type EmployeeSalaryUnitPlanAssignmentDataType struct {
	CompensationPlanReference    *SalaryUnitPlanObjectType         `xml:"urn:com.workday/bsvc Compensation_Plan_Reference,omitempty"`
	CompensationElementReference *CompensationPayEarningObjectType `xml:"urn:com.workday/bsvc Compensation_Element_Reference,omitempty"`
	UnitReference                *UnitofMeasureObjectType          `xml:"urn:com.workday/bsvc Unit_Reference,omitempty"`
	PerUnitAmount                float64                           `xml:"urn:com.workday/bsvc Per_Unit_Amount,omitempty"`
	CurrencyReference            *CurrencyObjectType               `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	NumberofUnits                float64                           `xml:"urn:com.workday/bsvc Number_of_Units,omitempty"`
	FrequencyReference           *FrequencyObjectType              `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	AssignmentEffectiveDate      *time.Time                        `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
}

func (t *EmployeeSalaryUnitPlanAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeSalaryUnitPlanAssignmentDataType
	var layout struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssignmentEffectiveDate = (*xsdDate)(layout.T.AssignmentEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeSalaryUnitPlanAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeSalaryUnitPlanAssignmentDataType
	var overlay struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssignmentEffectiveDate = (*xsdDate)(overlay.T.AssignmentEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Stock Plan Compensation data.
type EmployeeStockPlanAssignmentDataType struct {
	CompensationPlanReference   *StockPlanObjectType            `xml:"urn:com.workday/bsvc Compensation_Plan_Reference,omitempty"`
	PercentofTargetasOption     float64                         `xml:"urn:com.workday/bsvc Percent_of_Target_as_Option,omitempty"`
	PercentofTargetasStock      float64                         `xml:"urn:com.workday/bsvc Percent_of_Target_as_Stock,omitempty"`
	TargetShares                float64                         `xml:"urn:com.workday/bsvc Target_Shares,omitempty"`
	IndividualTargetShares      float64                         `xml:"urn:com.workday/bsvc Individual_Target_Shares,omitempty"`
	TargetPercent               float64                         `xml:"urn:com.workday/bsvc Target_Percent,omitempty"`
	IndividualTargetAmount      float64                         `xml:"urn:com.workday/bsvc Individual_Target_Amount,omitempty"`
	TargetAmount                float64                         `xml:"urn:com.workday/bsvc Target_Amount,omitempty"`
	IndividualTargetPercent     float64                         `xml:"urn:com.workday/bsvc Individual_Target_Percent,omitempty"`
	CurrencyReference           *CurrencyObjectType             `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	VestingScheduleReference    *StockVestingScheduleObjectType `xml:"urn:com.workday/bsvc Vesting_Schedule_Reference,omitempty"`
	CompensationMatrixReference *CompensationMatrixObjectType   `xml:"urn:com.workday/bsvc Compensation_Matrix_Reference,omitempty"`
	AssignmentEffectiveDate     *time.Time                      `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
}

func (t *EmployeeStockPlanAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeStockPlanAssignmentDataType
	var layout struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssignmentEffectiveDate = (*xsdDate)(layout.T.AssignmentEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeStockPlanAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeStockPlanAssignmentDataType
	var overlay struct {
		*T
		AssignmentEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Assignment_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssignmentEffectiveDate = (*xsdDate)(overlay.T.AssignmentEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains the information about the employee's potential.
type EmployeeTalentAssessmentDataType struct {
	PotentialReference       *PotentialObjectType       `xml:"urn:com.workday/bsvc Potential_Reference,omitempty"`
	AchievableLevelReference *AchievableLevelObjectType `xml:"urn:com.workday/bsvc Achievable_Level_Reference,omitempty"`
	RetentionRiskReference   *RetentionObjectType       `xml:"urn:com.workday/bsvc Retention_Risk_Reference,omitempty"`
	LossImpactRiskReference  *LossImpactObjectType      `xml:"urn:com.workday/bsvc Loss_Impact_Risk_Reference,omitempty"`
	Notes                    string                     `xml:"urn:com.workday/bsvc Notes,omitempty"`
}

// Response element containing an instance of Employee and its associated data.
type EmployeeType struct {
	EmployeeReference *EmployeeReferenceType `xml:"urn:com.workday/bsvc Employee_Reference"`
	EmployeeData      []EmployeeDataType     `xml:"urn:com.workday/bsvc Employee_Data,omitempty"`
	AsOfDate          time.Time              `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment        time.Time              `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version           string                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *EmployeeType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EmployeeType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *EmployeeType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EmployeeType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Reference element representing a unique instance of Employee Type.
type EmployeeTypeReferenceType struct {
	EmployeeTypeDescription string `xml:"urn:com.workday/bsvc Employee_Type_Description"`
}

// Contains the employer contribution amount for the retirement savings election.
type EmployerContributionAmountDataType struct {
	ContributionAmountData                 *ContributionAmountDataType                 `xml:"urn:com.workday/bsvc Contribution_Amount_Data"`
	PayrollInterfaceContributionAmountData *PayrollInterfaceContributionAmountDataType `xml:"urn:com.workday/bsvc Payroll_Interface_Contribution_Amount_Data,omitempty"`
	CurrencyReference                      *CurrencyObjectType                         `xml:"urn:com.workday/bsvc Currency_Reference"`
}

// Contains the employer contribution amount information for the spending account election.
type EmployerContributionDataType struct {
	ContributionData                 *ContributionDataType                 `xml:"urn:com.workday/bsvc Contribution_Data,omitempty"`
	PayrollInterfaceContributionData *PayrollInterfaceContributionDataType `xml:"urn:com.workday/bsvc Payroll_Interface_Contribution_Data,omitempty"`
	GoalData                         *GoalDataType                         `xml:"urn:com.workday/bsvc Goal_Data,omitempty"`
	CurrencyReference                *CurrencyObjectType                   `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
}

// This section holds the employer contribution if the plan includes employer contributions and the contributions are stated in percentages.
type EmployerContributionPercentageDataType struct {
	ElectionPercentage float64 `xml:"urn:com.workday/bsvc Election_Percentage,omitempty"`
}

// Wrapper element for the End Academic Appointment business process.
type EndAcademicAppointmentDataType struct {
	AcademicAppointeeReference        *AcademicAppointeeEnabledObjectType `xml:"urn:com.workday/bsvc Academic_Appointee_Reference,omitempty"`
	AcademicAppointmentTrackReference *AcademicAppointmentTrackObjectType `xml:"urn:com.workday/bsvc Academic_Appointment_Track_Reference,omitempty"`
	ReasonReference                   *GeneralEventSubcategoryObjectType  `xml:"urn:com.workday/bsvc Reason_Reference"`
	TrackEndDate                      time.Time                           `xml:"urn:com.workday/bsvc Track_End_Date"`
}

func (t *EndAcademicAppointmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EndAcademicAppointmentDataType
	var layout struct {
		*T
		TrackEndDate *xsdDate `xml:"urn:com.workday/bsvc Track_End_Date"`
	}
	layout.T = (*T)(t)
	layout.TrackEndDate = (*xsdDate)(&layout.T.TrackEndDate)
	return e.EncodeElement(layout, start)
}
func (t *EndAcademicAppointmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EndAcademicAppointmentDataType
	var overlay struct {
		*T
		TrackEndDate *xsdDate `xml:"urn:com.workday/bsvc Track_End_Date"`
	}
	overlay.T = (*T)(t)
	overlay.TrackEndDate = (*xsdDate)(&overlay.T.TrackEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Top-level request element to end an academic appointment
type EndAcademicAppointmentRequestType struct {
	BusinessProcessParameters  *BusinessProcessParametersType  `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	EndAcademicAppointmentData *EndAcademicAppointmentDataType `xml:"urn:com.workday/bsvc End_Academic_Appointment_Data"`
	Version                    string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// End Collective Agreement Assignment element that has the Worker data, Position data, and effective date
type EndCollectiveAgreementAssignmentEventDataType struct {
	WorkerReference   *WorkerObjectType          `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	PositionReference *PositionElementObjectType `xml:"urn:com.workday/bsvc Position_Reference,omitempty"`
	EffectiveDate     time.Time                  `xml:"urn:com.workday/bsvc Effective_Date"`
}

func (t *EndCollectiveAgreementAssignmentEventDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EndCollectiveAgreementAssignmentEventDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EndCollectiveAgreementAssignmentEventDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EndCollectiveAgreementAssignmentEventDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Request Element consisting of Business Process Parameters and element with End Collective Agreement Assignment details
type EndCollectiveAgreementAssignmentEventRequestType struct {
	BusinessProcessParameters            *BusinessProcessParametersType                 `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	EndCollectiveAgreementAssignmentData *EndCollectiveAgreementAssignmentEventDataType `xml:"urn:com.workday/bsvc End_Collective_Agreement_Assignment_Data,omitempty"`
	Version                              string                                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response Element consisting of End Collective Agreement Assignment Event reference
type EndCollectiveAgreementAssignmentEventResponseType struct {
	EndCollectiveAgreementEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc End_Collective_Agreement_Event_Reference,omitempty"`
	Version                              string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the benefit plan year information.
type EnrollmentPeriodDataType struct {
	BenefitProgramName string     `xml:"urn:com.workday/bsvc Benefit_Program_Name"`
	PlanYear           *time.Time `xml:"urn:com.workday/bsvc Plan_Year,omitempty"`
	BeginDate          time.Time  `xml:"urn:com.workday/bsvc Begin_Date"`
	EndDate            time.Time  `xml:"urn:com.workday/bsvc End_Date"`
}

func (t *EnrollmentPeriodDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EnrollmentPeriodDataType
	var layout struct {
		*T
		PlanYear  *xsdDate `xml:"urn:com.workday/bsvc Plan_Year,omitempty"`
		BeginDate *xsdDate `xml:"urn:com.workday/bsvc Begin_Date"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date"`
	}
	layout.T = (*T)(t)
	layout.PlanYear = (*xsdDate)(layout.T.PlanYear)
	layout.BeginDate = (*xsdDate)(&layout.T.BeginDate)
	layout.EndDate = (*xsdDate)(&layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *EnrollmentPeriodDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EnrollmentPeriodDataType
	var overlay struct {
		*T
		PlanYear  *xsdDate `xml:"urn:com.workday/bsvc Plan_Year,omitempty"`
		BeginDate *xsdDate `xml:"urn:com.workday/bsvc Begin_Date"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date"`
	}
	overlay.T = (*T)(t)
	overlay.PlanYear = (*xsdDate)(overlay.T.PlanYear)
	overlay.BeginDate = (*xsdDate)(&overlay.T.BeginDate)
	overlay.EndDate = (*xsdDate)(&overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Establishment Data wrapper
type EstablishmentDataType struct {
	EstablishmentNumber               string                               `xml:"urn:com.workday/bsvc Establishment_Number,omitempty"`
	ID                                string                               `xml:"urn:com.workday/bsvc ID,omitempty"`
	CountryReference                  *CountryObjectType                   `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	EffectiveDate                     time.Time                            `xml:"urn:com.workday/bsvc Effective_Date"`
	EstablishmentName                 string                               `xml:"urn:com.workday/bsvc Establishment_Name,omitempty"`
	Inactive                          *bool                                `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	LocationReference                 []LocationObjectType                 `xml:"urn:com.workday/bsvc Location_Reference"`
	EstablishmentLegalEntityReference []EstablishmentLegalEntityObjectType `xml:"urn:com.workday/bsvc Establishment_Legal_Entity_Reference"`
	CCCText                           string                               `xml:"urn:com.workday/bsvc CCC_Text,omitempty"`
	DUNSText                          string                               `xml:"urn:com.workday/bsvc DUNS_Text,omitempty"`
	EEOText                           string                               `xml:"urn:com.workday/bsvc EEO_Text,omitempty"`
	IndustryCodeText                  string                               `xml:"urn:com.workday/bsvc Industry_Code_Text,omitempty"`
	SIRETText                         string                               `xml:"urn:com.workday/bsvc SIRET_Text,omitempty"`
	VETSText                          string                               `xml:"urn:com.workday/bsvc VETS_Text,omitempty"`
	EstablishmentHeadquarters         *bool                                `xml:"urn:com.workday/bsvc Establishment_Headquarters,omitempty"`
}

func (t *EstablishmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EstablishmentDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EstablishmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EstablishmentDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type EstablishmentLegalEntityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EstablishmentLegalEntityObjectType struct {
	ID         []EstablishmentLegalEntityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EstablishmentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EstablishmentObjectType struct {
	ID         []EstablishmentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request Criteria
type EstablishmentRequestCriteriaType struct {
	CountryReference *CountryObjectType `xml:"urn:com.workday/bsvc Country_Reference"`
}

// Establishment References
type EstablishmentRequestReferencesType struct {
	EstablishmentReference []EstablishmentObjectType `xml:"urn:com.workday/bsvc Establishment_Reference"`
}

// Response Data
type EstablishmentResponseDataType struct {
	Establishment []EstablishmentType `xml:"urn:com.workday/bsvc Establishment,omitempty"`
}

// Establishments Data wrapper
type EstablishmentType struct {
	EstablishmentReference *EstablishmentObjectType `xml:"urn:com.workday/bsvc Establishment_Reference,omitempty"`
	EstablishmentData      []EstablishmentDataType  `xml:"urn:com.workday/bsvc Establishment_Data,omitempty"`
}

// Contains the detailed information about an Ethnicity.
type EthnicityDataType struct {
	ID                        string                            `xml:"urn:com.workday/bsvc ID,omitempty"`
	Name                      string                            `xml:"urn:com.workday/bsvc Name,omitempty"`
	Code                      string                            `xml:"urn:com.workday/bsvc Code,omitempty"`
	Description               string                            `xml:"urn:com.workday/bsvc Description,omitempty"`
	LocationReference         *LocationContextObjectType        `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	EthnicityMappingReference *GlobalSetupDataMappingObjectType `xml:"urn:com.workday/bsvc Ethnicity_Mapping_Reference,omitempty"`
	Inactive                  *bool                             `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EthnicityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EthnicityObjectType struct {
	ID         []EthnicityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Ethnicity.  Ethnicity is a singular relationship with Demographic Data as of 8.  For certain tenants, especially US Public Sector Higher Education, Ethnicity may be a non-singluar relationship (as of V13).
type EthnicityReferenceType struct {
	EthnicityName                         string                     `xml:"urn:com.workday/bsvc Ethnicity_Name"`
	RegulatoryRegionOrganizationReference *OrganizationReferenceType `xml:"urn:com.workday/bsvc Regulatory_Region_Organization_Reference,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Ethnicity and its associated data.
type EthnicityRequestReferencesType struct {
	EthnicityReference []EthnicityObjectType `xml:"urn:com.workday/bsvc Ethnicity_Reference"`
}

// Response element for Get Ethnicities
type EthnicityResponseDataType struct {
	Ethnicity []EthnicityType `xml:"urn:com.workday/bsvc Ethnicity,omitempty"`
}

// Encapsulating element containing all Ethnicity data.
type EthnicityType struct {
	EthnicityReference *EthnicityObjectType `xml:"urn:com.workday/bsvc Ethnicity_Reference,omitempty"`
	EthnicityData      *EthnicityDataType   `xml:"urn:com.workday/bsvc Ethnicity_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EvaluationConstraintObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EvaluationConstraintObjectType struct {
	ID         []EvaluationConstraintObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EventAttachmentCategoryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EventAttachmentCategoryObjectType struct {
	ID         []EventAttachmentCategoryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EventClassificationCategoryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EventClassificationCategoryObjectType struct {
	ID         []EventClassificationCategoryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type EventClassificationSubcategoryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type EventClassificationSubcategoryObjectType struct {
	ID         []EventClassificationSubcategoryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing Event History data.
type EventHistoryDataType struct {
	EventID            string                                `xml:"urn:com.workday/bsvc Event_ID,omitempty"`
	EventTypeReference *BusinessProcessTypeReferenceDataType `xml:"urn:com.workday/bsvc Event_Type_Reference,omitempty"`
	Description        string                                `xml:"urn:com.workday/bsvc Description,omitempty"`
	CompletedDateTime  *time.Time                            `xml:"urn:com.workday/bsvc Completed_DateTime,omitempty"`
	EffectiveDate      *time.Time                            `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
}

func (t *EventHistoryDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T EventHistoryDataType
	var layout struct {
		*T
		CompletedDateTime *xsdDateTime `xml:"urn:com.workday/bsvc Completed_DateTime,omitempty"`
		EffectiveDate     *xsdDate     `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.CompletedDateTime = (*xsdDateTime)(layout.T.CompletedDateTime)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *EventHistoryDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T EventHistoryDataType
	var overlay struct {
		*T
		CompletedDateTime *xsdDateTime `xml:"urn:com.workday/bsvc Completed_DateTime,omitempty"`
		EffectiveDate     *xsdDate     `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CompletedDateTime = (*xsdDateTime)(overlay.T.CompletedDateTime)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type EventTargetObjectIDType struct {
	Value      string `xml:",chardata"`
	Type       string `xml:"urn:com.workday/bsvc type,attr"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
}

type EventTargetObjectType struct {
	ID         []EventTargetObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all transaction log entries.
type EventTargetTransactionLogEntryDataType struct {
	TransactionLogEntry []TransactionLogEntryType `xml:"urn:com.workday/bsvc Transaction_Log_Entry,omitempty"`
}

// Encapsulating element containing transaction log entries that have been rescinded or corrected.
type EventTargetTransactionLogRescindAndCorrectDataType struct {
	CorrectedOrRescindedTransactionLogData []CorrectedOrRescindedTransactionDataType `xml:"urn:com.workday/bsvc Corrected_Or_Rescinded_Transaction_Log_Data,omitempty"`
}

// Exception (Errors and Warning) associated with the transaction.
type ExceptionDataType struct {
	Classification string `xml:"urn:com.workday/bsvc Classification,omitempty"`
	Message        string `xml:"urn:com.workday/bsvc Message,omitempty"`
}

// Contains extended data for an employee contract.
type ExtendedEmployeeContractDataType struct {
	EmployeeContractData []EmployeeContractDataType `xml:"urn:com.workday/bsvc Employee_Contract_Data,omitempty"`
}

// Contains the extended employee's contract information.
type ExtendedEmployeeContractsDataType struct {
	ExtendedEmployeeContractData []ExtendedEmployeeContractDataType `xml:"urn:com.workday/bsvc Extended_Employee_Contract_Data,omitempty"`
}

// Encapsulating element containing all External Contact data.
type ExternalContactDataType struct {
	IntegrationIDData   *ExternalIntegrationIDDataType `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	ExternalContactType string                         `xml:"urn:com.workday/bsvc External_Contact_Type"`
}

// Encapsulating element containing all External Disability Self-Identification Record data.
type ExternalDisabilitySelfIdentificationRecordDataType struct {
	ID                        string                                          `xml:"urn:com.workday/bsvc ID,omitempty"`
	EmployeeReference         *EmployeeObjectType                             `xml:"urn:com.workday/bsvc Employee_Reference"`
	DisabilityStatusReference *SelfIdentificationofDisabilityStatusObjectType `xml:"urn:com.workday/bsvc Disability_Status_Reference,omitempty"`
	InvitationDate            *time.Time                                      `xml:"urn:com.workday/bsvc Invitation_Date,omitempty"`
	ResponseDate              *time.Time                                      `xml:"urn:com.workday/bsvc Response_Date,omitempty"`
}

func (t *ExternalDisabilitySelfIdentificationRecordDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ExternalDisabilitySelfIdentificationRecordDataType
	var layout struct {
		*T
		InvitationDate *xsdDate `xml:"urn:com.workday/bsvc Invitation_Date,omitempty"`
		ResponseDate   *xsdDate `xml:"urn:com.workday/bsvc Response_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.InvitationDate = (*xsdDate)(layout.T.InvitationDate)
	layout.ResponseDate = (*xsdDate)(layout.T.ResponseDate)
	return e.EncodeElement(layout, start)
}
func (t *ExternalDisabilitySelfIdentificationRecordDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ExternalDisabilitySelfIdentificationRecordDataType
	var overlay struct {
		*T
		InvitationDate *xsdDate `xml:"urn:com.workday/bsvc Invitation_Date,omitempty"`
		ResponseDate   *xsdDate `xml:"urn:com.workday/bsvc Response_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.InvitationDate = (*xsdDate)(overlay.T.InvitationDate)
	overlay.ResponseDate = (*xsdDate)(overlay.T.ResponseDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type ExternalDisabilitySelfIdentificationRecordObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ExternalDisabilitySelfIdentificationRecordObjectType struct {
	ID         []ExternalDisabilitySelfIdentificationRecordObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element containing the request criteria for an External Disability Self-Identification Record
type ExternalDisabilitySelfIdentificationRecordRequestCriteriaType struct {
}

// Utilize the Request References element to retrieve a specific instance(s) of a Record and its data
type ExternalDisabilitySelfIdentificationRecordRequestReferencesType struct {
	ExternalDisabilitySelfIdentificationRecordReference []ExternalDisabilitySelfIdentificationRecordObjectType `xml:"urn:com.workday/bsvc External_Disability_Self_Identification_Record_Reference"`
}

// Encapsulating element containing all External Disability Self-Identification Record data.
type ExternalDisabilitySelfIdentificationRecordResponseDataType struct {
	ExternalDisabilitySelfIdentificationRecord []ExternalDisabilitySelfIdentificationRecordType `xml:"urn:com.workday/bsvc External_Disability_Self_Identification_Record,omitempty"`
}

// Reference element representing a unique instance of External Disability Self-Identification Record
type ExternalDisabilitySelfIdentificationRecordType struct {
	ExternalDisabilitySelfIdentificationRecordReference *ExternalDisabilitySelfIdentificationRecordObjectType `xml:"urn:com.workday/bsvc External_Disability_Self_Identification_Record_Reference,omitempty"`
	ExternalDisabilitySelfIdentificationRecordData      *ExternalDisabilitySelfIdentificationRecordDataType   `xml:"urn:com.workday/bsvc External_Disability_Self_Identification_Record_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ExternalFieldandParameterInitializationProviderObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ExternalFieldandParameterInitializationProviderObjectType struct {
	ID         []ExternalFieldandParameterInitializationProviderObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The request element containing all necessary information for Form I-9 Attachment to assign to the Worker.
type ExternalFormI9AttachmentDataType struct {
	ExternalFormI9AttachmentReference *FormI9AttachmentObjectType `xml:"urn:com.workday/bsvc External_Form_I-9_Attachment_Reference,omitempty"`
	AttachmentWWSData                 []AttachmentWWSDataType     `xml:"urn:com.workday/bsvc Attachment_WWS_Data,omitempty"`
}

// The element containing all necessary information to put/get an External Form I-9 for a Worker.
type ExternalFormI9DataType struct {
	WorkerReference               *WorkerObjectType                  `xml:"urn:com.workday/bsvc Worker_Reference"`
	FormI9ReferenceID             string                             `xml:"urn:com.workday/bsvc Form_I-9_Reference_ID,omitempty"`
	EVerifyCaseNumber             string                             `xml:"urn:com.workday/bsvc E-Verify_Case_Number,omitempty"`
	ExternalFormI9SourceReference *ExternalFormI9SourceObjectType    `xml:"urn:com.workday/bsvc External_Form_I-9_Source_Reference"`
	ExternalFormI9Section1Data    *ExternalFormI9Section1DataType    `xml:"urn:com.workday/bsvc External_Form_I-9_Section_1_Data"`
	ExternalFormI9Section2Data    *ExternalFormI9Section2DataType    `xml:"urn:com.workday/bsvc External_Form_I-9_Section_2_Data"`
	ExternalFormI9AttachmentData  []ExternalFormI9AttachmentDataType `xml:"urn:com.workday/bsvc External_Form_I-9_Attachment_Data,omitempty"`
}

// The request element containing all necessary information for Form I-9 Section 1 to assign to the worker.
type ExternalFormI9Section1DataType struct {
	EmployeeLastName           string                                         `xml:"urn:com.workday/bsvc Employee_Last_Name"`
	EmployeeFirstName          string                                         `xml:"urn:com.workday/bsvc Employee_First_Name"`
	EmployeeMiddleInitial      string                                         `xml:"urn:com.workday/bsvc Employee_Middle_Initial,omitempty"`
	EmployeeOtherNamesUsed     string                                         `xml:"urn:com.workday/bsvc Employee_Other_Names_Used,omitempty"`
	CitizenshipStatusReference *FormI9CitizenshipStatusWorkdayOwnedObjectType `xml:"urn:com.workday/bsvc Citizenship_Status_Reference"`
}

// The request element containing all necessary information for Form I-9 Section 2 to assign to the worker.
type ExternalFormI9Section2DataType struct {
	WorkerStartDate                 time.Time                            `xml:"urn:com.workday/bsvc Worker_Start_Date"`
	FormI9AdditionalInformation     string                               `xml:"urn:com.workday/bsvc Form_I-9_Additional_Information,omitempty"`
	FormI9EmployerSignatureDate     time.Time                            `xml:"urn:com.workday/bsvc Form_I-9_Employer_Signature_Date"`
	ExternalFormI9Section2ListAData *ExternalFormI9Section2ListADataType `xml:"urn:com.workday/bsvc External_Form_I-9_Section_2_List_A_Data,omitempty"`
	ExternalFormI9Section2ListBData *ExternalFormI9Section2ListBDataType `xml:"urn:com.workday/bsvc External_Form_I-9_Section_2_List_B_Data,omitempty"`
	ExternalFormI9Section2ListCData *ExternalFormI9Section2ListCDataType `xml:"urn:com.workday/bsvc External_Form_I-9_Section_2_List_C_Data,omitempty"`
}

func (t *ExternalFormI9Section2DataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ExternalFormI9Section2DataType
	var layout struct {
		*T
		WorkerStartDate             *xsdDate `xml:"urn:com.workday/bsvc Worker_Start_Date"`
		FormI9EmployerSignatureDate *xsdDate `xml:"urn:com.workday/bsvc Form_I-9_Employer_Signature_Date"`
	}
	layout.T = (*T)(t)
	layout.WorkerStartDate = (*xsdDate)(&layout.T.WorkerStartDate)
	layout.FormI9EmployerSignatureDate = (*xsdDate)(&layout.T.FormI9EmployerSignatureDate)
	return e.EncodeElement(layout, start)
}
func (t *ExternalFormI9Section2DataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ExternalFormI9Section2DataType
	var overlay struct {
		*T
		WorkerStartDate             *xsdDate `xml:"urn:com.workday/bsvc Worker_Start_Date"`
		FormI9EmployerSignatureDate *xsdDate `xml:"urn:com.workday/bsvc Form_I-9_Employer_Signature_Date"`
	}
	overlay.T = (*T)(t)
	overlay.WorkerStartDate = (*xsdDate)(&overlay.T.WorkerStartDate)
	overlay.FormI9EmployerSignatureDate = (*xsdDate)(&overlay.T.FormI9EmployerSignatureDate)
	return d.DecodeElement(&overlay, &start)
}

// The request element containing all necessary information for Form I-9 Section 2 List A to assign to the worker.
type ExternalFormI9Section2ListADataType struct {
	ExternalFormI9Section2ListADoc1Data *ExternalFormI9Section2ListADoc1DataType `xml:"urn:com.workday/bsvc External_Form_I-9_Section_2_List_A_Doc_1_Data,omitempty"`
	ExternalFormI9Section2ListADoc2Data *ExternalFormI9Section2ListADoc2DataType `xml:"urn:com.workday/bsvc External_Form_I-9_Section_2_List_A_Doc_2_Data,omitempty"`
	ExternalFormI9Section2ListADoc3Data *ExternalFormI9Section2ListADoc3DataType `xml:"urn:com.workday/bsvc External_Form_I-9_Section_2_List_A_Doc_3_Data,omitempty"`
}

// The request element containing all necessary information for Form I-9 Section 2 List A Doc 1 to assign to the worker.
type ExternalFormI9Section2ListADoc1DataType struct {
	DocumentTitleReference *FormI9IdentifierTypeWorkdayOwnedObjectType `xml:"urn:com.workday/bsvc Document_Title_Reference,omitempty"`
	ExpirationDate         *time.Time                                  `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
}

func (t *ExternalFormI9Section2ListADoc1DataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ExternalFormI9Section2ListADoc1DataType
	var layout struct {
		*T
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	return e.EncodeElement(layout, start)
}
func (t *ExternalFormI9Section2ListADoc1DataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ExternalFormI9Section2ListADoc1DataType
	var overlay struct {
		*T
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	return d.DecodeElement(&overlay, &start)
}

// The request element containing all necessary information for Form I-9 Section 2 List A Doc 2 to assign to the worker.
type ExternalFormI9Section2ListADoc2DataType struct {
	DocumentTitleReference *FormI9IdentifierTypeWorkdayOwnedObjectType `xml:"urn:com.workday/bsvc Document_Title_Reference,omitempty"`
	ExpirationDate         *time.Time                                  `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
}

func (t *ExternalFormI9Section2ListADoc2DataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ExternalFormI9Section2ListADoc2DataType
	var layout struct {
		*T
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	return e.EncodeElement(layout, start)
}
func (t *ExternalFormI9Section2ListADoc2DataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ExternalFormI9Section2ListADoc2DataType
	var overlay struct {
		*T
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	return d.DecodeElement(&overlay, &start)
}

// The request element containing all necessary information for Form I-9 Section 2 List A Doc 3 to assign to the worker.
type ExternalFormI9Section2ListADoc3DataType struct {
	DocumentTitleReference *FormI9IdentifierTypeWorkdayOwnedObjectType `xml:"urn:com.workday/bsvc Document_Title_Reference,omitempty"`
	ExpirationDate         *time.Time                                  `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
}

func (t *ExternalFormI9Section2ListADoc3DataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ExternalFormI9Section2ListADoc3DataType
	var layout struct {
		*T
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	return e.EncodeElement(layout, start)
}
func (t *ExternalFormI9Section2ListADoc3DataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ExternalFormI9Section2ListADoc3DataType
	var overlay struct {
		*T
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	return d.DecodeElement(&overlay, &start)
}

// The request element containing all necessary information for Form I-9 Section 2 List B to assign to the worker.
type ExternalFormI9Section2ListBDataType struct {
	DocumentTitleReference *FormI9IdentifierTypeWorkdayOwnedObjectType `xml:"urn:com.workday/bsvc Document_Title_Reference,omitempty"`
	ExpirationDate         *time.Time                                  `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
}

func (t *ExternalFormI9Section2ListBDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ExternalFormI9Section2ListBDataType
	var layout struct {
		*T
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	return e.EncodeElement(layout, start)
}
func (t *ExternalFormI9Section2ListBDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ExternalFormI9Section2ListBDataType
	var overlay struct {
		*T
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	return d.DecodeElement(&overlay, &start)
}

// The request element containing all necessary information for Form I-9 Section 2 List C to assign to the worker.
type ExternalFormI9Section2ListCDataType struct {
	DocumentTitleReference *FormI9IdentifierTypeWorkdayOwnedObjectType `xml:"urn:com.workday/bsvc Document_Title_Reference,omitempty"`
	ExpirationDate         *time.Time                                  `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
}

func (t *ExternalFormI9Section2ListCDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ExternalFormI9Section2ListCDataType
	var layout struct {
		*T
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	return e.EncodeElement(layout, start)
}
func (t *ExternalFormI9Section2ListCDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ExternalFormI9Section2ListCDataType
	var overlay struct {
		*T
		ExpirationDate *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	return d.DecodeElement(&overlay, &start)
}

// The element containing all necessary information to put/get an External Form I-9 Section 3 for a Worker.
type ExternalFormI9Section3DataType struct {
	ExternalFormI9Reference      *FormI9ObjectType                           `xml:"urn:com.workday/bsvc External_Form_I-9_Reference"`
	LastName                     string                                      `xml:"urn:com.workday/bsvc Last_Name,omitempty"`
	FirstName                    string                                      `xml:"urn:com.workday/bsvc First_Name,omitempty"`
	MiddleInitial                string                                      `xml:"urn:com.workday/bsvc Middle_Initial,omitempty"`
	DocumentTitleReference       *FormI9IdentifierTypeWorkdayOwnedObjectType `xml:"urn:com.workday/bsvc Document_Title_Reference,omitempty"`
	ExpirationDate               *time.Time                                  `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	DateofRehire                 *time.Time                                  `xml:"urn:com.workday/bsvc Date_of_Rehire,omitempty"`
	DateofEmployerSignature      time.Time                                   `xml:"urn:com.workday/bsvc Date_of_Employer_Signature"`
	ExternalFormI9AttachmentData []ExternalFormI9AttachmentDataType          `xml:"urn:com.workday/bsvc External_Form_I-9_Attachment_Data,omitempty"`
}

func (t *ExternalFormI9Section3DataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ExternalFormI9Section3DataType
	var layout struct {
		*T
		ExpirationDate          *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		DateofRehire            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Rehire,omitempty"`
		DateofEmployerSignature *xsdDate `xml:"urn:com.workday/bsvc Date_of_Employer_Signature"`
	}
	layout.T = (*T)(t)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.DateofRehire = (*xsdDate)(layout.T.DateofRehire)
	layout.DateofEmployerSignature = (*xsdDate)(&layout.T.DateofEmployerSignature)
	return e.EncodeElement(layout, start)
}
func (t *ExternalFormI9Section3DataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ExternalFormI9Section3DataType
	var overlay struct {
		*T
		ExpirationDate          *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		DateofRehire            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Rehire,omitempty"`
		DateofEmployerSignature *xsdDate `xml:"urn:com.workday/bsvc Date_of_Employer_Signature"`
	}
	overlay.T = (*T)(t)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.DateofRehire = (*xsdDate)(overlay.T.DateofRehire)
	overlay.DateofEmployerSignature = (*xsdDate)(&overlay.T.DateofEmployerSignature)
	return d.DecodeElement(&overlay, &start)
}

// External Form I-9 Source Data
type ExternalFormI9SourceDataType struct {
	ExternalFormI9SourceName string `xml:"urn:com.workday/bsvc External_Form_I-9_Source_Name"`
	Inactive                 *bool  `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	ExternalFormI9SourceID   string `xml:"urn:com.workday/bsvc External_Form_I-9_Source_ID,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ExternalFormI9SourceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ExternalFormI9SourceObjectType struct {
	ID         []ExternalFormI9SourceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// External Form I-9 Source Request Criteria
type ExternalFormI9SourceRequestCriteriaType struct {
}

// External Form I-9 Source Request References
type ExternalFormI9SourceRequestReferencesType struct {
	ExternalFormI9SourceReference []ExternalFormI9SourceObjectType `xml:"urn:com.workday/bsvc External_Form_I-9_Source_Reference"`
}

// External Form I-9 Source Response Data
type ExternalFormI9SourceResponseDataType struct {
	ExternalFormI9Source []ExternalFormI9SourceType `xml:"urn:com.workday/bsvc External_Form_I-9_Source,omitempty"`
}

// External Form I-9 Source Response Group
type ExternalFormI9SourceResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// External Form I-9 Source
type ExternalFormI9SourceType struct {
	ExternalFormI9SourceReference *ExternalFormI9SourceObjectType `xml:"urn:com.workday/bsvc External_Form_I-9_Source_Reference,omitempty"`
	ExternalFormI9SourceData      *ExternalFormI9SourceDataType   `xml:"urn:com.workday/bsvc External_Form_I-9_Source_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ExternalInstitutionGradingSchemeGradePointValueObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ExternalInstitutionGradingSchemeGradePointValueObjectType struct {
	ID         []ExternalInstitutionGradingSchemeGradePointValueObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Integration ID Help Text
type ExternalIntegrationIDDataType struct {
	ID []IDType `xml:"urn:com.workday/bsvc ID"`
}

// Integration ID reference is used as a unique identifier for integratable objects in the Workday system.
type ExternalIntegrationIDReferenceDataType struct {
	ID         *IDType `xml:"urn:com.workday/bsvc ID"`
	Descriptor string  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ExternalPayGroupObjectIDType struct {
	Value      string `xml:",chardata"`
	Type       string `xml:"urn:com.workday/bsvc type,attr"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
}

type ExternalPayGroupObjectType struct {
	ID         []ExternalPayGroupObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of External Pay Group.
type ExternalPayGroupReferenceType struct {
	PayGroupID string `xml:"urn:com.workday/bsvc Pay_Group_ID"`
}

// Contains a unique identifier for an instance of an object.
type ExternalPayrollEmployeeTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ExternalPayrollEmployeeTypeObjectType struct {
	ID         []ExternalPayrollEmployeeTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ExternalPayrollEntityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ExternalPayrollEntityObjectType struct {
	ID         []ExternalPayrollEntityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of External Payroll Entity.
type ExternalPayrollEntityReferenceType struct {
	PayrollEntityID string `xml:"urn:com.workday/bsvc Payroll_Entity_ID,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ExternalSourceSystemObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ExternalSourceSystemObjectType struct {
	ID         []ExternalSourceSystemObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ExternalURLObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ExternalURLObjectType struct {
	ID         []ExternalURLObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the employee's feedback received
type FeedbackReceivedDataType struct {
	FeedbackReceived []FeedbackReceivedType `xml:"urn:com.workday/bsvc Feedback_Received,omitempty"`
}

// Contains the informational components of a feedback (comment, date, question asked, sender, requester, and type).
type FeedbackReceivedType struct {
	From                       string                 `xml:"urn:com.workday/bsvc From,omitempty"`
	RequestedByWorkerReference *WorkerObjectType      `xml:"urn:com.workday/bsvc Requested_By_Worker_Reference,omitempty"`
	FeedbackType               string                 `xml:"urn:com.workday/bsvc Feedback_Type,omitempty"`
	Date                       *time.Time             `xml:"urn:com.workday/bsvc Date,omitempty"`
	FeedbackResponseData       []FeedbackResponseType `xml:"urn:com.workday/bsvc Feedback_Response_Data,omitempty"`
}

func (t *FeedbackReceivedType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T FeedbackReceivedType
	var layout struct {
		*T
		Date *xsdDate `xml:"urn:com.workday/bsvc Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.Date = (*xsdDate)(layout.T.Date)
	return e.EncodeElement(layout, start)
}
func (t *FeedbackReceivedType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T FeedbackReceivedType
	var overlay struct {
		*T
		Date *xsdDate `xml:"urn:com.workday/bsvc Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Date = (*xsdDate)(overlay.T.Date)
	return d.DecodeElement(&overlay, &start)
}

// Element for Feedback Comments and Questions.  There can be multiple questions per request, thus multiple comments per feedback given.
type FeedbackResponseType struct {
	FeedbackQuestion string `xml:"urn:com.workday/bsvc Feedback_Question,omitempty"`
	FeedbackComment  string `xml:"urn:com.workday/bsvc Feedback_Comment,omitempty"`
}

// Field Result Request Criteria
type FieldAndParameterCriteriaDataType struct {
	ProviderReference []ExternalFieldandParameterInitializationProviderObjectType `xml:"urn:com.workday/bsvc Provider_Reference"`
}

// A unique identifier used to reference a Field Of Study.
type FieldOfStudyReferenceType struct {
	FieldOfStudyName string `xml:"urn:com.workday/bsvc Field_Of_Study_Name"`
}

// Contains a unique identifier for an instance of an object.
type FieldofStudyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type FieldofStudyObjectType struct {
	ID         []FieldofStudyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type FormI9AttachmentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type FormI9AttachmentObjectType struct {
	ID         []FormI9AttachmentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type FormI9CitizenshipStatusWorkdayOwnedObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type FormI9CitizenshipStatusWorkdayOwnedObjectType struct {
	ID         []FormI9CitizenshipStatusWorkdayOwnedObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type FormI9IdentifierTypeWorkdayOwnedObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type FormI9IdentifierTypeWorkdayOwnedObjectType struct {
	ID         []FormI9IdentifierTypeWorkdayOwnedObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type FormI9ObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type FormI9ObjectType struct {
	ID         []FormI9ObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The information about the former worker document, such as the category and file.
type FormerWorkerAttachmentDataType struct {
	ID                        string                         `xml:"urn:com.workday/bsvc ID,omitempty"`
	FileName                  string                         `xml:"urn:com.workday/bsvc File_Name,omitempty"`
	File                      *[]byte                        `xml:"urn:com.workday/bsvc File,omitempty"`
	FormerWorkerReference     *FormerWorkerObjectType        `xml:"urn:com.workday/bsvc Former_Worker_Reference,omitempty"`
	DocumentCategoryReference *DocumentCategoryAllObjectType `xml:"urn:com.workday/bsvc Document_Category_Reference,omitempty"`
	Comment                   string                         `xml:"urn:com.workday/bsvc Comment,omitempty"`
	ContentType               string                         `xml:"urn:com.workday/bsvc Content_Type,omitempty"`
}

func (t *FormerWorkerAttachmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T FormerWorkerAttachmentDataType
	var layout struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	layout.T = (*T)(t)
	layout.File = (*xsdBase64Binary)(layout.T.File)
	return e.EncodeElement(layout, start)
}
func (t *FormerWorkerAttachmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T FormerWorkerAttachmentDataType
	var overlay struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.File = (*xsdBase64Binary)(overlay.T.File)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type FormerWorkerAttachmentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type FormerWorkerAttachmentObjectType struct {
	ID         []FormerWorkerAttachmentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request Criteria for Get Former Worker Documents
type FormerWorkerAttachmentRequestCriteriaELType struct {
	FormerWorkerReference []FormerWorkerObjectType `xml:"urn:com.workday/bsvc Former_Worker_Reference,omitempty"`
}

// Reference for Former worker attachment request
type FormerWorkerAttachmentRequestReferencesType struct {
	FormerWorkerDocumentReference []FormerWorkerAttachmentObjectType `xml:"urn:com.workday/bsvc Former_Worker_Document_Reference"`
}

// Former Worker Document Response Data containing the retrieved Worker Document information.
type FormerWorkerAttachmentResponseDataType struct {
	FormerWorkerDocument []FormerWorkerAttachmentType `xml:"urn:com.workday/bsvc Former_Worker_Document,omitempty"`
}

// Former Worker Document Response Group which controls the type and amount of data returned.
type FormerWorkerAttachmentResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Contains the retrieved Former Worker Document information.
type FormerWorkerAttachmentType struct {
	FormerWorkerDocumentReference *FormerWorkerAttachmentObjectType `xml:"urn:com.workday/bsvc Former_Worker_Document_Reference,omitempty"`
	FormerWorkerDocumentData      *FormerWorkerAttachmentDataType   `xml:"urn:com.workday/bsvc Former_Worker_Document_Data,omitempty"`
}

// Data for a Former Worker.
type FormerWorkerDataType struct {
	ID                         string                                   `xml:"urn:com.workday/bsvc ID,omitempty"`
	FormerWorkerID             string                                   `xml:"urn:com.workday/bsvc Former_Worker_ID,omitempty"`
	WorkerTypeReference        *WorkerTypeObjectType                    `xml:"urn:com.workday/bsvc Worker_Type_Reference,omitempty"`
	LastTerminationDate        *time.Time                               `xml:"urn:com.workday/bsvc Last_Termination_Date,omitempty"`
	MostRecentHireDate         *time.Time                               `xml:"urn:com.workday/bsvc Most_Recent_Hire_Date,omitempty"`
	OriginalHireDate           *time.Time                               `xml:"urn:com.workday/bsvc Original_Hire_Date,omitempty"`
	ContinuousServiceDate      *time.Time                               `xml:"urn:com.workday/bsvc Continuous_Service_Date,omitempty"`
	PersonalInformationData    *FormerWorkerPersonalInformationDataType `xml:"urn:com.workday/bsvc Personal_Information_Data,omitempty"`
	LastTerminationReason      string                                   `xml:"urn:com.workday/bsvc Last_Termination_Reason,omitempty"`
	Manager                    string                                   `xml:"urn:com.workday/bsvc Manager,omitempty"`
	CostCenter                 string                                   `xml:"urn:com.workday/bsvc Cost_Center,omitempty"`
	JobTitle                   string                                   `xml:"urn:com.workday/bsvc Job_Title,omitempty"`
	JobCode                    string                                   `xml:"urn:com.workday/bsvc Job_Code,omitempty"`
	JobProfileText             string                                   `xml:"urn:com.workday/bsvc Job_Profile_Text,omitempty"`
	JobLevel                   string                                   `xml:"urn:com.workday/bsvc Job_Level,omitempty"`
	TimeType                   string                                   `xml:"urn:com.workday/bsvc Time_Type,omitempty"`
	Location                   string                                   `xml:"urn:com.workday/bsvc Location,omitempty"`
	BasePay                    float64                                  `xml:"urn:com.workday/bsvc Base_Pay,omitempty"`
	CurrencyReference          *CurrencyObjectType                      `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference         *FrequencyObjectType                     `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	ScheduledWeeklyHours       float64                                  `xml:"urn:com.workday/bsvc Scheduled_Weekly_Hours,omitempty"`
	EligibleforRehireReference *CommonYesNoObjectType                   `xml:"urn:com.workday/bsvc Eligible_for_Rehire_Reference,omitempty"`
	PerformanceRating          string                                   `xml:"urn:com.workday/bsvc Performance_Rating,omitempty"`
	FormerWorkerRelatedData    *FormerWorkerRelatedDataType             `xml:"urn:com.workday/bsvc Former_Worker_Related_Data,omitempty"`
}

func (t *FormerWorkerDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T FormerWorkerDataType
	var layout struct {
		*T
		LastTerminationDate   *xsdDate `xml:"urn:com.workday/bsvc Last_Termination_Date,omitempty"`
		MostRecentHireDate    *xsdDate `xml:"urn:com.workday/bsvc Most_Recent_Hire_Date,omitempty"`
		OriginalHireDate      *xsdDate `xml:"urn:com.workday/bsvc Original_Hire_Date,omitempty"`
		ContinuousServiceDate *xsdDate `xml:"urn:com.workday/bsvc Continuous_Service_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.LastTerminationDate = (*xsdDate)(layout.T.LastTerminationDate)
	layout.MostRecentHireDate = (*xsdDate)(layout.T.MostRecentHireDate)
	layout.OriginalHireDate = (*xsdDate)(layout.T.OriginalHireDate)
	layout.ContinuousServiceDate = (*xsdDate)(layout.T.ContinuousServiceDate)
	return e.EncodeElement(layout, start)
}
func (t *FormerWorkerDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T FormerWorkerDataType
	var overlay struct {
		*T
		LastTerminationDate   *xsdDate `xml:"urn:com.workday/bsvc Last_Termination_Date,omitempty"`
		MostRecentHireDate    *xsdDate `xml:"urn:com.workday/bsvc Most_Recent_Hire_Date,omitempty"`
		OriginalHireDate      *xsdDate `xml:"urn:com.workday/bsvc Original_Hire_Date,omitempty"`
		ContinuousServiceDate *xsdDate `xml:"urn:com.workday/bsvc Continuous_Service_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LastTerminationDate = (*xsdDate)(overlay.T.LastTerminationDate)
	overlay.MostRecentHireDate = (*xsdDate)(overlay.T.MostRecentHireDate)
	overlay.OriginalHireDate = (*xsdDate)(overlay.T.OriginalHireDate)
	overlay.ContinuousServiceDate = (*xsdDate)(overlay.T.ContinuousServiceDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type FormerWorkerObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type FormerWorkerObjectType struct {
	ID         []FormerWorkerObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Personal data for the former worker.
type FormerWorkerPersonalInformationDataType struct {
	NameData               *PersonNameDataType         `xml:"urn:com.workday/bsvc Name_Data,omitempty"`
	BirthDate              *time.Time                  `xml:"urn:com.workday/bsvc Birth_Date,omitempty"`
	EthnicityReference     []EthnicityObjectType       `xml:"urn:com.workday/bsvc Ethnicity_Reference,omitempty"`
	HispanicorLatino       *bool                       `xml:"urn:com.workday/bsvc Hispanic_or_Latino,omitempty"`
	ContactInformationData *ContactInformationDataType `xml:"urn:com.workday/bsvc Contact_Information_Data,omitempty"`
	NationalIdentifierData []NationalIDType            `xml:"urn:com.workday/bsvc National_Identifier_Data,omitempty"`
}

func (t *FormerWorkerPersonalInformationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T FormerWorkerPersonalInformationDataType
	var layout struct {
		*T
		BirthDate *xsdDate `xml:"urn:com.workday/bsvc Birth_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.BirthDate = (*xsdDate)(layout.T.BirthDate)
	return e.EncodeElement(layout, start)
}
func (t *FormerWorkerPersonalInformationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T FormerWorkerPersonalInformationDataType
	var overlay struct {
		*T
		BirthDate *xsdDate `xml:"urn:com.workday/bsvc Birth_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.BirthDate = (*xsdDate)(overlay.T.BirthDate)
	return d.DecodeElement(&overlay, &start)
}

// Returns data that is related to a former worker. Any data entered in this element in the Put Request will be ignored.
type FormerWorkerRelatedDataType struct {
	Rehired            *bool                `xml:"urn:com.workday/bsvc Rehired,omitempty"`
	ApplicantReference *ApplicantObjectType `xml:"urn:com.workday/bsvc Applicant_Reference,omitempty"`
	WorkerReference    []WorkerObjectType   `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
}

// Utilize the Request Criteria element to limit the Former Workers returned based on the specific criteria.  Former Workers that are returned must meet all of the criteria specified.
type FormerWorkerRequestCriteriaType struct {
	UpdatedFromMoment      *time.Time                              `xml:"urn:com.workday/bsvc Updated_From_Moment,omitempty"`
	UpdateToMoment         *time.Time                              `xml:"urn:com.workday/bsvc Update_To_Moment,omitempty"`
	TerminatedFromDate     *time.Time                              `xml:"urn:com.workday/bsvc Terminated_From_Date,omitempty"`
	TerminatedToDate       *time.Time                              `xml:"urn:com.workday/bsvc Terminated_To_Date,omitempty"`
	NationalIDCriteriaData []WorkerbyNationalIDRequestCriteriaType `xml:"urn:com.workday/bsvc National_ID_Criteria_Data,omitempty"`
}

func (t *FormerWorkerRequestCriteriaType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T FormerWorkerRequestCriteriaType
	var layout struct {
		*T
		UpdatedFromMoment  *xsdDateTime `xml:"urn:com.workday/bsvc Updated_From_Moment,omitempty"`
		UpdateToMoment     *xsdDateTime `xml:"urn:com.workday/bsvc Update_To_Moment,omitempty"`
		TerminatedFromDate *xsdDate     `xml:"urn:com.workday/bsvc Terminated_From_Date,omitempty"`
		TerminatedToDate   *xsdDate     `xml:"urn:com.workday/bsvc Terminated_To_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.UpdatedFromMoment = (*xsdDateTime)(layout.T.UpdatedFromMoment)
	layout.UpdateToMoment = (*xsdDateTime)(layout.T.UpdateToMoment)
	layout.TerminatedFromDate = (*xsdDate)(layout.T.TerminatedFromDate)
	layout.TerminatedToDate = (*xsdDate)(layout.T.TerminatedToDate)
	return e.EncodeElement(layout, start)
}
func (t *FormerWorkerRequestCriteriaType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T FormerWorkerRequestCriteriaType
	var overlay struct {
		*T
		UpdatedFromMoment  *xsdDateTime `xml:"urn:com.workday/bsvc Updated_From_Moment,omitempty"`
		UpdateToMoment     *xsdDateTime `xml:"urn:com.workday/bsvc Update_To_Moment,omitempty"`
		TerminatedFromDate *xsdDate     `xml:"urn:com.workday/bsvc Terminated_From_Date,omitempty"`
		TerminatedToDate   *xsdDate     `xml:"urn:com.workday/bsvc Terminated_To_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UpdatedFromMoment = (*xsdDateTime)(overlay.T.UpdatedFromMoment)
	overlay.UpdateToMoment = (*xsdDateTime)(overlay.T.UpdateToMoment)
	overlay.TerminatedFromDate = (*xsdDate)(overlay.T.TerminatedFromDate)
	overlay.TerminatedToDate = (*xsdDate)(overlay.T.TerminatedToDate)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the Request References element to retrieve a specific instance(s) of  a Former Worker and its associated data.
type FormerWorkerRequestReferencesType struct {
	FormerWorkerReference []FormerWorkerObjectType `xml:"urn:com.workday/bsvc Former_Worker_Reference"`
}

// Response element containing an instance of a Former Worker and its associated data.
type FormerWorkerResponseDataType struct {
	FormerWorker []FormerWorkerType `xml:"urn:com.workday/bsvc Former_Worker,omitempty"`
}

// The response group allows for the response data to be tailored to only included elements that the user is looking for.  If no response group is provided in the request then only the following elements will be returned:  Reference and Former Worker Data.
type FormerWorkerResponseGroupType struct {
	IncludeFormerWorkerAttachments *bool `xml:"urn:com.workday/bsvc Include_Former_Worker_Attachments,omitempty"`
}

// Contains the data for adding or updating a Former Worker.
type FormerWorkerType struct {
	FormerWorkerReference *FormerWorkerObjectType `xml:"urn:com.workday/bsvc Former_Worker_Reference,omitempty"`
	FormerWorkerData      *FormerWorkerDataType   `xml:"urn:com.workday/bsvc Former_Worker_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type FrequencyBehaviorObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type FrequencyBehaviorObjectType struct {
	ID         []FrequencyBehaviorObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Container for the core frequency data
type FrequencyDataType struct {
	FrequencyID                string                       `xml:"urn:com.workday/bsvc Frequency_ID,omitempty"`
	Name                       string                       `xml:"urn:com.workday/bsvc Name"`
	AnnualizationFactor        float64                      `xml:"urn:com.workday/bsvc Annualization_Factor"`
	FrequencyBehaviorReference *FrequencyBehaviorObjectType `xml:"urn:com.workday/bsvc Frequency_Behavior_Reference,omitempty"`
	UseWeeklyHours             *bool                        `xml:"urn:com.workday/bsvc Use_Weekly_Hours,omitempty"`
	UsedinPayrollInterface     *bool                        `xml:"urn:com.workday/bsvc Used_in_Payroll_Interface,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type FrequencyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type FrequencyObjectType struct {
	ID         []FrequencyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Frequency.
type FrequencyReferenceDataType struct {
	FrequencyName string `xml:"urn:com.workday/bsvc Frequency_Name"`
}

// "References" element allowing the specification of specific object instances to be returned based on  ID values.
type FrequencyRequestReferencesType struct {
	FrequencyReference []FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference"`
}

// Contains the core response data based on the request submitted
type FrequencyResponseDataType struct {
	Frequency []FrequencyType `xml:"urn:com.workday/bsvc Frequency,omitempty"`
}

// Contains the data for a single frequency
type FrequencyType struct {
	FrequencyReference *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	FrequencyData      *FrequencyDataType   `xml:"urn:com.workday/bsvc Frequency_Data,omitempty"`
}

// Future payment plan assignment data submitted by the put future payment plan assignment request.
type FuturePaymentPlanAssignmentDataType struct {
	CompensationPlanReference         *FuturePaymentPlanObjectType `xml:"urn:com.workday/bsvc Compensation_Plan_Reference,omitempty"`
	IndividualTargetAmount            float64                      `xml:"urn:com.workday/bsvc Individual_Target_Amount,omitempty"`
	IndividualTargetCurrencyReference *CurrencyObjectType          `xml:"urn:com.workday/bsvc Individual_Target_Currency_Reference,omitempty"`
	IndividualTargetPaymentDate       *time.Time                   `xml:"urn:com.workday/bsvc Individual_Target_Payment_Date,omitempty"`
	Comment                           string                       `xml:"urn:com.workday/bsvc Comment,omitempty"`
}

func (t *FuturePaymentPlanAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T FuturePaymentPlanAssignmentDataType
	var layout struct {
		*T
		IndividualTargetPaymentDate *xsdDate `xml:"urn:com.workday/bsvc Individual_Target_Payment_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IndividualTargetPaymentDate = (*xsdDate)(layout.T.IndividualTargetPaymentDate)
	return e.EncodeElement(layout, start)
}
func (t *FuturePaymentPlanAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T FuturePaymentPlanAssignmentDataType
	var overlay struct {
		*T
		IndividualTargetPaymentDate *xsdDate `xml:"urn:com.workday/bsvc Individual_Target_Payment_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IndividualTargetPaymentDate = (*xsdDate)(overlay.T.IndividualTargetPaymentDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type FuturePaymentPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type FuturePaymentPlanObjectType struct {
	ID         []FuturePaymentPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The gender identity data for workers.
type GenderIdentityDataType struct {
	ID                        string `xml:"urn:com.workday/bsvc ID,omitempty"`
	GenderIdentityName        string `xml:"urn:com.workday/bsvc Gender_Identity_Name"`
	GenderIdentityCode        string `xml:"urn:com.workday/bsvc Gender_Identity_Code,omitempty"`
	GenderIdentityDescription string `xml:"urn:com.workday/bsvc Gender_Identity_Description,omitempty"`
	GenderIdentityInactive    *bool  `xml:"urn:com.workday/bsvc Gender_Identity_Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type GenderIdentityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type GenderIdentityObjectType struct {
	ID         []GenderIdentityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The Criteria of the request
type GenderIdentityRequestCriteriaType struct {
}

// Reference to the gender identity of the person.
type GenderIdentityRequestReferencesType struct {
	GenderIdentityReference []GenderIdentityObjectType `xml:"urn:com.workday/bsvc Gender_Identity_Reference"`
}

// The gender identity response data.
type GenderIdentityResponseDataType struct {
	GenderIdentity []GenderIdentityType `xml:"urn:com.workday/bsvc Gender_Identity,omitempty"`
}

// The gender identity for a worker.
type GenderIdentityType struct {
	GenderIdentityReference *GenderIdentityObjectType `xml:"urn:com.workday/bsvc Gender_Identity_Reference,omitempty"`
	GenderIdentityData      []GenderIdentityDataType  `xml:"urn:com.workday/bsvc Gender_Identity_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type GenderObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type GenderObjectType struct {
	ID         []GenderObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Gender.
type GenderReferenceType struct {
	GenderDescription string `xml:"urn:com.workday/bsvc Gender_Description"`
}

// Contains a unique identifier for an instance of an object.
type GeneralEventSubcategoryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type GeneralEventSubcategoryObjectType struct {
	ID         []GeneralEventSubcategoryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for all Disability Status data for the person.
type GenericDisabilityInformationDataType struct {
	DisabilityStatusInformationData []GenericDisabilityStatusInformationDataType `xml:"urn:com.workday/bsvc Disability_Status_Information_Data,omitempty"`
	ReplaceAll                      bool                                         `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Wrapper element for each disability status entry.
type GenericDisabilityStatusInformationDataType struct {
	DisabilityStatusReference *DisabilityStatusReferenceObjectType `xml:"urn:com.workday/bsvc Disability_Status_Reference,omitempty"`
	DisabilityStatusData      *GenericDisabilityStatusSubDataType  `xml:"urn:com.workday/bsvc Disability_Status_Data,omitempty"`
	Delete                    bool                                 `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Container for disability status data.
type GenericDisabilityStatusSubDataType struct {
	DisabilityReference                       *DisabilityObjectType                       `xml:"urn:com.workday/bsvc Disability_Reference"`
	DisabilityStatusDate                      *time.Time                                  `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
	DisabilityDateKnown                       *time.Time                                  `xml:"urn:com.workday/bsvc Disability_Date_Known,omitempty"`
	DisabilityEndDate                         *time.Time                                  `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
	DisabilityGradeReference                  *DisabilityGradeObjectType                  `xml:"urn:com.workday/bsvc Disability_Grade_Reference,omitempty"`
	DisabilityDegree                          float64                                     `xml:"urn:com.workday/bsvc Disability_Degree,omitempty"`
	DisabilityRemainingCapacity               float64                                     `xml:"urn:com.workday/bsvc Disability_Remaining_Capacity,omitempty"`
	DisabilityCertificationAuthorityReference *DisabilityCertificationAuthorityObjectType `xml:"urn:com.workday/bsvc Disability_Certification_Authority_Reference,omitempty"`
	DisabilityAuthority                       string                                      `xml:"urn:com.workday/bsvc Disability_Authority,omitempty"`
	DisabilityCertifiedAt                     string                                      `xml:"urn:com.workday/bsvc Disability_Certified_At,omitempty"`
	DisabilityCertificationID                 string                                      `xml:"urn:com.workday/bsvc Disability_Certification_ID,omitempty"`
	DisabilityCertificationBasisReference     *DisabilityCertificationBasisObjectType     `xml:"urn:com.workday/bsvc Disability_Certification_Basis_Reference,omitempty"`
	DisabilitySeverityRecognitionDate         *time.Time                                  `xml:"urn:com.workday/bsvc Disability_Severity_Recognition_Date,omitempty"`
	DisabilityFTETowardQuota                  float64                                     `xml:"urn:com.workday/bsvc Disability_FTE_Toward_Quota,omitempty"`
	DisabilityWorkRestrictions                string                                      `xml:"urn:com.workday/bsvc Disability_Work_Restrictions,omitempty"`
	DisabilityAccommodationsRequested         string                                      `xml:"urn:com.workday/bsvc Disability_Accommodations_Requested,omitempty"`
	DisabilityAccommodationsProvided          string                                      `xml:"urn:com.workday/bsvc Disability_Accommodations_Provided,omitempty"`
	DisabilityRehabilitationRequested         string                                      `xml:"urn:com.workday/bsvc Disability_Rehabilitation_Requested,omitempty"`
	DisabilityRehabilitationProvided          string                                      `xml:"urn:com.workday/bsvc Disability_Rehabilitation_Provided,omitempty"`
	Note                                      string                                      `xml:"urn:com.workday/bsvc Note,omitempty"`
	WorkerDocumentReference                   []WorkerDocumentObjectType                  `xml:"urn:com.workday/bsvc Worker_Document_Reference,omitempty"`
}

func (t *GenericDisabilityStatusSubDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T GenericDisabilityStatusSubDataType
	var layout struct {
		*T
		DisabilityStatusDate              *xsdDate `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
		DisabilityDateKnown               *xsdDate `xml:"urn:com.workday/bsvc Disability_Date_Known,omitempty"`
		DisabilityEndDate                 *xsdDate `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
		DisabilitySeverityRecognitionDate *xsdDate `xml:"urn:com.workday/bsvc Disability_Severity_Recognition_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DisabilityStatusDate = (*xsdDate)(layout.T.DisabilityStatusDate)
	layout.DisabilityDateKnown = (*xsdDate)(layout.T.DisabilityDateKnown)
	layout.DisabilityEndDate = (*xsdDate)(layout.T.DisabilityEndDate)
	layout.DisabilitySeverityRecognitionDate = (*xsdDate)(layout.T.DisabilitySeverityRecognitionDate)
	return e.EncodeElement(layout, start)
}
func (t *GenericDisabilityStatusSubDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T GenericDisabilityStatusSubDataType
	var overlay struct {
		*T
		DisabilityStatusDate              *xsdDate `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
		DisabilityDateKnown               *xsdDate `xml:"urn:com.workday/bsvc Disability_Date_Known,omitempty"`
		DisabilityEndDate                 *xsdDate `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
		DisabilitySeverityRecognitionDate *xsdDate `xml:"urn:com.workday/bsvc Disability_Severity_Recognition_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DisabilityStatusDate = (*xsdDate)(overlay.T.DisabilityStatusDate)
	overlay.DisabilityDateKnown = (*xsdDate)(overlay.T.DisabilityDateKnown)
	overlay.DisabilityEndDate = (*xsdDate)(overlay.T.DisabilityEndDate)
	overlay.DisabilitySeverityRecognitionDate = (*xsdDate)(overlay.T.DisabilitySeverityRecognitionDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper element for all Military Service data for the person.
type GenericMilitaryInformationDataType struct {
	MilitaryServiceInformationData []GenericMilitaryServiceInformationDataType `xml:"urn:com.workday/bsvc Military_Service_Information_Data,omitempty"`
	ReplaceAll                     bool                                        `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Wrapper element for each Military Service entry.
type GenericMilitaryServiceInformationDataType struct {
	MilitaryServiceReference *MilitaryServiceReferenceObjectType `xml:"urn:com.workday/bsvc Military_Service_Reference,omitempty"`
	MilitaryServiceData      *GenericMilitaryServiceSubDataType  `xml:"urn:com.workday/bsvc Military_Service_Data,omitempty"`
	Delete                   bool                                `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Container for military service data for the Person
type GenericMilitaryServiceSubDataType struct {
	MilitaryStatusReference      *MilitaryStatusObjectType      `xml:"urn:com.workday/bsvc Military_Status_Reference"`
	MilitaryDischargeDate        *time.Time                     `xml:"urn:com.workday/bsvc Military_Discharge_Date,omitempty"`
	MilitaryStatusBeginDate      *time.Time                     `xml:"urn:com.workday/bsvc Military_Status_Begin_Date,omitempty"`
	MilitaryServiceTypeReference *MilitaryServiceTypeObjectType `xml:"urn:com.workday/bsvc Military_Service_Type_Reference,omitempty"`
	MilitaryRankReference        *MilitaryRankObjectType        `xml:"urn:com.workday/bsvc Military_Rank_Reference,omitempty"`
	Notes                        string                         `xml:"urn:com.workday/bsvc Notes,omitempty"`
}

func (t *GenericMilitaryServiceSubDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T GenericMilitaryServiceSubDataType
	var layout struct {
		*T
		MilitaryDischargeDate   *xsdDate `xml:"urn:com.workday/bsvc Military_Discharge_Date,omitempty"`
		MilitaryStatusBeginDate *xsdDate `xml:"urn:com.workday/bsvc Military_Status_Begin_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.MilitaryDischargeDate = (*xsdDate)(layout.T.MilitaryDischargeDate)
	layout.MilitaryStatusBeginDate = (*xsdDate)(layout.T.MilitaryStatusBeginDate)
	return e.EncodeElement(layout, start)
}
func (t *GenericMilitaryServiceSubDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T GenericMilitaryServiceSubDataType
	var overlay struct {
		*T
		MilitaryDischargeDate   *xsdDate `xml:"urn:com.workday/bsvc Military_Discharge_Date,omitempty"`
		MilitaryStatusBeginDate *xsdDate `xml:"urn:com.workday/bsvc Military_Status_Begin_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MilitaryDischargeDate = (*xsdDate)(overlay.T.MilitaryDischargeDate)
	overlay.MilitaryStatusBeginDate = (*xsdDate)(overlay.T.MilitaryStatusBeginDate)
	return d.DecodeElement(&overlay, &start)
}

// Container for the Personal Information data.
type GenericPersonalInformationDataType struct {
	GenderReference                 *GenderObjectType                      `xml:"urn:com.workday/bsvc Gender_Reference,omitempty"`
	DateofBirth                     *time.Time                             `xml:"urn:com.workday/bsvc Date_of_Birth,omitempty"`
	DateofDeath                     *time.Time                             `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
	BirthCountryReference           *CountryObjectType                     `xml:"urn:com.workday/bsvc Birth_Country_Reference,omitempty"`
	BirthRegionReference            *CountryRegionObjectType               `xml:"urn:com.workday/bsvc Birth_Region_Reference,omitempty"`
	CityofBirth                     string                                 `xml:"urn:com.workday/bsvc City_of_Birth,omitempty"`
	MaritalStatusReference          *MaritalStatusObjectType               `xml:"urn:com.workday/bsvc Marital_Status_Reference,omitempty"`
	MaritalStatusDate               *time.Time                             `xml:"urn:com.workday/bsvc Marital_Status_Date,omitempty"`
	EthnicityReference              []EthnicityObjectType                  `xml:"urn:com.workday/bsvc Ethnicity_Reference,omitempty"`
	HispanicorLatino                *bool                                  `xml:"urn:com.workday/bsvc Hispanic_or_Latino,omitempty"`
	ReligionReference               *ReligionObjectType                    `xml:"urn:com.workday/bsvc Religion_Reference,omitempty"`
	CitizenshipReference            []CitizenshipStatusObjectType          `xml:"urn:com.workday/bsvc Citizenship_Reference,omitempty"`
	NationalityReference            *CountryObjectType                     `xml:"urn:com.workday/bsvc Nationality_Reference,omitempty"`
	HukouRegionReference            *CountryRegionObjectType               `xml:"urn:com.workday/bsvc Hukou_Region_Reference,omitempty"`
	HukouSubregionReference         *CountrySubregionObjectType            `xml:"urn:com.workday/bsvc Hukou_Subregion_Reference,omitempty"`
	HukouLocality                   string                                 `xml:"urn:com.workday/bsvc Hukou_Locality,omitempty"`
	HukouPostalCode                 string                                 `xml:"urn:com.workday/bsvc Hukou_Postal_Code,omitempty"`
	HukouTypeReference              *HukouTypeObjectType                   `xml:"urn:com.workday/bsvc Hukou_Type_Reference,omitempty"`
	NativeRegionReference           *CountryRegionObjectType               `xml:"urn:com.workday/bsvc Native_Region_Reference,omitempty"`
	PersonnelFileAgency             string                                 `xml:"urn:com.workday/bsvc Personnel_File_Agency,omitempty"`
	PoliticalAffiliationReference   *PoliticalAffiliationObjectType        `xml:"urn:com.workday/bsvc Political_Affiliation_Reference,omitempty"`
	SocialBenefitsLocalityReference *SocialBenefitsLocalityObjectType      `xml:"urn:com.workday/bsvc Social_Benefits_Locality_Reference,omitempty"`
	LastMedicalExamDate             *time.Time                             `xml:"urn:com.workday/bsvc Last_Medical_Exam_Date,omitempty"`
	LastMedicalExamValidTo          *time.Time                             `xml:"urn:com.workday/bsvc Last_Medical_Exam_Valid_To,omitempty"`
	MedicalExamNotes                string                                 `xml:"urn:com.workday/bsvc Medical_Exam_Notes,omitempty"`
	DisabilityInformationData       []GenericDisabilityInformationDataType `xml:"urn:com.workday/bsvc Disability_Information_Data,omitempty"`
	MilitaryInformationData         []GenericMilitaryInformationDataType   `xml:"urn:com.workday/bsvc Military_Information_Data,omitempty"`
	UsesTobacco                     *bool                                  `xml:"urn:com.workday/bsvc Uses_Tobacco,omitempty"`
}

func (t *GenericPersonalInformationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T GenericPersonalInformationDataType
	var layout struct {
		*T
		DateofBirth            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Birth,omitempty"`
		DateofDeath            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
		MaritalStatusDate      *xsdDate `xml:"urn:com.workday/bsvc Marital_Status_Date,omitempty"`
		LastMedicalExamDate    *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Date,omitempty"`
		LastMedicalExamValidTo *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Valid_To,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DateofBirth = (*xsdDate)(layout.T.DateofBirth)
	layout.DateofDeath = (*xsdDate)(layout.T.DateofDeath)
	layout.MaritalStatusDate = (*xsdDate)(layout.T.MaritalStatusDate)
	layout.LastMedicalExamDate = (*xsdDate)(layout.T.LastMedicalExamDate)
	layout.LastMedicalExamValidTo = (*xsdDate)(layout.T.LastMedicalExamValidTo)
	return e.EncodeElement(layout, start)
}
func (t *GenericPersonalInformationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T GenericPersonalInformationDataType
	var overlay struct {
		*T
		DateofBirth            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Birth,omitempty"`
		DateofDeath            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
		MaritalStatusDate      *xsdDate `xml:"urn:com.workday/bsvc Marital_Status_Date,omitempty"`
		LastMedicalExamDate    *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Date,omitempty"`
		LastMedicalExamValidTo *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Valid_To,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DateofBirth = (*xsdDate)(overlay.T.DateofBirth)
	overlay.DateofDeath = (*xsdDate)(overlay.T.DateofDeath)
	overlay.MaritalStatusDate = (*xsdDate)(overlay.T.MaritalStatusDate)
	overlay.LastMedicalExamDate = (*xsdDate)(overlay.T.LastMedicalExamDate)
	overlay.LastMedicalExamValidTo = (*xsdDate)(overlay.T.LastMedicalExamValidTo)
	return d.DecodeElement(&overlay, &start)
}

// Get Academic Appointee Request
type GetAcademicAppointeeRequestType struct {
	RequestReferences *AcademicAppointeeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AcademicAppointeeRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *AcademicAppointeeResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Academic Appointee Response
type GetAcademicAppointeeResponseType struct {
	RequestReferences *AcademicAppointeeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AcademicAppointeeRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *AcademicAppointeeResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                    `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *AcademicAppointeeResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains request reference, criteria, and filter for getting Academic Track Additional data.
type GetAcademicAppointmentTrackAdditionalDataRequestType struct {
	RequestReferences *AcademicAppointmentTrackAdditionalDataRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AcademicAppointmentTrackAdditionalDataRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element containing Academic Appointment Track Additional Data for requested references or criteria.
type GetAcademicAppointmentTrackAdditionalDataResponseType struct {
	RequestReferences *AcademicAppointmentTrackAdditionalDataRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AcademicAppointmentTrackAdditionalDataRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                                         `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *AcademicAppointmentTrackAdditionalDataResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get Academic Rank
type GetAcademicRanksRequestType struct {
	RequestReferences *AcademicRankRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AcademicRankRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response Element for Get Academic Unit
type GetAcademicRanksResponseType struct {
	RequestReferences *AcademicRankRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AcademicRankRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType               `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *AcademicRankResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Top-level request element.
type GetAcademicUnitHierarchiesRequestType struct {
	RequestReferences *AcademicUnitHierarchyRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                         `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Top-level response element for the Get Academic Unit Hierarchies operation
type GetAcademicUnitHierarchiesResponseType struct {
	RequestReferences *AcademicUnitHierarchyRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                         `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                        `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *AcademicUnitHierarchyResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// A container for a request for one or more Academic Units
type GetAcademicUnitsRequestType struct {
	RequestReferences *AcademicUnitRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AcademicUnitRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *AcademicUnitResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// A container for Academic Unit response data
type GetAcademicUnitsResponseType struct {
	RequestReferences *AcademicUnitRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AcademicUnitRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *AcademicUnitResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType               `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *AcademicUnitResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Appointment Specialties Request
type GetAppointmentSpecialtiesRequestType struct {
	RequestReferences *AppointmentSpecialtyRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AppointmentSpecialtyRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                        `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *AppointmentSpecialtyResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Appointment Specialties Response
type GetAppointmentSpecialtiesResponseType struct {
	RequestReferences *AppointmentSpecialtyRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AppointmentSpecialtyRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                        `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *AppointmentSpecialtyResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                       `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *AppointmentSpecialtyResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Request wrapper for retrieving User-Based Security Groups and Workday Accounts that are members of the group
type GetAssignUserBasedSecurityGroupRequestType struct {
	RequestReferences []UserBasedSecurityGroupRequestReferencesType          `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   []UserBasedSecurityGroupRequestCriteriaType            `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    []ResponseFilterType                                   `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     []UserBasedSecurityGroupReferenceOnlyResponseGroupType `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response Element for the User-Based Security Group  and its member Workday Accounts
type GetAssignUserBasedSecurityGroupResponseType struct {
	RequestReferences *UserBasedSecurityGroupRequestReferencesType          `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *UserBasedSecurityGroupRequestCriteriaType            `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                   `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *UserBasedSecurityGroupReferenceOnlyResponseGroupType `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                                  `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *AssignUserBasedSecurityGroupResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Request wrapper for retrieving Workday Accounts and assigned User-Based Security Groups.
type GetAssignUserBasedSecurityGroupsRequestType struct {
	RequestReferences *AssignUserBasedSecurityGroupsRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *AssignUserBasedSecurityGroupsRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                 `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *AssignUserBasedSecurityGroupsResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response wrapper for retrieving Workday Accounts and assigned User-Based Security Groups.
type GetAssignUserBasedSecurityGroupsResponseType struct {
	RequestReferences *AssignUserBasedSecurityGroupsRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	Requestcriteria   *AssignUserBasedSecurityGroupsRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                 `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *AssignUserBasedSecurityGroupsResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                                `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *AssignUserBasedSecurityGroupsResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The Worker Reference to extract External Form I-9 Section 3 for Workers.
type GetChangeExternalFormI9Section3RequestReferencesType struct {
	WorkerReference []WorkerObjectType `xml:"urn:com.workday/bsvc Worker_Reference"`
}

// Utilize the Request References element to retrieve a specific  instance or instances of Worker and its associated IDs.
type GetChangeGovernmentIDsRequestReferencesType struct {
	PersonReference      []RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference []UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
}

// Request element used to get government IDs for a worker. The response is formatted to be usable as input to the Change Government IDs web service request.
type GetChangeGovernmentIDsRequestType struct {
	RequestReferences   *GetChangeGovernmentIDsRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter      *ResponseFilterType                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	RequestCriteriaData *ChangeGovernmentIDRequestCriteriaType       `xml:"urn:com.workday/bsvc Request_Criteria_Data,omitempty"`
	Version             string                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the Get Change Government IDs response elements including echoed request data and request references.
type GetChangeGovernmentIDsResponseType struct {
	RequestReferences []GetChangeGovernmentIDsRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                         `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []ChangeGovernmentIDsResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Allows retrieving home contact information based on request criteria.  Request Criteria is only used when Request References is not provided.
type GetChangeHomeContactInformationRequestCriteriaType struct {
	PersonTypeCriteriaData *PersonTypeCriteriaType `xml:"urn:com.workday/bsvc Person_Type_Criteria_Data,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance or instances of Person and their associated home contact information. Show Subelement Content
type GetChangeHomeContactInformationRequestReferencesType struct {
	PersonReference      []RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference []UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
}

// Request element used to get home contact information for a person.  The response is formatted to be usable as input to the Change Home Contact Information web service request.
type GetChangeHomeContactInformationRequestType struct {
	RequestReferences   *GetChangeHomeContactInformationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter      *ResponseFilterType                                   `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	RequestCriteriaData *GetChangeHomeContactInformationRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria_Data,omitempty"`
	Version             string                                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the Get Home Contact Information response elements including echoed request data and request references.
type GetChangeHomeContactInformationResponseType struct {
	RequestReferences []GetChangeHomeContactInformationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                                   `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                                  `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []ChangeHomeContactInformationResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Worker and its associated data.
type GetChangeLegalNameRequestReferencesType struct {
	PersonReference      []RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference []UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
}

// Request element used to get legal name for a worker. The response is formatted to be usable as input to the Change Legal Name web service request.
type GetChangeLegalNameRequestType struct {
	RequestReferences   *GetChangeLegalNameRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter      *ResponseFilterType                      `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	RequestCriteriaData *ChangeLegalNameRequestCriteriaType      `xml:"urn:com.workday/bsvc Request_Criteria_Data,omitempty"`
	Version             string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the Get Change Legal Name response elements including echoed request data and request references.
type GetChangeLegalNameResponseType struct {
	RequestReferences *GetChangeLegalNameRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                      `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                     `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *ChangeLegalNameResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific  instance or instances of Worker and its associated IDs.
type GetChangeLicensesRequestReferencesType struct {
	PersonReference      []RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference []UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
}

// Request element used to get licenses for a worker. The response is formatted to be usable as input to the Change Licenses web service request.
type GetChangeLicensesRequestType struct {
	RequestReferences   *GetChangeLicensesRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter      *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	RequestCriteriaData *ChangeLicenseIDRequestCriteriaType     `xml:"urn:com.workday/bsvc Request_Criteria_Data,omitempty"`
	Version             string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing a worker's licenses.
type GetChangeLicensesResponseType struct {
	RequestReferences []GetChangeLicensesRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                    `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []ChangeLicensesResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific  instance or instances of Worker and its associated IDs.
type GetChangeOtherIDsRequestReferencesType struct {
	PersonReference      []RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference []UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
}

// Request element used to get other IDs for a worker. The response is formatted to be usable as input to the Change Other IDs web service request.
type GetChangeOtherIDsRequestType struct {
	RequestReferences   *GetChangeOtherIDsRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter      *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	RequestCriteriaData *ChangeOtherIDRequestCriteriaType       `xml:"urn:com.workday/bsvc Request_Criteria_Data,omitempty"`
	Version             string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing a worker's other IDs.
type GetChangeOtherIDsResponseType struct {
	RequestReferences []GetChangeOtherIDsRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                    `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []ChangeOtherIDsResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific  instance or instances of Worker and its associated IDs.
type GetChangePassportsandVisasRequestReferencesType struct {
	PersonReference      []RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference []UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
}

// Request element used to get passports and visas for a worker. The response is formatted to be usable as input to the Change Passports and Visas web service request.
type GetChangePassportsandVisasRequestType struct {
	RequestReferences   *GetChangePassportsandVisasRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter      *ResponseFilterType                              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	RequestCriteriaData *ChangePassportandVisaRequestCriteriaType        `xml:"urn:com.workday/bsvc Request_Criteria_Data,omitempty"`
	Version             string                                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing a worker's passports and visas.
type GetChangePassportsandVisasResponseType struct {
	RequestReferences []GetChangePassportsandVisasRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                             `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []ChangePassportsandVisasResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Worker and its associated data.
type GetChangePreferredNameRequestReferencesType struct {
	PersonReference      []RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference []UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
}

// Request element used to get preferred name for a worker. The response is formatted to be usable as input to the Change Preferred Name web service request.
type GetChangePreferredNameRequestType struct {
	RequestReferences   *GetChangePreferredNameRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter      *ResponseFilterType                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	RequestCriteriaData *ChangePreferredNameRequestCriteriaType      `xml:"urn:com.workday/bsvc Request_Criteria_Data,omitempty"`
	Version             string                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the Get Change Preferred Name response elements including echoed request data and request references.
type GetChangePreferredNameResponseType struct {
	RequestReferences *GetChangePreferredNameRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                         `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *ChangePreferredNameResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Worker and its associated data.
type GetChangeVeteranStatusIdentificationRequestReferencesType struct {
	WorkerReference []WorkerObjectType `xml:"urn:com.workday/bsvc Worker_Reference"`
}

// This request element contains the necessary data for requesting Veteran Status Identifications of a Worker.
type GetChangeVeteranStatusIdentificationRequestType struct {
	RequestReferences *GetChangeVeteranStatusIdentificationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                                        `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the Change Veteran Status Identification response elements including echoed request data and request references.
type GetChangeVeteranStatusIdentificationResponseType struct {
	RequestReferences *GetChangeVeteranStatusIdentificationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                                        `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                                       `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *ChangeVeteranStatusIdentificationResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Allows retrieving work contact information based on request criteria.  Request Criteria is only used when Request References is not provided.
type GetChangeWorkContactInformationRequestCriteriaType struct {
	PersonTypeCriteriaData *PersonTypeCriteriaType `xml:"urn:com.workday/bsvc Person_Type_Criteria_Data,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance or instances of Person and their associated work contact information.
type GetChangeWorkContactInformationRequestReferencesType struct {
	PersonReference      []RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference []UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
}

// Request element used to get work contact information for a person.  The response is formatted to be usable as input to the Change Work Contact Information web service request.
type GetChangeWorkContactInformationRequestType struct {
	RequestReferences   *GetChangeWorkContactInformationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter      *ResponseFilterType                                   `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	RequestCriteriaData *GetChangeWorkContactInformationRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria_Data,omitempty"`
	Version             string                                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the Get Work Contact Information response elements including echoed request data and request references.
type GetChangeWorkContactInformationResponseType struct {
	RequestReferences []GetChangeWorkContactInformationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                                   `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                                  `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []ChangeWorkContactInformationResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element used to retrieve Committee Classification Groups and their data.
type GetCommitteeClassificationGroupsRequestType struct {
	RequestReferences *CommitteeClassificationGroupRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *CommitteeClassificationGroupRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *CommitteeClassificationGroupResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing an instances of committee classification group and their associated data.
type GetCommitteeClassificationGroupsResponseType struct {
	RequestReferences *CommitteeClassificationGroupRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *CommitteeClassificationGroupRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *CommitteeClassificationGroupResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                               `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *CommitteeClassificationGroupResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// This operation retrieves Committee Classifications
type GetCommitteeClassificationsRequestType struct {
	RequestReferences *CommitteeClassificationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *CommitteeClassificationRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *CommitteeClassificationResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Committee Classifications Response
type GetCommitteeClassificationsResponseType struct {
	RequestReferences *CommitteeClassificationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *CommitteeClassificationRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *CommitteeClassificationResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                          `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *CommitteeClassificationResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper for Committee Definition Request
type GetCommitteeDefinitionRequestType struct {
	RequestReferences *GetCommitteeDefintionRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *GetCommitteeDefintionRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                         `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *GetCommitteeDefintionResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing an instances of committee definition and their associated data
type GetCommitteeDefinitionResponseType struct {
	RequestReferences *GetCommitteeDefintionRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *GetCommitteeDefintionRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                         `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *GetCommitteeDefintionResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                        `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *CommitteeDefinitionResponseDataType        `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Committee Definition Request Criteria
type GetCommitteeDefintionRequestCriteriaType struct {
}

// Utilize the Request References element to retrieve a specific instance(s) of a Committee and its associated data.
type GetCommitteeDefintionRequestReferencesType struct {
	CommitteeDefinitionReference []CommitteeObjectType `xml:"urn:com.workday/bsvc Committee_Definition_Reference"`
}

// Committee Defintion Response Group
type GetCommitteeDefintionResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Request to Get Committee Meetings
type GetCommitteeMeetingsRequestType struct {
	RequestReferences *CommitteeMeetingRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *CommitteeMeetingRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                    `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *CommitteeMeetingResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Full response report for get committee meetings
type GetCommitteeMeetingsResponseType struct {
	RequestReferences *CommitteeMeetingRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *CommitteeMeetingRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                    `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *CommitteeMeetingResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                   `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *CommitteeMeetingResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Committee Membership Types Request
type GetCommitteeMembershipTypesRequestType struct {
	RequestReferences *CommitteeMembershipTypeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *CommitteeMembershipTypeRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *CommitteeMembershipTypeResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing an instances of committee membership type and their associated data
type GetCommitteeMembershipTypesResponseType struct {
	RequestReferences *CommitteeMembershipTypeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *CommitteeMembershipTypeRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *CommitteeMembershipTypeResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                          `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *CommitteeMembershipTypeResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Committee Types Request
type GetCommitteeTypesRequestType struct {
	RequestReferences *CommitteeTypeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *CommitteeTypeRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                 `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *CommitteeTypeResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Committee Type Response Data
type GetCommitteeTypesResponseType struct {
	RequestReferences *CommitteeTypeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *CommitteeTypeRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                 `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *CommitteeTypeResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *CommitteeTypeResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains request reference and  filter for getting Company Insider Type data.
type GetCompanyInsiderTypesRequestType struct {
	RequestReferences *CompanyInsiderTypeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                      `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Company Insider response elements including received criteria, references, data based on criteria and grouping, results filter and result summary.
type GetCompanyInsiderTypesResponseType struct {
	RequestReferences *CompanyInsiderTypeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                      `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                     `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *CompanyInsiderTypeResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The request component of the Get Difficulty to Fill web service task.
type GetDifficultytoFillRequestType struct {
	RequestReferences *DifficultytoFillRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                    `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for difficulty to fill.
type GetDifficultytoFillResponseType struct {
	RequestReferences []DifficultytoFillRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                    `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                   `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []DifficultytoFillResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get Disabilies service task.
type GetDisabilitiesRequestType struct {
	RequestReferences *DisabilityRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the response elements for the Get Disabilities and Put Disability service requests.
type GetDisabilitiesResponseType struct {
	RequestReferences *DisabilityRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType             `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *DisabilityResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Establishments Request
type GetEstablishmentsRequestType struct {
	RequestReferences *EstablishmentRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *EstablishmentRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                 `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Establishments Response
type GetEstablishmentsResponseType struct {
	RequestReferences *EstablishmentRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *EstablishmentRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                 `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *EstablishmentResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get Ethnicities
type GetEthnicitiesRequestType struct {
	RequestReferences *EthnicityRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for Get Ethnicities
type GetEthnicitiesResponseType struct {
	RequestReferences *EthnicityRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType            `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *EthnicityResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get External Disability Self-Identification Record
type GetExternalDisabilitySelfIdentificationRecordsRequestType struct {
	RequestReferences *ExternalDisabilitySelfIdentificationRecordRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *ExternalDisabilitySelfIdentificationRecordRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the response elements for the Get External Disability Self-Identification Record
type GetExternalDisabilitySelfIdentificationRecordsResponseType struct {
	RequestReferences *ExternalDisabilitySelfIdentificationRecordRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *ExternalDisabilitySelfIdentificationRecordRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                                             `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *ExternalDisabilitySelfIdentificationRecordResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The Worker Reference to extract External Form I-9 for Workers.
type GetExternalFormI9RequestReferencesType struct {
	WorkerReference []WorkerObjectType `xml:"urn:com.workday/bsvc Worker_Reference"`
}

// The Worker Reference to extract External Form I-9 for Workers.
type GetExternalFormI9RequestType struct {
	RequestReferences *GetExternalFormI9RequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response element that contains all necessary information when getting an External Form I-9.
type GetExternalFormI9ResponseType struct {
	RequestReferences []GetExternalFormI9RequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                    `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []ChangeExternalFormI9ResponseDataType   `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The Worker Reference to extract External Form I-9 Section 3 for Workers.
type GetExternalFormI9Section3RequestType struct {
	RequestReferences *GetChangeExternalFormI9Section3RequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                                   `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response element that contains all necessary information when getting an External Form I-9 Section 3.
type GetExternalFormI9Section3ResponseType struct {
	RequestReferences []GetChangeExternalFormI9Section3RequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                                   `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                                  `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []ChangeExternalFormI9Section3ResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get External Form I-9 Sources Request
type GetExternalFormI9SourceRequestType struct {
	RequestReferences *ExternalFormI9SourceRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *ExternalFormI9SourceRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                        `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *ExternalFormI9SourceResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get External Form I-9 Sources Response
type GetExternalFormI9SourceResponseType struct {
	RequestReferences *ExternalFormI9SourceRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *ExternalFormI9SourceRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                        `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *ExternalFormI9SourceResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                       `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *ExternalFormI9SourceResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request for Get Former Worker Document
type GetFormerWorkerDocumentsRequestType struct {
	RequestReferences *FormerWorkerAttachmentRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCritieria  *FormerWorkerAttachmentRequestCriteriaELType `xml:"urn:com.workday/bsvc Request_Critieria,omitempty"`
	ResponseFilter    *ResponseFilterType                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *FormerWorkerAttachmentResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response Element for Get Former Worker Document
type GetFormerWorkerDocumentsResponseType struct {
	RequestReferences *FormerWorkerAttachmentRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *FormerWorkerAttachmentRequestCriteriaELType `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *FormerWorkerAttachmentResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                         `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *FormerWorkerAttachmentResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element used to retrieve Former Workers and their data.
type GetFormerWorkersRequestType struct {
	RequestReferences         *FormerWorkerRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria           *FormerWorkerRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter            *ResponseFilterType                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	FormerWorkerResponseGroup *FormerWorkerResponseGroupType     `xml:"urn:com.workday/bsvc Former_Worker_Response_Group,omitempty"`
	Version                   string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing an instances of former workers and their associated data.
type GetFormerWorkersResponseType struct {
	RequestReferences *FormerWorkerRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *FormerWorkerRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *FormerWorkerResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType               `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *FormerWorkerResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Root request element for the operation
type GetFrequenciesRequestType struct {
	RequestReferences *FrequencyRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Root element for the Response on the Get operation. Contains the instances returned by the Get operation and their accompanying data.
type GetFrequenciesResponseType struct {
	RequestReferences *FrequencyRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType            `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *FrequencyResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The request to get gender identity data for a worker.
type GetGenderIdentitiesRequestType struct {
	RequestReferences *GenderIdentityRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *GenderIdentityRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                  `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response to the gender identity get request.
type GetGenderIdentitiesResponseType struct {
	RequestReferences *GenderIdentityRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *GenderIdentityRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                  `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                 `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *GenderIdentityResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request to get Holiday Calendars.
type GetHolidayCalendarsRequestType struct {
	RequestReferences *HolidayCalendarRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *HolidayCalendarRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                   `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *HolidayCalendarResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response for Get Holiday Calendars.
type GetHolidayCalendarsResponseType struct {
	RequestReferences *HolidayCalendarRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *HolidayCalendarRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                   `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *HolidayCalendarResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                  `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *HolidayCalendarResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains request reference and filter for getting Job Category data.
type GetJobCategoriesRequestType struct {
	RequestReferences *JobCategoryRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType               `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Job Category response elements include received criteria, references, data based on criteria and grouping, results filter and result summary.
type GetJobCategoriesResponseType struct {
	RequestReferences *JobCategoryRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType               `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType              `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *JobCategoryResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request Element for Get Job Classification
type GetJobClassificationGroupsRequestType struct {
	RequestReferences *JobClassificationGroupRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *JobClassificationGroupResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response Element for Get Job Classification Groups
type GetJobClassificationGroupsResponseType struct {
	RequestReferences *JobClassificationGroupRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *JobClassificationGroupResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                         `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *JobClassificationGroupResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get Job Families
type GetJobFamiliesRequestType struct {
	RequestReferences *JobFamilyRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *JobFamiliesRequestCriteriaType `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *JobFamilyResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for Get Job Families.
type GetJobFamiliesResponseType struct {
	RequestReferences *JobFamilyRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	RequestCriteria   *JobFamiliesRequestCriteriaType `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseGroup     *JobFamilyResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType            `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *JobFamilyResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get Job Family Groups
type GetJobFamilyGroupsRequestType struct {
	RequestReferences *JobFamilyGroupRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                  `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *JobFamilyGroupResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for the Get Job Family Group request
type GetJobFamilyGroupsResponseType struct {
	RequestReferences *JobFamilyGroupRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                  `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *JobFamilyGroupResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                 `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *JobFamilyGroupResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element used to find and get Job Profiles and their associated data.
type GetJobProfilesRequestType struct {
	RequestReferences *JobProfileRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *JobProfileRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *JobProfileResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing an instances of job profiles and their associated data.
type GetJobProfilesResponseType struct {
	RequestReferences *JobProfileRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *JobProfileRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *JobProfileResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType             `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *JobProfileResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get LGBT Identification service task.
type GetLGBTIdentificationsRequestType struct {
	RequestReferences *LGBTIdentificationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                      `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the response elements for the Get LGBT Identification and Put LGBT Identification
type GetLGBTIdentificationsResponseType struct {
	RequestReferences *LGBTIdentificationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                      `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                     `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *LGBTIdentificationResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Location Attributes Request Web Service Element
type GetLocationAttributesRequestType struct {
	RequestReferences *LocationAttributeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Location Attributes Response Web Service Element
type GetLocationAttributesResponseType struct {
	RequestReferences *LocationAttributeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                    `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *LocationAttributeResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// References to Location Hierarchies and filter options to request their Organization Assignments
type GetLocationHierarchyOrganizationAssignmentsRequestType struct {
	RequestReferences *LocationHierarchyOrganizationAssignmentsRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                                            `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The Get Location Hierarchy Organization Assignments  respond with Location Hierarchies whose Organization Assignments are requested.
type GetLocationHierarchyOrganizationAssignmentsResponseType struct {
	RequestReferences *LocationHierarchyOrganizationAssignmentsRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                                            `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                                           `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *LocationHierarchyOrganizationAssignmentsResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element used to find and get Locations and their associated data.
type GetLocationsRequestType struct {
	RequestReferences *LocationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *LocationRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType            `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *LocationResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing instances of locations and their associated data.
type GetLocationsResponseType struct {
	RequestReferences *LocationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *LocationRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType            `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *LocationResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType           `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *LocationResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Organization Assignment Restrictions Request
type GetOrganizationAssignmentRestrictionsRequestType struct {
	RequestReferences *OrganizationAssignmentRestrictionsRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                                      `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Organization Assignment Restrictions Response
type GetOrganizationAssignmentRestrictionsResponseType struct {
	RequestReferences *OrganizationAssignmentRestrictionsRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                                      `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                                     `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *OrganizationAssignmentRestrictionsResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request for Get Organization Reference IDs.
type GetOrganizationReferenceIDsRequestType struct {
	RequestReferences *OrganizationReferenceIDRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *OrganizationReferenceIDRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response for Get Organization Reference IDs
type GetOrganizationReferenceIDsResponseType struct {
	RequestReferences *OrganizationReferenceIDRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *OrganizationReferenceIDRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                          `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *OrganizationReferenceIDResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains request reference, criteria, filter and response group for getting Organization Names
type GetOrganizationsNamesRequestType struct {
	RequestReferences *OrganizationNameRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *OrganizationNameRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                    `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *OrganizationNameResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains request reference, criteria, filter and response group, response results, and organization name response data
type GetOrganizationsNamesResponseType struct {
	RequestReferences *OrganizationNameRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *OrganizationNameRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                    `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *OrganizationNameResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                   `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *OrganizationNameResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Root element for Get Organizations operation request
type GetOrganizationsRequestType struct {
	RequestReferences *OrganizationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *OrganizationRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *OrganizationResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains each Organization based on the Request References or Request Criteria.  The data returned is the current information as of the dates in the response filter, and does not include all historical information about the Organization.
type GetOrganizationsResponseType struct {
	RequestReferences *OrganizationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *OrganizationRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *OrganizationResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType               `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *OrganizationResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get Period Reporting Calendars
type GetPeriodReportingCalendarsRequestType struct {
	RequestReferences *PeriodReportingCalendarRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *PeriodReportingCalendarRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *PeriodReportingCalendarResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response Element for Get Period Reporting Calendar
type GetPeriodReportingCalendarsResponseType struct {
	RequestReferences *PeriodReportingCalendarRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *PeriodReportingCalendarRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *PeriodReportingCalendarResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                          `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *PeriodReportingCalendarResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element used to get the photo for a person.
type GetPersonPhotosRequestType struct {
	RequestCriteria *PersonPhotoRequestCriteriaType `xml:"urn:com.workday/bsvc Request_Criteria"`
	ResponseFilter  *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version         string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the Submit Person Photo response elements including request data and request criteria.
type GetPersonPhotosResponseType struct {
	RequestCriteria *PersonPhotoRequestCriteriaType `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter  *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults *ResponseResultsType            `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData    *PersonPhotoResponseDataType    `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version         string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get Political Affiliations service task.
type GetPoliticalAffiliationsRequestType struct {
	RequestReferences *PoliticalAffiliationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                        `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the response elements for the Get Political Affiliation and Put Political Affiliation service requests.
type GetPoliticalAffiliationsResponseType struct {
	RequestReferences *PoliticalAffiliationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                        `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                       `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *PoliticalAffiliationResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Preferred Communication Language Request
type GetPreferredCommunicationLanguageRequestType struct {
	RequestReferences *UserPreferredCommunicationLanguageReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *UserLanguageSettingRequestCriteriaType           `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                               `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *UserLanguageSettingResponseGroupType             `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Preferred Communication Language Response
type GetPreferredCommunicationLanguageResponseType struct {
	RequestReferences *UserPreferredCommunicationLanguageReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *UserLanguageSettingRequestCriteriaType           `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                               `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *UserLanguageSettingResponseGroupType             `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                              `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *PreferredCommunicationLanguageResponseDataType   `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element used to return a worker's job/position history loaded from a previous system.
// If no worker reference is requested, then all workers with previous system job data will be returned.
type GetPreviousSystemJobHistoryRequestType struct {
	RequestReferences *WorkerRequestReferencesType         `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                  `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *WorkerResponseGroupforReferenceType `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing the instances of workers and their previous job history.
type GetPreviousSystemJobHistoryResponseType struct {
	RequestReferences []WorkerRequestReferencesType              `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                       `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                      `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseGroup     []WorkerResponseGroupforReferenceType      `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseData      []PreviousSystemJobHistoryResponseDataType `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The request to get pronoun data for a worker.
type GetPronounsRequestType struct {
	RequestReferences *PronounRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *PronounRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response to the pronoun get request.
type GetPronounsResponseType struct {
	RequestReferences *PronounRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *PronounRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType          `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *PronounResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element to retrieve assignments of persons and workers to provisioning groups.
type GetProvisioningGroupAssignmentsRequestType struct {
	RequestReferences *ProvsioningGroupAssignmentRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *ProvisioningGroupAssignmentRequestCriteriaType  `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *ProvisioningGroupAssignmentResponseGroupType    `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element to retrieve provisioning group setup data.
type GetProvisioningGroupsRequestType struct {
	RequestReferences []ProvisioningGroupRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     []ProvisioningGroupResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Safety Incident Request
type GetReportSafetyIncidentRequestType struct {
	RequestReferences *SafetyIncidentRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                  `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response of the Safety Incident get request.
type GetReportSafetyIncidentResponseType struct {
	RequestReferences []SafetyIncidentRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType                  `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType                 `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []SafetyIncidentResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Safety Incident Locations Request
type GetSafetyIncidentLocationsRequestType struct {
	RequestReferences *SafetyIncidentLocationRequestReferenceType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *SafetyIncidentLocationRequestCriteriaType  `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                         `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *SafetyIncidentLocationResponseGroupType    `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Safety Incident Locations Response
type GetSafetyIncidentLocationsResponseType struct {
	RequestReferences *SafetyIncidentLocationRequestReferenceType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *SafetyIncidentLocationRequestCriteriaType  `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                         `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *SafetyIncidentLocationResponseGroupType    `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                        `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *SafetyIncidentLocationResponseDataType     `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get search settings
type GetSearchSettingsRequestType struct {
	ResponseFilter *ResponseFilterType `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version        string              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element search setup data
type GetSearchSettingsResponseType struct {
	ResponseFilter  *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults *ResponseResultsType            `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData    *SearchSettingsResponseDataType `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version         string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Service Center Representative Workday Account request
type GetServiceCenterRepresentativeWorkdayAccountsRequestType struct {
	RequestReferences *ServiceCenterRepresentativeWorkdayAccountRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *ServiceCenterRepresentativeWorkdayAccountRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *ServiceCenterRepresentativeWorkdayAccountResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Service Center Representative Workday Account response.
type GetServiceCenterRepresentativeWorkdayAccountsResponseType struct {
	RequestReferences *ServiceCenterRepresentativeWorkdayAccountRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *ServiceCenterRepresentativeWorkdayAccountRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                                             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *ServiceCenterRepresentativeWorkdayAccountResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                                            `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *ServiceCenterRepresentativeWorkdayAccountResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Service Center Representatives Request
type GetServiceCenterRepresentativesRequestType struct {
	RequestReferences *ServiceCenterRepresentativeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *ServiceCenterRepresentativeRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                               `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *ServiceCenterRepresentativeResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response Element for Get Service Center Represtative
type GetServiceCenterRepresentativesResponseType struct {
	RequestReferences *ServiceCenterRepresentativeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *ServiceCenterRepresentativeRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                               `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *ServiceCenterRepresentativeResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                              `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *ServiceCenterRepresentativeResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The request to get sexual orientation data for a worker.
type GetSexualOrientationsRequestType struct {
	RequestReferences *SexualOrientationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *SexualOrientationRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response to the sexual orientation get request.
type GetSexualOrientationsResponseType struct {
	RequestReferences *SexualOrientationRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *SexualOrientationRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                    `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *SexualOrientationResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get Social Benefits Localities service task.
type GetSocialBenefitsLocalitiesRequestType struct {
	RequestReferences *SocialBenefitsLocalityRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the response elements for the Get Social Benefits Localities and Put Social Benefits Localities service requests.
type GetSocialBenefitsLocalitiesResponseType struct {
	RequestReferences *SocialBenefitsLocalityRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                         `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *SocialBenefitsLocalityResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Sort Order Enableds request element.
type GetSortOrderEnabledsRequestType struct {
	RequestReferences *SortOrderEnabledRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                    `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Sort Order Enableds Web Service response.
type GetSortOrderEnabledsResponseType struct {
	RequestReferences *SortOrderEnabledRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                    `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                   `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *SortOrderEnabledResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Get Training Types
type GetTrainingTypesRequestType struct {
	RequestReferences *TrainingTypeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for Get Training Types
type GetTrainingTypesResponseType struct {
	RequestReferences *TrainingTypeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType               `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *TrainingTypeResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request for Universal Identifiers. Use a Person Reference to get the Universal ID for the Person or don't request anybody and get all Universal IDs.
type GetUniversalIdentifiersRequestType struct {
	RequestReferences *UniversalIdentifierRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *UniversalIdentifierRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                       `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                                    `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Get Response for Universal Identifiers.
type GetUniversalIdentifiersResponseType struct {
	RequestReferences *UniversalIdentifierRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *UniversalIdentifierRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                       `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType                      `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *UniversalIdentifierResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                    `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request to get Work Schedule Calendar.
type GetWorkScheduleCalendarsRequestType struct {
	RequestReferences *WorkScheduleCalendarRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *WorkScheduleCalendarRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                        `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *WorkScheduleCalendarResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response for Get Work Schedule Calendar.
type GetWorkScheduleCalendarsResponseType struct {
	RequestReferences *WorkScheduleCalendarRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *WorkScheduleCalendarRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                        `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *WorkScheduleCalendarResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                       `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *WorkScheduleCalendarResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains request references and filter for getting Work Shift Data.
type GetWorkShiftsRequestType struct {
	RequestReferences *WorkShiftRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Work Shift response elements including received criteria, references, data based on criteria and grouping, results filter and result summary.
type GetWorkShiftsResponseType struct {
	RequestReferences *WorkShiftRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType             `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   *ResponseResultsType            `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *WorkShiftResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request Element for Get Work Status Rule Sets
type GetWorkStatusRuleSetsRequestType struct {
	RequestReferences *WorkStatusRuleSetRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *WorkStatusRuleSetRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *WorkStatusRuleSetResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response Element from Work Status Rule Set
type GetWorkStatusRuleSetsResponseType struct {
	RequestReferences *WorkStatusRuleSetRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *WorkStatusRuleSetRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *WorkStatusRuleSetResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                    `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *WorkStatusRuleSetResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request Criteria
type GetWorkdayAccountRequestCriteriaType struct {
}

// Request References
type GetWorkdayAccountRequestReferencesType struct {
	WorkdayAccountReference []RoleObjectType `xml:"urn:com.workday/bsvc Workday_Account_Reference"`
}

// A Generic Workday Account request for workers and non-workers.
type GetWorkdayAccountRequestType struct {
	RequestReferences *GetWorkdayAccountRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *GetWorkdayAccountRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *WorkdayAccountResponseGroupType        `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Workday Account response data.
type GetWorkdayAccountResponseDataType struct {
	WorkdayAccountResponseData []GetWorkdayAccountType `xml:"urn:com.workday/bsvc Workday_Account_Response_Data,omitempty"`
}

// Element containing Workday Account Data
type GetWorkdayAccountResponseType struct {
	RequestReferences []GetWorkdayAccountRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   []GetWorkdayAccountRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    []ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     []WorkdayAccountResponseGroupType        `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   []ResponseResultsType                    `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []GetWorkdayAccountResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Workday Account information.
type GetWorkdayAccountType struct {
	WorkdayAccountReference     *RoleObjectType                   `xml:"urn:com.workday/bsvc Workday_Account_Reference,omitempty"`
	WorkdayAccountforWorkerData []WorkdayAccountforWorkerDataType `xml:"urn:com.workday/bsvc Workday_Account_for_Worker_Data,omitempty"`
}

// Contains Worker Request References and filter for getting Worker Photo Image data
type GetWorkerPhotosRequestType struct {
	RequestReferences *WorkerRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	Version           string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Get Worker Photo response elements including received criteria, references, and response data.
type GetWorkerPhotosResponseType struct {
	RequestReferences []WorkerRequestReferencesType  `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    []ResponseFilterType           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseResults   []ResponseResultsType          `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      []WorkerPhotosResponseDataType `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains request reference, filter and response group for getting Workers' Compensation Code data
type GetWorkersCompensationCodesRequestType struct {
	RequestReferences *WorkersCompensationCodeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *WorkersCompensationCodeRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     []WorkersCompensationCodeResponseGroupType    `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Worker Compensation Codes response elements including received criteria, references, data based on criteria and grouping, results filter and result summary
type GetWorkersCompensationCodesResponseType struct {
	RequestReferences *WorkersCompensationCodeRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *WorkersCompensationCodeRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                           `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *WorkersCompensationCodeResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                          `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *WorkersCompensationCodeResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element used to find and get workers and their associated data.
type GetWorkersRequestType struct {
	RequestReferences *WorkerRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *WorkerRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType          `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *WorkerResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

type GetWorkersResponseRootType struct {
	RequestReferences          *WorkerRequestReferencesType     `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria            *WorkerRequestCriteriaType       `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter             *ResponseFilterType              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup              *WorkerResponseGroupType         `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults            *ResponseResultsType             `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData               *WorkersResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	InvalidReferenceIDResponse []InvalidReferenceIDResponseType `xml:"urn:com.workday/bsvc Invalid_Reference_ID_Response,omitempty"`
	Version                    string                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for Get Workers Response.  The response element has to match the Operation Name.
type GetWorkersResponseType struct {
	RequestReferences          *WorkerRequestReferencesType     `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria            *WorkerRequestCriteriaType       `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter             *ResponseFilterType              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup              *WorkerResponseGroupType         `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults            *ResponseResultsType             `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData               *WorkersResponseDataType         `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	InvalidReferenceIDResponse []InvalidReferenceIDResponseType `xml:"urn:com.workday/bsvc Invalid_Reference_ID_Response,omitempty"`
}

// Contains request reference, criteria, filter for getting Workteam data.
type GetWorkteamsRequestType struct {
	RequestReferences *WorkteamRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *WorkteamRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType            `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *WorkteamResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	Version           string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element generated by Get Workteam task.
type GetWorkteamsResponseType struct {
	RequestReferences *WorkteamRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *WorkteamRequestCriteriaType   `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType            `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *WorkteamResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType           `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *WorkteamResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type GiftObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type GiftObjectType struct {
	ID         []GiftObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains address information.
type GlobalAddressDataType struct {
	AddressLine1            string                   `xml:"urn:com.workday/bsvc Address_Line_1,omitempty"`
	AddressLine2            string                   `xml:"urn:com.workday/bsvc Address_Line_2,omitempty"`
	AddressLine3            string                   `xml:"urn:com.workday/bsvc Address_Line_3,omitempty"`
	AddressLine4            string                   `xml:"urn:com.workday/bsvc Address_Line_4,omitempty"`
	AddressLine5            string                   `xml:"urn:com.workday/bsvc Address_Line_5,omitempty"`
	AddressLine6            string                   `xml:"urn:com.workday/bsvc Address_Line_6,omitempty"`
	AddressLine7            string                   `xml:"urn:com.workday/bsvc Address_Line_7,omitempty"`
	AddressLine8            string                   `xml:"urn:com.workday/bsvc Address_Line_8,omitempty"`
	AddressLine9            string                   `xml:"urn:com.workday/bsvc Address_Line_9,omitempty"`
	City                    string                   `xml:"urn:com.workday/bsvc City,omitempty"`
	CitySubdivision1        string                   `xml:"urn:com.workday/bsvc City_Subdivision_1,omitempty"`
	CitySubdivision2        string                   `xml:"urn:com.workday/bsvc City_Subdivision_2,omitempty"`
	CountryRegionReference  *CountryRegionObjectType `xml:"urn:com.workday/bsvc Country_Region_Reference,omitempty"`
	RegionSubdivision1      string                   `xml:"urn:com.workday/bsvc Region_Subdivision_1,omitempty"`
	RegionSubdivision2      string                   `xml:"urn:com.workday/bsvc Region_Subdivision_2,omitempty"`
	PostalCode              string                   `xml:"urn:com.workday/bsvc Postal_Code,omitempty"`
	CountryReference        *CountryObjectType       `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	AddressLine1Local       string                   `xml:"urn:com.workday/bsvc Address_Line_1_-_Local,omitempty"`
	AddressLine2Local       string                   `xml:"urn:com.workday/bsvc Address_Line_2_-_Local,omitempty"`
	AddressLine3Local       string                   `xml:"urn:com.workday/bsvc Address_Line_3_-_Local,omitempty"`
	AddressLine4Local       string                   `xml:"urn:com.workday/bsvc Address_Line_4_-_Local,omitempty"`
	AddressLine5Local       string                   `xml:"urn:com.workday/bsvc Address_Line_5_-_Local,omitempty"`
	AddressLine6Local       string                   `xml:"urn:com.workday/bsvc Address_Line_6_-_Local,omitempty"`
	AddressLine7Local       string                   `xml:"urn:com.workday/bsvc Address_Line_7_-_Local,omitempty"`
	AddressLine8Local       string                   `xml:"urn:com.workday/bsvc Address_Line_8_-_Local,omitempty"`
	AddressLine9Local       string                   `xml:"urn:com.workday/bsvc Address_Line_9_-_Local,omitempty"`
	CityLocal               string                   `xml:"urn:com.workday/bsvc City_-_Local,omitempty"`
	CitySubdivision1Local   string                   `xml:"urn:com.workday/bsvc City_Subdivision_1_-_Local,omitempty"`
	CitySubdivision2Local   string                   `xml:"urn:com.workday/bsvc City_Subdivision_2_-_Local,omitempty"`
	RegionSubdivision1Local string                   `xml:"urn:com.workday/bsvc Region_Subdivision_1_-_Local,omitempty"`
	RegionSubdivision2Local string                   `xml:"urn:com.workday/bsvc Region_Subdivision_2_-_Local,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type GlobalSetupDataMappingObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type GlobalSetupDataMappingObjectType struct {
	ID         []GlobalSetupDataMappingObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the target contribution amount for the spending account election.
type GoalDataType struct {
	GoalAmount         float64              `xml:"urn:com.workday/bsvc Goal_Amount,omitempty"`
	FrequencyReference *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
}

// Contains a single Goal Detail (Review Goal or Worker Goal Detail) and the Notes and History.
type GoalDetailDataType struct {
	GoalReferenceID           string                         `xml:"urn:com.workday/bsvc Goal_Reference_ID,omitempty"`
	Goal                      string                         `xml:"urn:com.workday/bsvc Goal,omitempty"`
	Description               string                         `xml:"urn:com.workday/bsvc Description,omitempty"`
	OrganizationGoalReference *OrganizationGoalObjectType    `xml:"urn:com.workday/bsvc Organization_Goal_Reference,omitempty"`
	DueDate                   *time.Time                     `xml:"urn:com.workday/bsvc Due_Date,omitempty"`
	CompletionStatusReference *ComponentCompletionObjectType `xml:"urn:com.workday/bsvc Completion_Status_Reference,omitempty"`
	CompletionDate            *time.Time                     `xml:"urn:com.workday/bsvc Completion_Date,omitempty"`
}

func (t *GoalDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T GoalDetailDataType
	var layout struct {
		*T
		DueDate        *xsdDate `xml:"urn:com.workday/bsvc Due_Date,omitempty"`
		CompletionDate *xsdDate `xml:"urn:com.workday/bsvc Completion_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DueDate = (*xsdDate)(layout.T.DueDate)
	layout.CompletionDate = (*xsdDate)(layout.T.CompletionDate)
	return e.EncodeElement(layout, start)
}
func (t *GoalDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T GoalDetailDataType
	var overlay struct {
		*T
		DueDate        *xsdDate `xml:"urn:com.workday/bsvc Due_Date,omitempty"`
		CompletionDate *xsdDate `xml:"urn:com.workday/bsvc Completion_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DueDate = (*xsdDate)(overlay.T.DueDate)
	overlay.CompletionDate = (*xsdDate)(overlay.T.CompletionDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type GoalObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type GoalObjectType struct {
	ID         []GoalObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper for the Government Identifier Data.
type GovernmentIDDataType struct {
	ID                  string                         `xml:"urn:com.workday/bsvc ID,omitempty"`
	IDTypeReference     *GovernmentIDTypeAllObjectType `xml:"urn:com.workday/bsvc ID_Type_Reference,omitempty"`
	CountryReference    *CountryObjectType             `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	IssuedDate          *time.Time                     `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate      *time.Time                     `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	VerificationDate    *time.Time                     `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	VerifiedbyReference *WorkerObjectType              `xml:"urn:com.workday/bsvc Verified_by_Reference,omitempty"`
}

func (t *GovernmentIDDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T GovernmentIDDataType
	var layout struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.VerificationDate = (*xsdDate)(layout.T.VerificationDate)
	return e.EncodeElement(layout, start)
}
func (t *GovernmentIDDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T GovernmentIDDataType
	var overlay struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.VerificationDate = (*xsdDate)(overlay.T.VerificationDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element for all Government Identifier data.
type GovernmentIDType struct {
	GovernmentIDReference       *UniqueIdentifierObjectType              `xml:"urn:com.workday/bsvc Government_ID_Reference,omitempty"`
	GovernmentIDData            *GovernmentIDDataType                    `xml:"urn:com.workday/bsvc Government_ID_Data,omitempty"`
	GovernmentIDSharedReference *GovernmentIdentifierReferenceObjectType `xml:"urn:com.workday/bsvc Government_ID_Shared_Reference,omitempty"`
	Delete                      bool                                     `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type GovernmentIDTypeAllObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type GovernmentIDTypeAllObjectType struct {
	ID         []GovernmentIDTypeAllObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Government ID Type.
type GovernmentIDTypeReferenceType struct {
	GovernmentIDTypeName string `xml:"urn:com.workday/bsvc Government_ID_Type_Name"`
}

// Wrapper for Government Identification Data. Includes National Identifiers and Government Identifiers.
type GovernmentIdentificationDataType struct {
	NationalID   []NationalIDType   `xml:"urn:com.workday/bsvc National_ID,omitempty"`
	GovernmentID []GovernmentIDType `xml:"urn:com.workday/bsvc Government_ID,omitempty"`
	ReplaceAll   bool               `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Encapsulating element for all Government Identifier data.
type GovernmentIdentifierDataType struct {
	GovernmentID              string                         `xml:"urn:com.workday/bsvc Government_ID"`
	GovernmentIDTypeReference *GovernmentIDTypeReferenceType `xml:"urn:com.workday/bsvc Government_ID_Type_Reference"`
	CountryReference          *CountryReferenceType          `xml:"urn:com.workday/bsvc Country_Reference"`
	IssuedDate                *time.Time                     `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate            *time.Time                     `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	VerificationDate          *time.Time                     `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
}

func (t *GovernmentIdentifierDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T GovernmentIdentifierDataType
	var layout struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.VerificationDate = (*xsdDate)(layout.T.VerificationDate)
	return e.EncodeElement(layout, start)
}
func (t *GovernmentIdentifierDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T GovernmentIdentifierDataType
	var overlay struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.VerificationDate = (*xsdDate)(overlay.T.VerificationDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type GovernmentIdentifierReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type GovernmentIdentifierReferenceObjectType struct {
	ID         []GovernmentIdentifierReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type GovernmentReportingAgencyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type GovernmentReportingAgencyObjectType struct {
	ID         []GovernmentReportingAgencyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// If the dependent has health insurance
type HasHealthInsuranceDataType struct {
	EffectiveDate      *time.Time `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	HasHealthInsurance *bool      `xml:"urn:com.workday/bsvc Has_Health_Insurance,omitempty"`
}

func (t *HasHealthInsuranceDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T HasHealthInsuranceDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *HasHealthInsuranceDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T HasHealthInsuranceDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type HeadcountRestrictionsObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type HeadcountRestrictionsObjectType struct {
	ID         []HeadcountRestrictionsObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type HealthCareClassificationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type HealthCareClassificationObjectType struct {
	ID         []HealthCareClassificationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type HealthCareCoverageTargetObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type HealthCareCoverageTargetObjectType struct {
	ID         []HealthCareCoverageTargetObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type HealthFacilityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type HealthFacilityObjectType struct {
	ID         []HealthFacilityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the spending account coverage information (elections) for an employee.
type HealthSavingsAccountCoverageDataType struct {
	BenefitElectionData                  *WorkerBenefitElectionDataType            `xml:"urn:com.workday/bsvc Benefit_Election_Data,omitempty"`
	HealthSavingsAccountElectionInfoData *HealthSavingsAccountElectionInfoDataType `xml:"urn:com.workday/bsvc Health_Savings_Account_Election_Info_Data,omitempty"`
	EmployeeContributionData             *EmployeeContributionDataType             `xml:"urn:com.workday/bsvc Employee_Contribution_Data,omitempty"`
	EmployerContributionData             *EmployerContributionDataType             `xml:"urn:com.workday/bsvc Employer_Contribution_Data,omitempty"`
}

// Benefit Plan Earnings Deduction Details Data
type HealthSavingsAccountElectionInfoDataType struct {
	CoverageTargetName              string              `xml:"urn:com.workday/bsvc Coverage_Target_Name,omitempty"`
	MaximumAnnualContributionAmount float64             `xml:"urn:com.workday/bsvc Maximum_Annual_Contribution_Amount,omitempty"`
	CurrencyReference               *CurrencyObjectType `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type HealthTreatmentTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type HealthTreatmentTypeObjectType struct {
	ID         []HealthTreatmentTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type HealthWorkerObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type HealthWorkerObjectType struct {
	ID         []HealthWorkerObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper containing data for Condition Rule.
type HolidayCalendarDataType struct {
	Name                             string                         `xml:"urn:com.workday/bsvc Name"`
	Description                      string                         `xml:"urn:com.workday/bsvc Description,omitempty"`
	ConditionRuleReference           *ConditionRuleObjectType       `xml:"urn:com.workday/bsvc Condition_Rule_Reference,omitempty"`
	DisplayonTimeOffandLeaveCalendar *bool                          `xml:"urn:com.workday/bsvc Display_on_Time_Off_and_Leave_Calendar,omitempty"`
	HolidayCalendarEventData         []HolidayCalendarEventDataType `xml:"urn:com.workday/bsvc Holiday_Calendar_Event_Data,omitempty"`
	ID                               string                         `xml:"urn:com.workday/bsvc ID,attr,omitempty"`
}

// Event Data for the Holiday Calendar.
type HolidayCalendarEventDataType struct {
	Name           string              `xml:"urn:com.workday/bsvc Name"`
	StartEndData   *StartEndDataType   `xml:"urn:com.workday/bsvc Start_End_Data"`
	RecurrenceData *RecurrenceDataType `xml:"urn:com.workday/bsvc Recurrence_Data,omitempty"`
	ID             string              `xml:"urn:com.workday/bsvc ID,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type HolidayCalendarObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type HolidayCalendarObjectType struct {
	ID         []HolidayCalendarObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request criteria for Holiday Calendar response.
type HolidayCalendarRequestCriteriaType struct {
}

// Wrapper for Holiday Calendar references.
type HolidayCalendarRequestReferencesType struct {
	HolidayCalendarRequestReference []HolidayCalendarObjectType `xml:"urn:com.workday/bsvc Holiday_Calendar_Request_Reference"`
}

// Retrieved Holiday Calendars.
type HolidayCalendarResponseDataType struct {
	HolidayCalendar []HolidayCalendarType `xml:"urn:com.workday/bsvc Holiday_Calendar,omitempty"`
}

// Options for responded Holiday Calendars.
type HolidayCalendarResponseGroupType struct {
	IncludeReference           *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludeHolidayCalendarData *bool `xml:"urn:com.workday/bsvc Include_Holiday_Calendar_Data,omitempty"`
}

// Wrapper for Holiday Calendar reference and data.
type HolidayCalendarType struct {
	HolidayCalendarReference *HolidayCalendarObjectType `xml:"urn:com.workday/bsvc Holiday_Calendar_Reference,omitempty"`
	HolidayCalendarData      *HolidayCalendarDataType   `xml:"urn:com.workday/bsvc Holiday_Calendar_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type HukouTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type HukouTypeObjectType struct {
	ID         []HukouTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// External ID that uniquely identifies the integratable object within the context of the integration system identified by the System ID attribute.
type IDType struct {
	Value    string `xml:",chardata"`
	SystemID string `xml:"urn:com.workday/bsvc System_ID,attr,omitempty"`
}

// Root Import Change Work Contact Information Request Element
type ImportChangeWorkContactInformationRequestType struct {
	ID                             string                               `xml:"urn:com.workday/bsvc ID,omitempty"`
	ChangeWorkContactInformationHV []ChangeWorkContactInformationHVType `xml:"urn:com.workday/bsvc Change_Work_Contact_Information_HV,omitempty"`
	Version                        string                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Top-level Import Person Photo request data element
type ImportPersonPhotoRequestType struct {
	ID                string                        `xml:"urn:com.workday/bsvc ID,omitempty"`
	PersonPhotoHVData []ChangePersonPhotoHVDataType `xml:"urn:com.workday/bsvc Person_Photo_HV_Data,omitempty"`
	Version           string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Import Universal Identifier Request.
type ImportUniversalIdentifierRequestType struct {
	ID                        string                          `xml:"urn:com.workday/bsvc ID,omitempty"`
	UniversalIdentifierDataHV []UniversalIdentifierDataHVType `xml:"urn:com.workday/bsvc Universal_Identifier_Data_HV,omitempty"`
	Version                   string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type InjuryIllnessBodyPartObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type InjuryIllnessBodyPartObjectType struct {
	ID         []InjuryIllnessBodyPartObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type InjuryIllnessNatureObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type InjuryIllnessNatureObjectType struct {
	ID         []InjuryIllnessNatureObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type InjuryIllnessSeverityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type InjuryIllnessSeverityObjectType struct {
	ID         []InjuryIllnessSeverityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type InjuryIllnessSourceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type InjuryIllnessSourceObjectType struct {
	ID         []InjuryIllnessSourceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

type InstanceIDType struct {
	Value      string `xml:",chardata"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
	Type       string `xml:"urn:com.workday/bsvc type,attr,omitempty"`
}

type InstanceObjectType struct {
	ID         []InstanceIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Instant Messenger core data.
type InstantMessengerCoreDataType struct {
	InstantMessengerTypeReference *InstantMessengerTypeObjectType `xml:"urn:com.workday/bsvc Instant_Messenger_Type_Reference"`
	InstantMessengerAddress       string                          `xml:"urn:com.workday/bsvc Instant_Messenger_Address"`
	InstantMessengerComment       string                          `xml:"urn:com.workday/bsvc Instant_Messenger_Comment,omitempty"`
}

// Encapsulating element for all Instant Messenger data.
type InstantMessengerDataType struct {
	InstantMessengerAddress       string                             `xml:"urn:com.workday/bsvc Instant_Messenger_Address"`
	InstantMessengerComment       string                             `xml:"urn:com.workday/bsvc Instant_Messenger_Comment,omitempty"`
	InstantMessengerTypeReference *InstantMessengerTypeReferenceType `xml:"urn:com.workday/bsvc Instant_Messenger_Type_Reference"`
	UsageData                     *CommunicationMethodUsageDataType  `xml:"urn:com.workday/bsvc Usage_Data"`
}

// Instant Messenger Address.
type InstantMessengerInformationDataType struct {
	InstantMessengerAddress       string                                        `xml:"urn:com.workday/bsvc Instant_Messenger_Address,omitempty"`
	InstantMessengerTypeReference *InstantMessengerTypeObjectType               `xml:"urn:com.workday/bsvc Instant_Messenger_Type_Reference,omitempty"`
	InstantMessengerComment       string                                        `xml:"urn:com.workday/bsvc Instant_Messenger_Comment,omitempty"`
	UsageData                     []CommunicationMethodUsageInformationDataType `xml:"urn:com.workday/bsvc Usage_Data,omitempty"`
	InstantMessengerReference     *InstantMessengerReferenceObjectType          `xml:"urn:com.workday/bsvc Instant_Messenger_Reference,omitempty"`
	ID                            string                                        `xml:"urn:com.workday/bsvc ID,omitempty"`
	Delete                        bool                                          `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
	DoNotReplaceAll               bool                                          `xml:"urn:com.workday/bsvc Do_Not_Replace_All,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type InstantMessengerReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type InstantMessengerReferenceObjectType struct {
	ID         []InstantMessengerReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type InstantMessengerTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type InstantMessengerTypeObjectType struct {
	ID         []InstantMessengerTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Instant Messenger Type.
type InstantMessengerTypeReferenceType struct {
	InstantMessengerProvider string `xml:"urn:com.workday/bsvc Instant_Messenger_Provider"`
}

// Contains Instructor Eligibility Line Data
type InstructorEligibilityLineDataType struct {
	AcademicUnitReference            *AcademicUnitObjectType             `xml:"urn:com.workday/bsvc Academic_Unit_Reference,omitempty"`
	AcademicLevelReference           []AcademicLevelObjectType           `xml:"urn:com.workday/bsvc Academic_Level_Reference,omitempty"`
	CourseSubjectReference           []CourseSubjectObjectType           `xml:"urn:com.workday/bsvc Course_Subject_Reference,omitempty"`
	CourseReference                  []CourseDefinitionObjectType        `xml:"urn:com.workday/bsvc Course_Reference,omitempty"`
	DeliveryModeReference            []DeliveryModeObjectType            `xml:"urn:com.workday/bsvc Delivery_Mode_Reference,omitempty"`
	CourseTagReference               []StudentCourseTagObjectType        `xml:"urn:com.workday/bsvc Course_Tag_Reference,omitempty"`
	LocationReference                []LocationObjectType                `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	EducationalTaxonomyCodeReference []EducationalTaxonomyCodeObjectType `xml:"urn:com.workday/bsvc Educational_Taxonomy_Code_Reference,omitempty"`
}

// Contains the coverage level detailed information and volume for the insurance election.
type InsuranceCoverageLevelDataType struct {
	CoverageLevelValueData *CoverageLevelValueDataType `xml:"urn:com.workday/bsvc Coverage_Level_Value_Data"`
	VolumeData             *VolumeDataType             `xml:"urn:com.workday/bsvc Volume_Data"`
}

// Contains a unique identifier for an instance of an object.
type InsuranceCoverageTargetObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type InsuranceCoverageTargetObjectType struct {
	ID         []InsuranceCoverageTargetObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type IntegrationDocumentFieldObjectIDType struct {
	Value      string `xml:",chardata"`
	Type       string `xml:"urn:com.workday/bsvc type,attr"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
}

type IntegrationDocumentFieldObjectType struct {
	ID         []IntegrationDocumentFieldObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type IntegrationSystemAuditedObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type IntegrationSystemAuditedObjectType struct {
	ID         []IntegrationSystemAuditedObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for the Internal Project Experience information.
type InternalProjectExperienceDataType struct {
	InternalProjectExperienceID     string     `xml:"urn:com.workday/bsvc Internal_Project_Experience_ID,omitempty"`
	RemoveInternalProjectExperience *bool      `xml:"urn:com.workday/bsvc Remove_Internal_Project_Experience,omitempty"`
	InternalProject                 string     `xml:"urn:com.workday/bsvc Internal_Project,omitempty"`
	Description                     string     `xml:"urn:com.workday/bsvc Description,omitempty"`
	StartDate                       *time.Time `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
	EndDate                         *time.Time `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	ProjectLeader                   string     `xml:"urn:com.workday/bsvc Project_Leader,omitempty"`
}

func (t *InternalProjectExperienceDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T InternalProjectExperienceDataType
	var layout struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(layout.T.StartDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *InternalProjectExperienceDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T InternalProjectExperienceDataType
	var overlay struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(overlay.T.StartDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type InternalProjectExperienceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type InternalProjectExperienceObjectType struct {
	ID         []InternalProjectExperienceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for Internal Project Experience information.
type InternalProjectExperienceType struct {
	InternalProjectExperienceReference *InternalProjectExperienceObjectType `xml:"urn:com.workday/bsvc Internal_Project_Experience_Reference,omitempty"`
	InternalProjectExperienceData      []InternalProjectExperienceDataType  `xml:"urn:com.workday/bsvc Internal_Project_Experience_Data,omitempty"`
}

// Wrapper element that contains position's international assignment information
type InternationalAssignmentDataType struct {
	InternationalAssignmentTypeReference        *InternationalAssignmentTypeObjectType    `xml:"urn:com.workday/bsvc International_Assignment_Type_Reference,omitempty"`
	StartInternationalAssignmentReasonReference *EventClassificationSubcategoryObjectType `xml:"urn:com.workday/bsvc Start_International_Assignment_Reason_Reference,omitempty"`
	ExpectedAssignmentEndDate                   *time.Time                                `xml:"urn:com.workday/bsvc Expected_Assignment_End_Date,omitempty"`
	HostCountryReference                        *CountryObjectType                        `xml:"urn:com.workday/bsvc Host_Country_Reference,omitempty"`
	HomeCountryReference                        *CountryObjectType                        `xml:"urn:com.workday/bsvc Home_Country_Reference,omitempty"`
}

func (t *InternationalAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T InternationalAssignmentDataType
	var layout struct {
		*T
		ExpectedAssignmentEndDate *xsdDate `xml:"urn:com.workday/bsvc Expected_Assignment_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ExpectedAssignmentEndDate = (*xsdDate)(layout.T.ExpectedAssignmentEndDate)
	return e.EncodeElement(layout, start)
}
func (t *InternationalAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T InternationalAssignmentDataType
	var overlay struct {
		*T
		ExpectedAssignmentEndDate *xsdDate `xml:"urn:com.workday/bsvc Expected_Assignment_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ExpectedAssignmentEndDate = (*xsdDate)(overlay.T.ExpectedAssignmentEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper element that contains basic information of worker's international assignment if any.
type InternationalAssignmentSummaryDataType struct {
	HasInternationalAssignment *bool               `xml:"urn:com.workday/bsvc Has_International_Assignment,omitempty"`
	HostCountriesReference     []CountryObjectType `xml:"urn:com.workday/bsvc Host_Countries_Reference,omitempty"`
	HomeCountryReference       *CountryObjectType  `xml:"urn:com.workday/bsvc Home_Country_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type InternationalAssignmentTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type InternationalAssignmentTypeObjectType struct {
	ID         []InternationalAssignmentTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element for all Internet Email Addresses.
type InternetEmailAddressDataType struct {
	EmailAddress string                            `xml:"urn:com.workday/bsvc Email_Address"`
	EmailComment string                            `xml:"urn:com.workday/bsvc Email_Comment,omitempty"`
	UsageData    *CommunicationMethodUsageDataType `xml:"urn:com.workday/bsvc Usage_Data"`
}

// Represents a reference ID that was submitted with data not found in Workday
type InvalidReferenceIDDataType struct {
	InvalidReferenceID     string `xml:"urn:com.workday/bsvc Invalid_Reference_ID,omitempty"`
	InvalidReferenceIDType string `xml:"urn:com.workday/bsvc Invalid_Reference_ID_Type,omitempty"`
}

// Invalid Reference ID Response
type InvalidReferenceIDResponseType struct {
	InvalidReference []InvalidReferenceIDDataType `xml:"urn:com.workday/bsvc Invalid_Reference,omitempty"`
}

// Wrapper element that encapsulates the Job Category Data
type JobCategoryDataType struct {
	JobCategoryID          string `xml:"urn:com.workday/bsvc Job_Category_ID,omitempty"`
	JobCategoryName        string `xml:"urn:com.workday/bsvc Job_Category_Name,omitempty"`
	JobCategoryDescription string `xml:"urn:com.workday/bsvc Job_Category_Description,omitempty"`
	Inactive               *bool  `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type JobCategoryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobCategoryObjectType struct {
	ID         []JobCategoryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element containing reference instance for a Job Category.
type JobCategoryRequestReferencesType struct {
	JobCategoryReference []JobCategoryObjectType `xml:"urn:com.workday/bsvc Job_Category_Reference"`
}

// Wrapper element that includes the Job Category reference instance and data.
type JobCategoryResponseDataType struct {
	JobCategory []JobCategoryType `xml:"urn:com.workday/bsvc Job_Category,omitempty"`
}

// Element containing the job category reference and data.
type JobCategoryType struct {
	JobCategoryReference *JobCategoryObjectType `xml:"urn:com.workday/bsvc Job_Category_Reference,omitempty"`
	JobCategoryData      []JobCategoryDataType  `xml:"urn:com.workday/bsvc Job_Category_Data,omitempty"`
}

// Job Classification Data Element
type JobClassificationDataType struct {
	ID                                  string                      `xml:"urn:com.workday/bsvc ID,omitempty"`
	JobClassificationID                 string                      `xml:"urn:com.workday/bsvc Job_Classification_ID,omitempty"`
	Description                         string                      `xml:"urn:com.workday/bsvc Description,omitempty"`
	JobClassificationMappingIDReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Job_Classification_Mapping_ID_Reference,omitempty"`
	Inactive                            *bool                       `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Job Classification Group Data Element
type JobClassificationGroupDataType struct {
	ID                              string                            `xml:"urn:com.workday/bsvc ID,omitempty"`
	EffectiveDate                   *time.Time                        `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	JobClassificationGroupName      string                            `xml:"urn:com.workday/bsvc Job_Classification_Group_Name,omitempty"`
	GlobalSetupDataMappingReference *GlobalSetupDataMappingObjectType `xml:"urn:com.workday/bsvc Global_Setup_Data_Mapping_Reference,omitempty"`
	LocationReference               *LocationContextObjectType        `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	Inactive                        *bool                             `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	JobClassification               []JobClassificationType           `xml:"urn:com.workday/bsvc Job_Classification,omitempty"`
}

func (t *JobClassificationGroupDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T JobClassificationGroupDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *JobClassificationGroupDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T JobClassificationGroupDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Response element containing an instance of Job Classification Group and its associated data.
type JobClassificationGroupNewType struct {
	JobClassificationGroupReference *JobClassificationGroupObjectType         `xml:"urn:com.workday/bsvc Job_Classification_Group_Reference,omitempty"`
	JobClassificationGroupNameData  []JobClassificationGroupReferenceDataType `xml:"urn:com.workday/bsvc Job_Classification_Group_Name_Data,omitempty"`
	JobClassificationGroupData      []JobClassificationGroupDataType          `xml:"urn:com.workday/bsvc Job_Classification_Group_Data,omitempty"`
	AsOfDate                        time.Time                                 `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment                      time.Time                                 `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
}

func (t *JobClassificationGroupNewType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T JobClassificationGroupNewType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *JobClassificationGroupNewType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T JobClassificationGroupNewType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type JobClassificationGroupObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobClassificationGroupObjectType struct {
	ID         []JobClassificationGroupObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// A unique identifier used to reference a Job Classification Group.
type JobClassificationGroupReferenceDataType struct {
	JobClassificationGroupName string `xml:"urn:com.workday/bsvc Job_Classification_Group_Name"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Job Classification Group and its associated data.
type JobClassificationGroupRequestReferencesType struct {
	JobClassificationGroupReference []JobClassificationGroupObjectType `xml:"urn:com.workday/bsvc Job_Classification_Group_Reference"`
}

// Element containing the Job Classification Group response data
type JobClassificationGroupResponseDataType struct {
	JobClassificationGroup []JobClassificationGroupNewType `xml:"urn:com.workday/bsvc Job_Classification_Group,omitempty"`
}

// Get Job Classification Group Response Group
type JobClassificationGroupResponseGroupType struct {
	IncludeReference          *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludeJobClassifications *bool `xml:"urn:com.workday/bsvc Include_Job_Classifications,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type JobClassificationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobClassificationObjectType struct {
	ID         []JobClassificationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Job Classification.
type JobClassificationReferenceType struct {
	JobClassificationGroupName string `xml:"urn:com.workday/bsvc Job_Classification_Group_Name,omitempty"`
	JobClassificationName      string `xml:"urn:com.workday/bsvc Job_Classification_Name,omitempty"`
}

// Contains the job classifications from the job profile for the position and the additional job classifications specified for the position.
type JobClassificationSummaryDataType struct {
	JobClassificationReference *JobClassificationObjectType      `xml:"urn:com.workday/bsvc Job_Classification_Reference,omitempty"`
	JobGroupReference          *JobClassificationGroupObjectType `xml:"urn:com.workday/bsvc Job_Group_Reference,omitempty"`
	Additional                 bool                              `xml:"urn:com.workday/bsvc Additional,attr,omitempty"`
}

// Job Classification Group Data
type JobClassificationType struct {
	JobClassificationReference *JobClassificationObjectType `xml:"urn:com.workday/bsvc Job_Classification_Reference,omitempty"`
	JobClassificationData      *JobClassificationDataType   `xml:"urn:com.workday/bsvc Job_Classification_Data,omitempty"`
	Delete                     bool                         `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Utilize the Request Criteria element to limit the Job Families returned based on the specific criteria.  Job Families that are returned must meet all of the criteria specified.
type JobFamiliesRequestCriteriaType struct {
	FieldAndParameterCriteriaData *FieldAndParameterCriteriaDataType `xml:"urn:com.workday/bsvc Field_And_Parameter_Criteria_Data,omitempty"`
	IncludeInActiveJobFamilies    *bool                              `xml:"urn:com.workday/bsvc Include_InActive_Job_Families,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type JobFamilyBaseObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobFamilyBaseObjectType struct {
	ID         []JobFamilyBaseObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Job Family data.
type JobFamilyDataType struct {
	ID                           string                           `xml:"urn:com.workday/bsvc ID,omitempty"`
	EffectiveDate                *time.Time                       `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	Name                         string                           `xml:"urn:com.workday/bsvc Name,omitempty"`
	Summary                      string                           `xml:"urn:com.workday/bsvc Summary,omitempty"`
	Inactive                     *bool                            `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	JobProfileData               []JobProfileforJobFamilyDataType `xml:"urn:com.workday/bsvc Job_Profile_Data,omitempty"`
	IntegrationFieldOverrideData []DocumentFieldResultDataType    `xml:"urn:com.workday/bsvc Integration_Field_Override_Data,omitempty"`
}

func (t *JobFamilyDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T JobFamilyDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *JobFamilyDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T JobFamilyDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Job Family Group data
type JobFamilyGroupDataType struct {
	ID            string                        `xml:"urn:com.workday/bsvc ID,omitempty"`
	EffectiveDate *time.Time                    `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	Name          string                        `xml:"urn:com.workday/bsvc Name,omitempty"`
	Summary       string                        `xml:"urn:com.workday/bsvc Summary,omitempty"`
	Inactive      *bool                         `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	JobFamilyData []JobFamilyGroupJobFamilyType `xml:"urn:com.workday/bsvc Job_Family_Data,omitempty"`
}

func (t *JobFamilyGroupDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T JobFamilyGroupDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *JobFamilyGroupDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T JobFamilyGroupDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Info only data about a Job Family
type JobFamilyGroupJobFamilyDataType struct {
	JobFamilyName      string                      `xml:"urn:com.workday/bsvc Job_Family_Name,omitempty"`
	JobFamilySummary   string                      `xml:"urn:com.workday/bsvc Job_Family_Summary,omitempty"`
	Inactive           *bool                       `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	JobProfileInfoData []JobProfileSummaryDataType `xml:"urn:com.workday/bsvc Job_Profile_Info_Data,omitempty"`
}

// Job Family Data.  Contains the references to Job Families contained in the group.  Optionally contains other data about the contained families, however this extra data is for information only and cannot be updated here.
type JobFamilyGroupJobFamilyType struct {
	JobFamilyReference *JobFamilyObjectType             `xml:"urn:com.workday/bsvc Job_Family_Reference"`
	JobFamilyInfoData  *JobFamilyGroupJobFamilyDataType `xml:"urn:com.workday/bsvc Job_Family_Info_Data,omitempty"`
	Delete             bool                             `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Encapsulating element containing all Job Family Group data.
type JobFamilyGroupNewType struct {
	JobFamilyGroupReference *JobFamilyObjectType    `xml:"urn:com.workday/bsvc Job_Family_Group_Reference,omitempty"`
	JobFamilyGroupData      *JobFamilyGroupDataType `xml:"urn:com.workday/bsvc Job_Family_Group_Data,omitempty"`
	AsOfDate                time.Time               `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment              time.Time               `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
}

func (t *JobFamilyGroupNewType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T JobFamilyGroupNewType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *JobFamilyGroupNewType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T JobFamilyGroupNewType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the Request References element to retrieve a specific instance(s) of Job Family Group and its associated data.
type JobFamilyGroupRequestReferencesType struct {
	JobFamilyGroupReference  []JobFamilyObjectType `xml:"urn:com.workday/bsvc Job_Family_Group_Reference"`
	SkipNonExistingInstances bool                  `xml:"urn:com.workday/bsvc Skip_Non_Existing_Instances,attr,omitempty"`
}

// Response element for the Get Job Family request
type JobFamilyGroupResponseDataType struct {
	JobFamilyGroup []JobFamilyGroupNewType `xml:"urn:com.workday/bsvc Job_Family_Group,omitempty"`
}

// Get Job Family Group Response Group
type JobFamilyGroupResponseGroupType struct {
	IncludeReference          *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludeJobProfileInfoData *bool `xml:"urn:com.workday/bsvc Include_Job_Profile_Info_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type JobFamilyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobFamilyObjectType struct {
	ID         []JobFamilyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The Job Family reference(s) to be retrieved. Does not support job family groups.
type JobFamilyRequestReferencesType struct {
	JobFamilyReference       []JobFamilyObjectType `xml:"urn:com.workday/bsvc Job_Family_Reference"`
	SkipNonExistingInstances bool                  `xml:"urn:com.workday/bsvc Skip_Non_Existing_Instances,attr,omitempty"`
}

// Job Family Response Data containing the retrieved Job Family information
type JobFamilyResponseDataType struct {
	JobFamily []JobFamilyType `xml:"urn:com.workday/bsvc Job_Family,omitempty"`
}

// Job Family Response Group
type JobFamilyResponseGroupType struct {
	IncludeReference          *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludeJobProfileInfoData *bool `xml:"urn:com.workday/bsvc Include_Job_Profile_Info_Data,omitempty"`
}

// Contains Job Family information
type JobFamilyType struct {
	JobFamilyReference *JobFamilyObjectType `xml:"urn:com.workday/bsvc Job_Family_Reference,omitempty"`
	JobFamilyData      *JobFamilyDataType   `xml:"urn:com.workday/bsvc Job_Family_Data,omitempty"`
}

// Wrapper element for the job history information.
type JobHistoryAchievementDataType struct {
	JobHistoryID                    string                       `xml:"urn:com.workday/bsvc Job_History_ID,omitempty"`
	RemoveJobHistory                *bool                        `xml:"urn:com.workday/bsvc Remove_Job_History,omitempty"`
	JobTitle                        string                       `xml:"urn:com.workday/bsvc Job_Title,omitempty"`
	Company                         string                       `xml:"urn:com.workday/bsvc Company,omitempty"`
	JobHistoryCompanyReference      *JobHistoryCompanyObjectType `xml:"urn:com.workday/bsvc Job_History_Company_Reference,omitempty"`
	StartDate                       *time.Time                   `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
	EndDate                         *time.Time                   `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	ResponsibilitiesandAchievements string                       `xml:"urn:com.workday/bsvc Responsibilities_and_Achievements,omitempty"`
	Location                        string                       `xml:"urn:com.workday/bsvc Location,omitempty"`
	JobReference                    string                       `xml:"urn:com.workday/bsvc Job_Reference,omitempty"`
	Contact                         string                       `xml:"urn:com.workday/bsvc Contact,omitempty"`
}

func (t *JobHistoryAchievementDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T JobHistoryAchievementDataType
	var layout struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(layout.T.StartDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *JobHistoryAchievementDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T JobHistoryAchievementDataType
	var overlay struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(overlay.T.StartDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type JobHistoryCompanyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobHistoryCompanyObjectType struct {
	ID         []JobHistoryCompanyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type JobHistorySkillObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobHistorySkillObjectType struct {
	ID         []JobHistorySkillObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for Job History information.
type JobHistoryType struct {
	JobHistoryReference *JobHistorySkillObjectType      `xml:"urn:com.workday/bsvc Job_History_Reference,omitempty"`
	JobHistoryData      []JobHistoryAchievementDataType `xml:"urn:com.workday/bsvc Job_History_Data"`
}

// Contains the information about the employee's  job interests.
type JobInterestsDataType struct {
	JobProfileReference []JobProfileObjectType `xml:"urn:com.workday/bsvc Job_Profile_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type JobLevelObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobLevelObjectType struct {
	ID         []JobLevelObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type JobPreviousSystemHistoryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobPreviousSystemHistoryObjectType struct {
	ID         []JobPreviousSystemHistoryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the basic job profile information.
type JobProfileBasicDataType struct {
	Inactive                     *bool                              `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	JobTitle                     string                             `xml:"urn:com.workday/bsvc Job_Title,omitempty"`
	IncludeJobCodeinName         *bool                              `xml:"urn:com.workday/bsvc Include_Job_Code_in_Name,omitempty"`
	JobProfilePrivateTitle       string                             `xml:"urn:com.workday/bsvc Job_Profile_Private_Title,omitempty"`
	JobProfileSummary            string                             `xml:"urn:com.workday/bsvc Job_Profile_Summary,omitempty"`
	JobDescription               string                             `xml:"urn:com.workday/bsvc Job_Description,omitempty"`
	AdditionalJobDescription     string                             `xml:"urn:com.workday/bsvc Additional_Job_Description,omitempty"`
	WorkShiftRequired            *bool                              `xml:"urn:com.workday/bsvc Work_Shift_Required,omitempty"`
	PublicJob                    *bool                              `xml:"urn:com.workday/bsvc Public_Job,omitempty"`
	ManagementLevelReference     *ManagementLevelObjectType         `xml:"urn:com.workday/bsvc Management_Level_Reference,omitempty"`
	JobCategoryReference         *JobCategoryObjectType             `xml:"urn:com.workday/bsvc Job_Category_Reference,omitempty"`
	JobLevelReference            *JobLevelObjectType                `xml:"urn:com.workday/bsvc Job_Level_Reference,omitempty"`
	JobFamilyData                []JobProfileJobFamilyDataType      `xml:"urn:com.workday/bsvc Job_Family_Data,omitempty"`
	CompanyInsiderData           []CompanyInsiderJobProfileDataType `xml:"urn:com.workday/bsvc Company_Insider_Data,omitempty"`
	ReferralPaymentPlanReference *OneTimePaymentPlanObjectType      `xml:"urn:com.workday/bsvc Referral_Payment_Plan_Reference,omitempty"`
	CriticalJob                  *bool                              `xml:"urn:com.workday/bsvc Critical_Job,omitempty"`
	DifficultytoFillReference    *DifficultytoFillObjectType        `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Reference,omitempty"`
	RestricttoCountryReference   []CountryObjectType                `xml:"urn:com.workday/bsvc Restrict_to_Country_Reference,omitempty"`
}

// Element contains Compensation related data for the Job Profile.  Currently, only an optional Compensation Grade association for the Job Profile is available.
type JobProfileCompensationDataType struct {
	CompensationGradeReference        *CompensationGradeObjectType         `xml:"urn:com.workday/bsvc Compensation_Grade_Reference,omitempty"`
	CompensationGradeProfileReference []CompensationGradeProfileObjectType `xml:"urn:com.workday/bsvc Compensation_Grade_Profile_Reference,omitempty"`
}

// Element containing all Job Profile Data.
type JobProfileDataType struct {
	JobCode                                string                                                   `xml:"urn:com.workday/bsvc Job_Code,omitempty"`
	EffectiveDate                          *time.Time                                               `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	JobProfileBasicData                    *JobProfileBasicDataType                                 `xml:"urn:com.workday/bsvc Job_Profile_Basic_Data,omitempty"`
	JobClassificationData                  []JobProfileJobClassificationDataType                    `xml:"urn:com.workday/bsvc Job_Classification_Data,omitempty"`
	JobProfilePayRateData                  []JobProfilePayRateDataType                              `xml:"urn:com.workday/bsvc Job_Profile_Pay_Rate_Data,omitempty"`
	JobProfileExemptData                   []JobProfileExemptDataType                               `xml:"urn:com.workday/bsvc Job_Profile_Exempt_Data,omitempty"`
	WorkersCompensationCodeReplacementData []WorkersCompensationReplacementDataType                 `xml:"urn:com.workday/bsvc Workers_Compensation_Code_Replacement_Data,omitempty"`
	QualificationReplacementData           *QualificationDataforPositionRestrictionorJobProfileType `xml:"urn:com.workday/bsvc Qualification_Replacement_Data,omitempty"`
	IntegrationFieldOverrideData           []DocumentFieldResultDataType                            `xml:"urn:com.workday/bsvc Integration_Field_Override_Data,omitempty"`
	JobProfileCompensationData             *JobProfileCompensationDataType                          `xml:"urn:com.workday/bsvc Job_Profile_Compensation_Data,omitempty"`
	UnionsData                             *JobProfileUnionMembershipDataType                       `xml:"urn:com.workday/bsvc Unions_Data,omitempty"`
	WorkStudyData                          *JobProfileWorkStudyDataType                             `xml:"urn:com.workday/bsvc Work-Study_Data,omitempty"`
}

func (t *JobProfileDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T JobProfileDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *JobProfileDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T JobProfileDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Element containing the Job Profile Exempt data for a Job Profile.
type JobProfileExemptDataType struct {
	LocationContextReference *LocationContextObjectType `xml:"urn:com.workday/bsvc Location_Context_Reference"`
	JobExempt                *bool                      `xml:"urn:com.workday/bsvc Job_Exempt,omitempty"`
	Delete                   bool                       `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Response element containing an instance of Job Profile and its associated data.
type JobProfileGetDataType struct {
	JobProfileReference *JobProfileObjectType `xml:"urn:com.workday/bsvc Job_Profile_Reference,omitempty"`
	JobProfileData      *JobProfileDataType   `xml:"urn:com.workday/bsvc Job_Profile_Data,omitempty"`
}

// Element containing Job Classification data for a Job Profile.
type JobProfileJobClassificationDataType struct {
	JobClassificationReference *JobClassificationObjectType `xml:"urn:com.workday/bsvc Job_Classification_Reference"`
	Delete                     bool                         `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Element containing the Job Family data for a job profile.
type JobProfileJobFamilyDataType struct {
	JobFamilyReference *JobFamilyBaseObjectType `xml:"urn:com.workday/bsvc Job_Family_Reference"`
	Delete             bool                     `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type JobProfileObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobProfileObjectType struct {
	ID         []JobProfileObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element containing Job Profile Pay Rate Data
type JobProfilePayRateDataType struct {
	CountryReference     *CountryObjectType     `xml:"urn:com.workday/bsvc Country_Reference"`
	PayRateTypeReference *PayRateTypeObjectType `xml:"urn:com.workday/bsvc Pay_Rate_Type_Reference,omitempty"`
	Delete               bool                   `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Utilize the Request Criteria element to limit the Job Profiles returned based on the specific criteria.  Job Profiles that are returned must meet all of the criteria specified.
type JobProfileRequestCriteriaType struct {
	TransactionLogCriteriaData       []TransactionLogCriteriaType        `xml:"urn:com.workday/bsvc Transaction_Log_Criteria_Data,omitempty"`
	EventReference                   *UniqueIdentifierObjectType         `xml:"urn:com.workday/bsvc Event_Reference,omitempty"`
	JobFamilyReference               []JobFamilyBaseObjectType           `xml:"urn:com.workday/bsvc Job_Family_Reference,omitempty"`
	ManagementLevelReference         []ManagementLevelObjectType         `xml:"urn:com.workday/bsvc Management_Level_Reference,omitempty"`
	JobLevelReference                []JobLevelObjectType                `xml:"urn:com.workday/bsvc Job_Level_Reference,omitempty"`
	JobCategoryReference             []JobCategoryObjectType             `xml:"urn:com.workday/bsvc Job_Category_Reference,omitempty"`
	CompanyInsiderTypeReference      []CompanyInsiderTypeObjectType      `xml:"urn:com.workday/bsvc Company_Insider_Type_Reference,omitempty"`
	JobClassificationReference       []JobClassificationObjectType       `xml:"urn:com.workday/bsvc Job_Classification_Reference,omitempty"`
	JobClassificationGroupReference  []JobClassificationGroupObjectType  `xml:"urn:com.workday/bsvc Job_Classification_Group_Reference,omitempty"`
	WorkersCompensationCodeReference []WorkersCompensationCodeObjectType `xml:"urn:com.workday/bsvc Workers_Compensation_Code_Reference,omitempty"`
	WorkHoursProfileReference        []WorkHoursProfileObjectType        `xml:"urn:com.workday/bsvc Work_Hours_Profile_Reference,omitempty"`
	FieldAndParameterCriteriaData    *FieldAndParameterCriteriaDataType  `xml:"urn:com.workday/bsvc Field_And_Parameter_Criteria_Data,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Job Profile and its associated data.
type JobProfileRequestReferencesType struct {
	JobProfileReference      []JobProfileObjectType `xml:"urn:com.workday/bsvc Job_Profile_Reference"`
	SkipNonExistingInstances bool                   `xml:"urn:com.workday/bsvc Skip_Non_Existing_Instances,attr,omitempty"`
}

// Contains each Job Profile based on the Request References or Request Criteria.  The data returned is the current information as of the dates in the response filter, and does not include all historical information about the job profile.
type JobProfileResponseDataType struct {
	JobProfile []JobProfileGetDataType `xml:"urn:com.workday/bsvc Job_Profile,omitempty"`
}

// The response group allows for the response data to be tailored to only included elements that the user is looking for.  If no response group is provided in the request, then all groups will be returned. If the Response Group element is returned, you can select which sections of data to include in the response.
type JobProfileResponseGroupType struct {
	IncludeReference                    *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludeJobProfileBasicData          *bool `xml:"urn:com.workday/bsvc Include_Job_Profile_Basic_Data,omitempty"`
	IncludeJobClassificationData        *bool `xml:"urn:com.workday/bsvc Include_Job_Classification_Data,omitempty"`
	IncludeJobProfilePayRateData        *bool `xml:"urn:com.workday/bsvc Include_Job_Profile_Pay_Rate_Data,omitempty"`
	IncludeJobProfileExemptData         *bool `xml:"urn:com.workday/bsvc Include_Job_Profile_Exempt_Data,omitempty"`
	IncludeWorkersCompensationData      *bool `xml:"urn:com.workday/bsvc Include_Workers_Compensation_Data,omitempty"`
	IncludeResponsibilityQualifications *bool `xml:"urn:com.workday/bsvc Include_Responsibility_Qualifications,omitempty"`
	IncludeWorkExperienceQualifications *bool `xml:"urn:com.workday/bsvc Include_Work_Experience_Qualifications,omitempty"`
	IncludeEducationQualifications      *bool `xml:"urn:com.workday/bsvc Include_Education_Qualifications,omitempty"`
	IncludeLanguageQualifications       *bool `xml:"urn:com.workday/bsvc Include_Language_Qualifications,omitempty"`
	IncludeCompetencyQualifications     *bool `xml:"urn:com.workday/bsvc Include_Competency_Qualifications,omitempty"`
	IncludeCertificationQualifications  *bool `xml:"urn:com.workday/bsvc Include_Certification_Qualifications,omitempty"`
	IncludeCertificationReferenceOnly   *bool `xml:"urn:com.workday/bsvc Include_Certification_Reference_Only,omitempty"`
	IncludeTrainingQualifications       *bool `xml:"urn:com.workday/bsvc Include_Training_Qualifications,omitempty"`
	IncludeJobProfileCompensationData   *bool `xml:"urn:com.workday/bsvc Include_Job_Profile_Compensation_Data,omitempty"`
	IncludeSkillQualifications          *bool `xml:"urn:com.workday/bsvc Include_Skill_Qualifications,omitempty"`
}

// Contains the details of a Job Profile.
type JobProfileSummaryDataType struct {
	JobProfileReference       *JobProfileObjectType       `xml:"urn:com.workday/bsvc Job_Profile_Reference,omitempty"`
	JobProfileName            string                      `xml:"urn:com.workday/bsvc Job_Profile_Name,omitempty"`
	ManagementLevelReference  *ManagementLevelObjectType  `xml:"urn:com.workday/bsvc Management_Level_Reference,omitempty"`
	JobCategoryReference      *JobCategoryObjectType      `xml:"urn:com.workday/bsvc Job_Category_Reference,omitempty"`
	JobFamilyReference        []JobFamilyBaseObjectType   `xml:"urn:com.workday/bsvc Job_Family_Reference,omitempty"`
	WorkShiftRequired         *bool                       `xml:"urn:com.workday/bsvc Work_Shift_Required,omitempty"`
	JobProfileExemptData      []JobProfileExemptDataType  `xml:"urn:com.workday/bsvc Job_Profile_Exempt_Data,omitempty"`
	CriticalJob               *bool                       `xml:"urn:com.workday/bsvc Critical_Job,omitempty"`
	DifficultytoFillReference *DifficultytoFillObjectType `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Reference,omitempty"`
}

// Container For Union Membership Data
type JobProfileUnionMembershipDataType struct {
	RequirementOptionReference *RequirementOptionObjectType `xml:"urn:com.workday/bsvc Requirement_Option_Reference,omitempty"`
	UnionReference             []UnionObjectType            `xml:"urn:com.workday/bsvc Union_Reference,omitempty"`
}

// Container for Work-Study Data.
type JobProfileWorkStudyDataType struct {
	RequirementOptionReference          *RequirementOptionObjectType   `xml:"urn:com.workday/bsvc Requirement_Option_Reference,omitempty"`
	AllowedStudentAwardSourcesReference []StudentAwardSourceObjectType `xml:"urn:com.workday/bsvc Allowed_Student_Award_Sources_Reference,omitempty"`
}

// Element containing the Job Profile reference for a Job Family.
type JobProfileforJobFamilyDataType struct {
	JobProfileReference *JobProfileObjectType `xml:"urn:com.workday/bsvc Job_Profile_Reference,omitempty"`
	Delete              bool                  `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains the job profile for the position.
type JobProfileinPositionSummaryDataType struct {
	JobProfileReference       *JobProfileObjectType       `xml:"urn:com.workday/bsvc Job_Profile_Reference,omitempty"`
	JobExempt                 *bool                       `xml:"urn:com.workday/bsvc Job_Exempt,omitempty"`
	ManagementLevelReference  *ManagementLevelObjectType  `xml:"urn:com.workday/bsvc Management_Level_Reference,omitempty"`
	JobCategoryReference      *JobCategoryObjectType      `xml:"urn:com.workday/bsvc Job_Category_Reference,omitempty"`
	JobFamilyReference        []JobFamilyBaseObjectType   `xml:"urn:com.workday/bsvc Job_Family_Reference,omitempty"`
	JobProfileName            string                      `xml:"urn:com.workday/bsvc Job_Profile_Name,omitempty"`
	WorkShiftRequired         *bool                       `xml:"urn:com.workday/bsvc Work_Shift_Required,omitempty"`
	CriticalJob               *bool                       `xml:"urn:com.workday/bsvc Critical_Job,omitempty"`
	DifficultytoFillReference *DifficultytoFillObjectType `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type JobRequisitionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type JobRequisitionObjectType struct {
	ID         []JobRequisitionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all LGBT Identification data.
type LGBTIdentificationDataType struct {
	ID                string                     `xml:"urn:com.workday/bsvc ID,omitempty"`
	Name              string                     `xml:"urn:com.workday/bsvc Name"`
	Description       string                     `xml:"urn:com.workday/bsvc Description,omitempty"`
	LocationReference *LocationContextObjectType `xml:"urn:com.workday/bsvc Location_Reference"`
	Inactive          *bool                      `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LGBTIdentificationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LGBTIdentificationObjectType struct {
	ID         []LGBTIdentificationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of LGBT Identifications and its associated data.
type LGBTIdentificationRequestReferencesType struct {
	LGBTIdentificationReference []LGBTIdentificationObjectType `xml:"urn:com.workday/bsvc LGBT_Identification_Reference"`
}

// Encapsulating element containing all LGBT Identification data.
type LGBTIdentificationResponseDataType struct {
	LGBTIdentification []LGBTIdentificationType `xml:"urn:com.workday/bsvc LGBT_Identification,omitempty"`
}

// Reference element representing a unique instance of LGBT Identification
type LGBTIdentificationType struct {
	LGBTIdentificationReference *LGBTIdentificationObjectType `xml:"urn:com.workday/bsvc LGBT_Identification_Reference,omitempty"`
	LGBTIdentificationData      *LGBTIdentificationDataType   `xml:"urn:com.workday/bsvc LGBT_Identification_Data,omitempty"`
}

// Contains the language ability information.
type LanguageAbilityDataType struct {
	LanguageProficiencyReference *LanguageProficiencyObjectType `xml:"urn:com.workday/bsvc Language_Proficiency_Reference,omitempty"`
	LanguageAbilityTypeReference *LanguageAbilityTypeObjectType `xml:"urn:com.workday/bsvc Language_Ability_Type_Reference"`
}

// Element containing the language ability type and proficiency for a Job Profile Language Qualfication language.
type LanguageAbilityProfileDataType struct {
	LanguageAbilityTypeReference *LanguageAbilityTypeObjectType `xml:"urn:com.workday/bsvc Language_Ability_Type_Reference"`
	LanguageProficiencyReference *LanguageProficiencyObjectType `xml:"urn:com.workday/bsvc Language_Proficiency_Reference,omitempty"`
}

// Wrapper element for Language Ability
type LanguageAbilityType struct {
	LanguageAbilityData []LanguageAbilityDataType `xml:"urn:com.workday/bsvc Language_Ability_Data"`
}

// Contains a unique identifier for an instance of an object.
type LanguageAbilityTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LanguageAbilityTypeObjectType struct {
	ID         []LanguageAbilityTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for Language Achievement information
type LanguageAchievementDataType struct {
	LanguageReference         *LanguageObjectType   `xml:"urn:com.workday/bsvc Language_Reference"`
	RemoveLanguage            *bool                 `xml:"urn:com.workday/bsvc Remove_Language,omitempty"`
	NativeLanguage            *bool                 `xml:"urn:com.workday/bsvc Native_Language,omitempty"`
	LanguageAbility           []LanguageAbilityType `xml:"urn:com.workday/bsvc Language_Ability,omitempty"`
	AssessedOn                *time.Time            `xml:"urn:com.workday/bsvc Assessed_On,omitempty"`
	Note                      string                `xml:"urn:com.workday/bsvc Note,omitempty"`
	AssessedbyWorkerReference *RoleObjectType       `xml:"urn:com.workday/bsvc Assessed_by_Worker_Reference,omitempty"`
}

func (t *LanguageAchievementDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T LanguageAchievementDataType
	var layout struct {
		*T
		AssessedOn *xsdDate `xml:"urn:com.workday/bsvc Assessed_On,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AssessedOn = (*xsdDate)(layout.T.AssessedOn)
	return e.EncodeElement(layout, start)
}
func (t *LanguageAchievementDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T LanguageAchievementDataType
	var overlay struct {
		*T
		AssessedOn *xsdDate `xml:"urn:com.workday/bsvc Assessed_On,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AssessedOn = (*xsdDate)(overlay.T.AssessedOn)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type LanguageObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LanguageObjectType struct {
	ID         []LanguageObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LanguageProficiencyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LanguageProficiencyObjectType struct {
	ID         []LanguageProficiencyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Replacement element containing Language Qualifications for the Job Profile. When updating a Job Profile, all Languages for the Job Profile will be replaced by the submitted data. If no data is submitted, then the existing Languages are not changed.
type LanguageQualificationProfileReplacementDataType struct {
	LanguageReference          *LanguageObjectType              `xml:"urn:com.workday/bsvc Language_Reference"`
	LanguageAbilityProfileData []LanguageAbilityProfileDataType `xml:"urn:com.workday/bsvc Language_Ability_Profile_Data,omitempty"`
	Required                   *bool                            `xml:"urn:com.workday/bsvc Required,omitempty"`
}

// Wrapper element for Language Qualifications. Allows all language qualifications for a Job Profile or Position Restriction to be removed - or to replace all existing language qualifications with those sent in the web service.
type LanguageQualificationReplacementType struct {
	LanguageQualificationReplacementData []LanguageQualificationProfileReplacementDataType `xml:"urn:com.workday/bsvc Language_Qualification_Replacement_Data,omitempty"`
	Delete                               bool                                              `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Reference element representing a unique instance of Language.
type LanguageReferenceType struct {
	LanguageDescription string `xml:"urn:com.workday/bsvc Language_Description"`
}

// Encapsulating element for all Last Name data.
type LastNameDataType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc Type,attr,omitempty"`
}

// Leave Request Additional Fields
type LeaveRequestAdditionalFieldsType struct {
	LastDateforWhichPaid            *time.Time `xml:"urn:com.workday/bsvc Last_Date_for_Which_Paid,omitempty"`
	ExpectedDueDate                 *time.Time `xml:"urn:com.workday/bsvc Expected_Due_Date,omitempty"`
	ChildsBirthDate                 *time.Time `xml:"urn:com.workday/bsvc Child_s_Birth_Date,omitempty"`
	StillbirthBabyDeceased          *bool      `xml:"urn:com.workday/bsvc Stillbirth_Baby_Deceased,omitempty"`
	DateBabyArrivedHomeFromHospital *time.Time `xml:"urn:com.workday/bsvc Date_Baby_Arrived_Home_From_Hospital,omitempty"`
	AdoptionPlacementDate           *time.Time `xml:"urn:com.workday/bsvc Adoption_Placement_Date,omitempty"`
	AdoptionNotificationDate        *time.Time `xml:"urn:com.workday/bsvc Adoption_Notification_Date,omitempty"`
	DateChildEnteredCountry         *time.Time `xml:"urn:com.workday/bsvc Date_Child_Entered_Country,omitempty"`
	MultipleChildIndicator          *bool      `xml:"urn:com.workday/bsvc Multiple_Child_Indicator,omitempty"`
	NumberofBabiesAdoptedChildren   float64    `xml:"urn:com.workday/bsvc Number_of_Babies_Adopted_Children,omitempty"`
	NumberofPreviousBirths          float64    `xml:"urn:com.workday/bsvc Number_of_Previous_Births,omitempty"`
	NumberofPreviousMaternityLeaves float64    `xml:"urn:com.workday/bsvc Number_of_Previous_Maternity_Leaves,omitempty"`
	NumberofChildDependents         float64    `xml:"urn:com.workday/bsvc Number_of_Child_Dependents,omitempty"`
	SingleParentIndicator           *bool      `xml:"urn:com.workday/bsvc Single_Parent_Indicator,omitempty"`
	AgeofDependent                  float64    `xml:"urn:com.workday/bsvc Age_of_Dependent,omitempty"`
	WorkRelated                     *bool      `xml:"urn:com.workday/bsvc Work_Related,omitempty"`
	StopPaymentDate                 *time.Time `xml:"urn:com.workday/bsvc Stop_Payment_Date,omitempty"`
	SocialSecurityDisabilityCode    string     `xml:"urn:com.workday/bsvc Social_Security_Disability_Code,omitempty"`
	LocationDuringLeave             string     `xml:"urn:com.workday/bsvc Location_During_Leave,omitempty"`
	CaesareanSectionBirth           *bool      `xml:"urn:com.workday/bsvc Caesarean_Section_Birth,omitempty"`
	LeavePercentage                 float64    `xml:"urn:com.workday/bsvc Leave_Percentage,omitempty"`
	WeekofConfinement               *time.Time `xml:"urn:com.workday/bsvc Week_of_Confinement,omitempty"`
	LeaveEntitlementOverride        float64    `xml:"urn:com.workday/bsvc Leave_Entitlement_Override,omitempty"`
	DateofRecall                    *time.Time `xml:"urn:com.workday/bsvc Date_of_Recall,omitempty"`
}

func (t *LeaveRequestAdditionalFieldsType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T LeaveRequestAdditionalFieldsType
	var layout struct {
		*T
		LastDateforWhichPaid            *xsdDate `xml:"urn:com.workday/bsvc Last_Date_for_Which_Paid,omitempty"`
		ExpectedDueDate                 *xsdDate `xml:"urn:com.workday/bsvc Expected_Due_Date,omitempty"`
		ChildsBirthDate                 *xsdDate `xml:"urn:com.workday/bsvc Child_s_Birth_Date,omitempty"`
		DateBabyArrivedHomeFromHospital *xsdDate `xml:"urn:com.workday/bsvc Date_Baby_Arrived_Home_From_Hospital,omitempty"`
		AdoptionPlacementDate           *xsdDate `xml:"urn:com.workday/bsvc Adoption_Placement_Date,omitempty"`
		AdoptionNotificationDate        *xsdDate `xml:"urn:com.workday/bsvc Adoption_Notification_Date,omitempty"`
		DateChildEnteredCountry         *xsdDate `xml:"urn:com.workday/bsvc Date_Child_Entered_Country,omitempty"`
		StopPaymentDate                 *xsdDate `xml:"urn:com.workday/bsvc Stop_Payment_Date,omitempty"`
		WeekofConfinement               *xsdDate `xml:"urn:com.workday/bsvc Week_of_Confinement,omitempty"`
		DateofRecall                    *xsdDate `xml:"urn:com.workday/bsvc Date_of_Recall,omitempty"`
	}
	layout.T = (*T)(t)
	layout.LastDateforWhichPaid = (*xsdDate)(layout.T.LastDateforWhichPaid)
	layout.ExpectedDueDate = (*xsdDate)(layout.T.ExpectedDueDate)
	layout.ChildsBirthDate = (*xsdDate)(layout.T.ChildsBirthDate)
	layout.DateBabyArrivedHomeFromHospital = (*xsdDate)(layout.T.DateBabyArrivedHomeFromHospital)
	layout.AdoptionPlacementDate = (*xsdDate)(layout.T.AdoptionPlacementDate)
	layout.AdoptionNotificationDate = (*xsdDate)(layout.T.AdoptionNotificationDate)
	layout.DateChildEnteredCountry = (*xsdDate)(layout.T.DateChildEnteredCountry)
	layout.StopPaymentDate = (*xsdDate)(layout.T.StopPaymentDate)
	layout.WeekofConfinement = (*xsdDate)(layout.T.WeekofConfinement)
	layout.DateofRecall = (*xsdDate)(layout.T.DateofRecall)
	return e.EncodeElement(layout, start)
}
func (t *LeaveRequestAdditionalFieldsType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T LeaveRequestAdditionalFieldsType
	var overlay struct {
		*T
		LastDateforWhichPaid            *xsdDate `xml:"urn:com.workday/bsvc Last_Date_for_Which_Paid,omitempty"`
		ExpectedDueDate                 *xsdDate `xml:"urn:com.workday/bsvc Expected_Due_Date,omitempty"`
		ChildsBirthDate                 *xsdDate `xml:"urn:com.workday/bsvc Child_s_Birth_Date,omitempty"`
		DateBabyArrivedHomeFromHospital *xsdDate `xml:"urn:com.workday/bsvc Date_Baby_Arrived_Home_From_Hospital,omitempty"`
		AdoptionPlacementDate           *xsdDate `xml:"urn:com.workday/bsvc Adoption_Placement_Date,omitempty"`
		AdoptionNotificationDate        *xsdDate `xml:"urn:com.workday/bsvc Adoption_Notification_Date,omitempty"`
		DateChildEnteredCountry         *xsdDate `xml:"urn:com.workday/bsvc Date_Child_Entered_Country,omitempty"`
		StopPaymentDate                 *xsdDate `xml:"urn:com.workday/bsvc Stop_Payment_Date,omitempty"`
		WeekofConfinement               *xsdDate `xml:"urn:com.workday/bsvc Week_of_Confinement,omitempty"`
		DateofRecall                    *xsdDate `xml:"urn:com.workday/bsvc Date_of_Recall,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LastDateforWhichPaid = (*xsdDate)(overlay.T.LastDateforWhichPaid)
	overlay.ExpectedDueDate = (*xsdDate)(overlay.T.ExpectedDueDate)
	overlay.ChildsBirthDate = (*xsdDate)(overlay.T.ChildsBirthDate)
	overlay.DateBabyArrivedHomeFromHospital = (*xsdDate)(overlay.T.DateBabyArrivedHomeFromHospital)
	overlay.AdoptionPlacementDate = (*xsdDate)(overlay.T.AdoptionPlacementDate)
	overlay.AdoptionNotificationDate = (*xsdDate)(overlay.T.AdoptionNotificationDate)
	overlay.DateChildEnteredCountry = (*xsdDate)(overlay.T.DateChildEnteredCountry)
	overlay.StopPaymentDate = (*xsdDate)(overlay.T.StopPaymentDate)
	overlay.WeekofConfinement = (*xsdDate)(overlay.T.WeekofConfinement)
	overlay.DateofRecall = (*xsdDate)(overlay.T.DateofRecall)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type LeaveRequestEventObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LeaveRequestEventObjectType struct {
	ID         []LeaveRequestEventObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Leave Requests that have corrected data.
type LeaveRequestsCorrectedDetailDataType struct {
	LeaveRequestEventReference     *LeaveRequestEventObjectType      `xml:"urn:com.workday/bsvc Leave_Request_Event_Reference,omitempty"`
	LeaveRequestDescription        string                            `xml:"urn:com.workday/bsvc Leave_Request_Description,omitempty"`
	LeaveReturnEventReference      *UniqueIdentifierObjectType       `xml:"urn:com.workday/bsvc Leave_Return_Event_Reference,omitempty"`
	OnLeave                        *bool                             `xml:"urn:com.workday/bsvc On_Leave,omitempty"`
	LeaveStartDate                 *time.Time                        `xml:"urn:com.workday/bsvc Leave_Start_Date,omitempty"`
	EstimatedLeaveEndDate          *time.Time                        `xml:"urn:com.workday/bsvc Estimated_Leave_End_Date,omitempty"`
	LeaveEndDate                   *time.Time                        `xml:"urn:com.workday/bsvc Leave_End_Date,omitempty"`
	FirstDayofWork                 *time.Time                        `xml:"urn:com.workday/bsvc First_Day_of_Work,omitempty"`
	LeaveLastDayofWork             *time.Time                        `xml:"urn:com.workday/bsvc Leave_Last_Day_of_Work,omitempty"`
	LeaveofAbsenceTypeReference    *LeaveofAbsenceTypeObjectType     `xml:"urn:com.workday/bsvc Leave_of_Absence_Type_Reference,omitempty"`
	LinksBacktoPriorEventReference *LeaveRequestEventObjectType      `xml:"urn:com.workday/bsvc Links_Back_to_Prior_Event_Reference,omitempty"`
	BenefitsEffect                 *bool                             `xml:"urn:com.workday/bsvc Benefits_Effect,omitempty"`
	PayrollEffect                  *bool                             `xml:"urn:com.workday/bsvc Payroll_Effect,omitempty"`
	PaidTimeOffAccrualEffect       *bool                             `xml:"urn:com.workday/bsvc Paid_Time_Off_Accrual_Effect,omitempty"`
	ContinuousServiceAccrualEffect *bool                             `xml:"urn:com.workday/bsvc Continuous_Service_Accrual_Effect,omitempty"`
	StockVestingEffect             *bool                             `xml:"urn:com.workday/bsvc Stock_Vesting_Effect,omitempty"`
	LeaveTypeReasonReference       *LeaveTypeReasonObjectType        `xml:"urn:com.workday/bsvc Leave_Type_Reason_Reference,omitempty"`
	LeaveRequestAdditionalFields   *LeaveRequestAdditionalFieldsType `xml:"urn:com.workday/bsvc Leave_Request_Additional_Fields,omitempty"`
}

func (t *LeaveRequestsCorrectedDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T LeaveRequestsCorrectedDetailDataType
	var layout struct {
		*T
		LeaveStartDate        *xsdDate `xml:"urn:com.workday/bsvc Leave_Start_Date,omitempty"`
		EstimatedLeaveEndDate *xsdDate `xml:"urn:com.workday/bsvc Estimated_Leave_End_Date,omitempty"`
		LeaveEndDate          *xsdDate `xml:"urn:com.workday/bsvc Leave_End_Date,omitempty"`
		FirstDayofWork        *xsdDate `xml:"urn:com.workday/bsvc First_Day_of_Work,omitempty"`
		LeaveLastDayofWork    *xsdDate `xml:"urn:com.workday/bsvc Leave_Last_Day_of_Work,omitempty"`
	}
	layout.T = (*T)(t)
	layout.LeaveStartDate = (*xsdDate)(layout.T.LeaveStartDate)
	layout.EstimatedLeaveEndDate = (*xsdDate)(layout.T.EstimatedLeaveEndDate)
	layout.LeaveEndDate = (*xsdDate)(layout.T.LeaveEndDate)
	layout.FirstDayofWork = (*xsdDate)(layout.T.FirstDayofWork)
	layout.LeaveLastDayofWork = (*xsdDate)(layout.T.LeaveLastDayofWork)
	return e.EncodeElement(layout, start)
}
func (t *LeaveRequestsCorrectedDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T LeaveRequestsCorrectedDetailDataType
	var overlay struct {
		*T
		LeaveStartDate        *xsdDate `xml:"urn:com.workday/bsvc Leave_Start_Date,omitempty"`
		EstimatedLeaveEndDate *xsdDate `xml:"urn:com.workday/bsvc Estimated_Leave_End_Date,omitempty"`
		LeaveEndDate          *xsdDate `xml:"urn:com.workday/bsvc Leave_End_Date,omitempty"`
		FirstDayofWork        *xsdDate `xml:"urn:com.workday/bsvc First_Day_of_Work,omitempty"`
		LeaveLastDayofWork    *xsdDate `xml:"urn:com.workday/bsvc Leave_Last_Day_of_Work,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LeaveStartDate = (*xsdDate)(overlay.T.LeaveStartDate)
	overlay.EstimatedLeaveEndDate = (*xsdDate)(overlay.T.EstimatedLeaveEndDate)
	overlay.LeaveEndDate = (*xsdDate)(overlay.T.LeaveEndDate)
	overlay.FirstDayofWork = (*xsdDate)(overlay.T.FirstDayofWork)
	overlay.LeaveLastDayofWork = (*xsdDate)(overlay.T.LeaveLastDayofWork)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containg all Leave Status data.
type LeaveStatusDataType struct {
	OnLeave                        *bool                             `xml:"urn:com.workday/bsvc On_Leave,omitempty"`
	LeaveStartDate                 *time.Time                        `xml:"urn:com.workday/bsvc Leave_Start_Date,omitempty"`
	EstimatedLeaveEndDate          *time.Time                        `xml:"urn:com.workday/bsvc Estimated_Leave_End_Date,omitempty"`
	LeaveEndDate                   *time.Time                        `xml:"urn:com.workday/bsvc Leave_End_Date,omitempty"`
	FirstDayOfWork                 *time.Time                        `xml:"urn:com.workday/bsvc First_Day_Of_Work,omitempty"`
	LeaveofAbsenceTypeReference    []LeaveofAbsenceTypeReferenceType `xml:"urn:com.workday/bsvc Leave_of_Absence_Type_Reference,omitempty"`
	BenefitsEffect                 *bool                             `xml:"urn:com.workday/bsvc Benefits_Effect,omitempty"`
	PayrollEffect                  *bool                             `xml:"urn:com.workday/bsvc Payroll_Effect,omitempty"`
	PaidTimeOffAccrualEffect       *bool                             `xml:"urn:com.workday/bsvc Paid_Time_Off_Accrual_Effect,omitempty"`
	ContinuousServiceAccrualEffect *bool                             `xml:"urn:com.workday/bsvc Continuous_Service_Accrual_Effect,omitempty"`
	StockVestingEffect             *bool                             `xml:"urn:com.workday/bsvc Stock_Vesting_Effect,omitempty"`
}

func (t *LeaveStatusDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T LeaveStatusDataType
	var layout struct {
		*T
		LeaveStartDate        *xsdDate `xml:"urn:com.workday/bsvc Leave_Start_Date,omitempty"`
		EstimatedLeaveEndDate *xsdDate `xml:"urn:com.workday/bsvc Estimated_Leave_End_Date,omitempty"`
		LeaveEndDate          *xsdDate `xml:"urn:com.workday/bsvc Leave_End_Date,omitempty"`
		FirstDayOfWork        *xsdDate `xml:"urn:com.workday/bsvc First_Day_Of_Work,omitempty"`
	}
	layout.T = (*T)(t)
	layout.LeaveStartDate = (*xsdDate)(layout.T.LeaveStartDate)
	layout.EstimatedLeaveEndDate = (*xsdDate)(layout.T.EstimatedLeaveEndDate)
	layout.LeaveEndDate = (*xsdDate)(layout.T.LeaveEndDate)
	layout.FirstDayOfWork = (*xsdDate)(layout.T.FirstDayOfWork)
	return e.EncodeElement(layout, start)
}
func (t *LeaveStatusDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T LeaveStatusDataType
	var overlay struct {
		*T
		LeaveStartDate        *xsdDate `xml:"urn:com.workday/bsvc Leave_Start_Date,omitempty"`
		EstimatedLeaveEndDate *xsdDate `xml:"urn:com.workday/bsvc Estimated_Leave_End_Date,omitempty"`
		LeaveEndDate          *xsdDate `xml:"urn:com.workday/bsvc Leave_End_Date,omitempty"`
		FirstDayOfWork        *xsdDate `xml:"urn:com.workday/bsvc First_Day_Of_Work,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LeaveStartDate = (*xsdDate)(overlay.T.LeaveStartDate)
	overlay.EstimatedLeaveEndDate = (*xsdDate)(overlay.T.EstimatedLeaveEndDate)
	overlay.LeaveEndDate = (*xsdDate)(overlay.T.LeaveEndDate)
	overlay.FirstDayOfWork = (*xsdDate)(overlay.T.FirstDayOfWork)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containg all Leave Status data.
type LeaveStatusDetailDataType struct {
	LeaveRequestEventReference     *LeaveRequestEventObjectType      `xml:"urn:com.workday/bsvc Leave_Request_Event_Reference,omitempty"`
	LeaveRequestDescription        string                            `xml:"urn:com.workday/bsvc Leave_Request_Description,omitempty"`
	LeaveReturnEventReference      *UniqueIdentifierObjectType       `xml:"urn:com.workday/bsvc Leave_Return_Event_Reference,omitempty"`
	OnLeave                        *bool                             `xml:"urn:com.workday/bsvc On_Leave,omitempty"`
	LeaveStartDate                 *time.Time                        `xml:"urn:com.workday/bsvc Leave_Start_Date,omitempty"`
	EstimatedLeaveEndDate          *time.Time                        `xml:"urn:com.workday/bsvc Estimated_Leave_End_Date,omitempty"`
	LeaveEndDate                   *time.Time                        `xml:"urn:com.workday/bsvc Leave_End_Date,omitempty"`
	FirstDayOfWork                 *time.Time                        `xml:"urn:com.workday/bsvc First_Day_Of_Work,omitempty"`
	LeaveLastDayofWork             *time.Time                        `xml:"urn:com.workday/bsvc Leave_Last_Day_of_Work,omitempty"`
	LeaveofAbsenceTypeReference    *LeaveofAbsenceTypeObjectType     `xml:"urn:com.workday/bsvc Leave_of_Absence_Type_Reference,omitempty"`
	BenefitsEffect                 *bool                             `xml:"urn:com.workday/bsvc Benefits_Effect,omitempty"`
	PayrollEffect                  *bool                             `xml:"urn:com.workday/bsvc Payroll_Effect,omitempty"`
	PaidTimeOffAccrualEffect       *bool                             `xml:"urn:com.workday/bsvc Paid_Time_Off_Accrual_Effect,omitempty"`
	ContinuousServiceAccrualEffect *bool                             `xml:"urn:com.workday/bsvc Continuous_Service_Accrual_Effect,omitempty"`
	StockVestingEffect             *bool                             `xml:"urn:com.workday/bsvc Stock_Vesting_Effect,omitempty"`
	LeaveTypeReasonReference       *LeaveTypeReasonObjectType        `xml:"urn:com.workday/bsvc Leave_Type_Reason_Reference,omitempty"`
	LeaveRequestAdditionalFields   *LeaveRequestAdditionalFieldsType `xml:"urn:com.workday/bsvc Leave_Request_Additional_Fields,omitempty"`
}

func (t *LeaveStatusDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T LeaveStatusDetailDataType
	var layout struct {
		*T
		LeaveStartDate        *xsdDate `xml:"urn:com.workday/bsvc Leave_Start_Date,omitempty"`
		EstimatedLeaveEndDate *xsdDate `xml:"urn:com.workday/bsvc Estimated_Leave_End_Date,omitempty"`
		LeaveEndDate          *xsdDate `xml:"urn:com.workday/bsvc Leave_End_Date,omitempty"`
		FirstDayOfWork        *xsdDate `xml:"urn:com.workday/bsvc First_Day_Of_Work,omitempty"`
		LeaveLastDayofWork    *xsdDate `xml:"urn:com.workday/bsvc Leave_Last_Day_of_Work,omitempty"`
	}
	layout.T = (*T)(t)
	layout.LeaveStartDate = (*xsdDate)(layout.T.LeaveStartDate)
	layout.EstimatedLeaveEndDate = (*xsdDate)(layout.T.EstimatedLeaveEndDate)
	layout.LeaveEndDate = (*xsdDate)(layout.T.LeaveEndDate)
	layout.FirstDayOfWork = (*xsdDate)(layout.T.FirstDayOfWork)
	layout.LeaveLastDayofWork = (*xsdDate)(layout.T.LeaveLastDayofWork)
	return e.EncodeElement(layout, start)
}
func (t *LeaveStatusDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T LeaveStatusDetailDataType
	var overlay struct {
		*T
		LeaveStartDate        *xsdDate `xml:"urn:com.workday/bsvc Leave_Start_Date,omitempty"`
		EstimatedLeaveEndDate *xsdDate `xml:"urn:com.workday/bsvc Estimated_Leave_End_Date,omitempty"`
		LeaveEndDate          *xsdDate `xml:"urn:com.workday/bsvc Leave_End_Date,omitempty"`
		FirstDayOfWork        *xsdDate `xml:"urn:com.workday/bsvc First_Day_Of_Work,omitempty"`
		LeaveLastDayofWork    *xsdDate `xml:"urn:com.workday/bsvc Leave_Last_Day_of_Work,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LeaveStartDate = (*xsdDate)(overlay.T.LeaveStartDate)
	overlay.EstimatedLeaveEndDate = (*xsdDate)(overlay.T.EstimatedLeaveEndDate)
	overlay.LeaveEndDate = (*xsdDate)(overlay.T.LeaveEndDate)
	overlay.FirstDayOfWork = (*xsdDate)(overlay.T.FirstDayOfWork)
	overlay.LeaveLastDayofWork = (*xsdDate)(overlay.T.LeaveLastDayofWork)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type LeaveTypeReasonObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LeaveTypeReasonObjectType struct {
	ID         []LeaveTypeReasonObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LeaveofAbsenceTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LeaveofAbsenceTypeObjectType struct {
	ID         []LeaveofAbsenceTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Leave of Absence Type.
type LeaveofAbsenceTypeReferenceType struct {
	LeaveTypeName string `xml:"urn:com.workday/bsvc Leave_Type_Name"`
}

// Contains the legal name for a person.  A person must name one and only one legal name.
type LegalNameDataType struct {
	NameDetailData *PersonNameDetailDataType `xml:"urn:com.workday/bsvc Name_Detail_Data"`
}

// Wrapper for License Identifier Data.
type LicenseIDDataType struct {
	ID                      string                      `xml:"urn:com.workday/bsvc ID,omitempty"`
	IDTypeReference         *LicenseIDTypeAllObjectType `xml:"urn:com.workday/bsvc ID_Type_Reference,omitempty"`
	CountryReference        *CountryObjectType          `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	CountryRegionReference  *CountryRegionObjectType    `xml:"urn:com.workday/bsvc Country_Region_Reference,omitempty"`
	CountryRegionDescriptor string                      `xml:"urn:com.workday/bsvc Country_Region_Descriptor,omitempty"`
	AuthorityReference      *AuthorityObjectType        `xml:"urn:com.workday/bsvc Authority_Reference,omitempty"`
	LicenseClass            string                      `xml:"urn:com.workday/bsvc License_Class,omitempty"`
	IssuedDate              *time.Time                  `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate          *time.Time                  `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	VerificationDate        *time.Time                  `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	VerifiedByReference     *WorkerObjectType           `xml:"urn:com.workday/bsvc Verified_By_Reference,omitempty"`
}

func (t *LicenseIDDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T LicenseIDDataType
	var layout struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.VerificationDate = (*xsdDate)(layout.T.VerificationDate)
	return e.EncodeElement(layout, start)
}
func (t *LicenseIDDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T LicenseIDDataType
	var overlay struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.VerificationDate = (*xsdDate)(overlay.T.VerificationDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element for all License Identifier data.
type LicenseIDType struct {
	LicenseIDReference       *LicenseIdentifierObjectType          `xml:"urn:com.workday/bsvc License_ID_Reference,omitempty"`
	LicenseIDData            *LicenseIDDataType                    `xml:"urn:com.workday/bsvc License_ID_Data,omitempty"`
	LicenseIDSharedReference *LicenseIdentifierReferenceObjectType `xml:"urn:com.workday/bsvc License_ID_Shared_Reference,omitempty"`
	Delete                   bool                                  `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LicenseIDTypeAllObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LicenseIDTypeAllObjectType struct {
	ID         []LicenseIDTypeAllObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper for License Identification Data. Includes License Identifiers.
type LicenseIdentificationDataType struct {
	LicenseID  []LicenseIDType `xml:"urn:com.workday/bsvc License_ID,omitempty"`
	ReplaceAll bool            `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Encapsulating element for all License Identifier data.
type LicenseIdentifierDataType struct {
	LicenseID              string                      `xml:"urn:com.workday/bsvc License_ID"`
	LicenseTypeReference   *LicenseTypeReferenceType   `xml:"urn:com.workday/bsvc License_Type_Reference"`
	LicenseClass           string                      `xml:"urn:com.workday/bsvc License_Class,omitempty"`
	IssuedDate             *time.Time                  `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate         *time.Time                  `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	VerificationDate       *time.Time                  `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	CountryReference       *CountryReferenceType       `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	CountryRegionReference *CountryRegionReferenceType `xml:"urn:com.workday/bsvc Country_Region_Reference,omitempty"`
	AuthorityReference     *AuthorityReferenceType     `xml:"urn:com.workday/bsvc Authority_Reference,omitempty"`
}

func (t *LicenseIdentifierDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T LicenseIdentifierDataType
	var layout struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.VerificationDate = (*xsdDate)(layout.T.VerificationDate)
	return e.EncodeElement(layout, start)
}
func (t *LicenseIdentifierDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T LicenseIdentifierDataType
	var overlay struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.VerificationDate = (*xsdDate)(overlay.T.VerificationDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type LicenseIdentifierObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LicenseIdentifierObjectType struct {
	ID         []LicenseIdentifierObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LicenseIdentifierReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LicenseIdentifierReferenceObjectType struct {
	ID         []LicenseIdentifierReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of License ID Type.
type LicenseTypeReferenceType struct {
	LicenseTypeName string `xml:"urn:com.workday/bsvc License_Type_Name"`
}

// If the dependent lives with worker
type LivesWithWorkerDataType struct {
	EffectiveDate   *time.Time `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	LivesWithWorker *bool      `xml:"urn:com.workday/bsvc Lives_With_Worker,omitempty"`
}

func (t *LivesWithWorkerDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T LivesWithWorkerDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *LivesWithWorkerDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T LivesWithWorkerDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element for all Local Last Name data, for countries supporting Last Name or Secondary Last Name in local script.
type LocalLastNameDataType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc Type,attr,omitempty"`
}

// Contains the components of a name in local script, such as the First Name and Last Name, for supporting countries.
type LocalNameDataType struct {
	FirstName   string                  `xml:"urn:com.workday/bsvc First_Name,omitempty"`
	MiddleName  string                  `xml:"urn:com.workday/bsvc Middle_Name,omitempty"`
	LastName    []LocalLastNameDataType `xml:"urn:com.workday/bsvc Last_Name,omitempty"`
	LocalName   string                  `xml:"urn:com.workday/bsvc Local_Name,attr,omitempty"`
	LocalScript string                  `xml:"urn:com.workday/bsvc Local_Script,attr,omitempty"`
}

// Contains the components of a name in local script, such as the First Name and Last Name, for supporting countries.
type LocalPersonNameDetailDataType struct {
	FirstName          string `xml:"urn:com.workday/bsvc First_Name,omitempty"`
	MiddleName         string `xml:"urn:com.workday/bsvc Middle_Name,omitempty"`
	LastName           string `xml:"urn:com.workday/bsvc Last_Name,omitempty"`
	SecondaryLastName  string `xml:"urn:com.workday/bsvc Secondary_Last_Name,omitempty"`
	FirstName2         string `xml:"urn:com.workday/bsvc First_Name_2,omitempty"`
	MiddleName2        string `xml:"urn:com.workday/bsvc Middle_Name_2,omitempty"`
	LastName2          string `xml:"urn:com.workday/bsvc Last_Name_2,omitempty"`
	SecondaryLastName2 string `xml:"urn:com.workday/bsvc Secondary_Last_Name_2,omitempty"`
	LocalName          string `xml:"urn:com.workday/bsvc Local_Name,attr,omitempty"`
	LocalScript        string `xml:"urn:com.workday/bsvc Local_Script,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LocalTerminationReasonObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LocalTerminationReasonObjectType struct {
	ID         []LocalTerminationReasonObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LocaleObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LocaleObjectType struct {
	ID         []LocaleObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The Web Service Element holding Location Attribute Data
type LocationAttributeDataType struct {
	ID                        string                    `xml:"urn:com.workday/bsvc ID,omitempty"`
	LocationAttributeName     string                    `xml:"urn:com.workday/bsvc Location_Attribute_Name"`
	LocationUsageReference    []LocationUsageObjectType `xml:"urn:com.workday/bsvc Location_Usage_Reference"`
	LocationAttributeInactive *bool                     `xml:"urn:com.workday/bsvc Location_Attribute_Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LocationAttributeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LocationAttributeObjectType struct {
	ID         []LocationAttributeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Location Attribute Request References Web Service Element
type LocationAttributeRequestReferencesType struct {
	LocationAttributeReference []LocationAttributeObjectType `xml:"urn:com.workday/bsvc Location_Attribute_Reference"`
}

// Location Attribute Response Data Web Service Element
type LocationAttributeResponseDataType struct {
	LocationAttribute []LocationAttributeType `xml:"urn:com.workday/bsvc Location_Attribute,omitempty"`
}

// Location Attribute Web Service Element
type LocationAttributeType struct {
	LocationAttributeReference *LocationAttributeObjectType `xml:"urn:com.workday/bsvc Location_Attribute_Reference"`
	LocationAttributeData      *LocationAttributeDataType   `xml:"urn:com.workday/bsvc Location_Attribute_Data"`
}

// Encapsulating element containing a brief summary of Location data.
type LocationContentDataType struct {
	IntegrationIDData     *ExternalIntegrationIDDataType  `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	LocationName          string                          `xml:"urn:com.workday/bsvc Location_Name,omitempty"`
	LocationTypeReference []LocationTypeReferenceDataType `xml:"urn:com.workday/bsvc Location_Type_Reference,omitempty"`
	TimeProfileReference  []TimeProfileReferenceDataType  `xml:"urn:com.workday/bsvc Time_Profile_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LocationContextObjectIDType struct {
	Value      string `xml:",chardata"`
	Type       string `xml:"urn:com.workday/bsvc type,attr"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
}

type LocationContextObjectType struct {
	ID         []LocationContextObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Location data.
type LocationDataType struct {
	IntegrationIDData                  *ExternalIntegrationIDDataType           `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	LocationName                       string                                   `xml:"urn:com.workday/bsvc Location_Name,omitempty"`
	TimeProfileReferenceData           *TimeProfileReferenceDataType            `xml:"urn:com.workday/bsvc Time_Profile_Reference_Data,omitempty"`
	LocationTypeReferenceData          []LocationTypeReferenceDataType          `xml:"urn:com.workday/bsvc Location_Type_Reference_Data,omitempty"`
	DefaultCurrencyReference           *CurrencyObjectType                      `xml:"urn:com.workday/bsvc Default_Currency_Reference,omitempty"`
	TradeName                          string                                   `xml:"urn:com.workday/bsvc Trade_Name,omitempty"`
	WorksiteIDCode                     string                                   `xml:"urn:com.workday/bsvc Worksite_ID_Code,omitempty"`
	ContactData                        *ContactDataType                         `xml:"urn:com.workday/bsvc Contact_Data,omitempty"`
	ContainerOrganizationReferenceData []ContainerOrganizationReferenceDataType `xml:"urn:com.workday/bsvc Container_Organization_Reference_Data,omitempty"`
	Inactive                           *bool                                    `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LocationHierarchyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LocationHierarchyObjectType struct {
	ID         []LocationHierarchyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Organization Assignments information for Location Hierarchy to be updated or returned.
type LocationHierarchyOrganizationAssignmentsDataType struct {
	LocationHierarchyReference                         *LocationHierarchyObjectType                             `xml:"urn:com.workday/bsvc Location_Hierarchy_Reference"`
	LocationHierarchyOrganizationAssignmentsbyTypeData []LocationHierarchyOrganizationAssignmentsbyTypeDataType `xml:"urn:com.workday/bsvc Location_Hierarchy_Organization_Assignments_by_Type_Data,omitempty"`
	ReplaceAll                                         bool                                                     `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// References to Location Hierarchies for which to request their Organization Assignments. Can take one or more references
type LocationHierarchyOrganizationAssignmentsRequestReferencesType struct {
	LocationHierarchyReference []LocationHierarchyObjectType `xml:"urn:com.workday/bsvc Location_Hierarchy_Reference"`
}

// Returned information from the Location Hierarchy Organization Assignments request.
type LocationHierarchyOrganizationAssignmentsResponseDataType struct {
	LocationHierarchyOrganizationAssignments []LocationHierarchyOrganizationAssignmentsType `xml:"urn:com.workday/bsvc Location_Hierarchy_Organization_Assignments,omitempty"`
}

// Location Hierarchy Organization Assignments
type LocationHierarchyOrganizationAssignmentsType struct {
	LocationHierarchyOrganizationAssignmentsData []LocationHierarchyOrganizationAssignmentsDataType `xml:"urn:com.workday/bsvc Location_Hierarchy_Organization_Assignments_Data,omitempty"`
}

// Input Element for Organization Type and Allowed Organizations data.
type LocationHierarchyOrganizationAssignmentsbyTypeDataType struct {
	OrganizationTypeReference    *OrganizationTypeObjectType `xml:"urn:com.workday/bsvc Organization_Type_Reference"`
	AllowedOrganizationReference []StaffObjectType           `xml:"urn:com.workday/bsvc Allowed_Organization_Reference,omitempty"`
	Delete                       bool                        `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Wrapper element for the Instructional Location data.
type LocationInstructionalSiteDataType struct {
	AcademicUnitReference         *AcademicUnitObjectType `xml:"urn:com.workday/bsvc Academic_Unit_Reference"`
	InstructionalSiteDataCapacity float64                 `xml:"urn:com.workday/bsvc Instructional_Site_Data_Capacity"`
	OffSite                       *bool                   `xml:"urn:com.workday/bsvc Off-Site,omitempty"`
	InstructionalUseOnly          *bool                   `xml:"urn:com.workday/bsvc Instructional_Use_Only,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LocationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LocationObjectType struct {
	ID         []LocationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Location.
type LocationReferenceWWSType struct {
	IntegrationIDReference *ExternalIntegrationIDReferenceDataType `xml:"urn:com.workday/bsvc Integration_ID_Reference,omitempty"`
	LocationIDReference    *LocationObjectType                     `xml:"urn:com.workday/bsvc Location_ID_Reference,omitempty"`
}

// Element containing filtering criteria to specify the Location to return in the response.
type LocationRequestCriteriaType struct {
	LocationName                  string                              `xml:"urn:com.workday/bsvc Location_Name,omitempty"`
	LocationUsageReference        []LocationUsageObjectType           `xml:"urn:com.workday/bsvc Location_Usage_Reference,omitempty"`
	LocationTypeReference         []LocationTypeObjectType            `xml:"urn:com.workday/bsvc Location_Type_Reference,omitempty"`
	ExcludeInactiveLocations      *bool                               `xml:"urn:com.workday/bsvc Exclude_Inactive_Locations,omitempty"`
	ExcludeActiveLocations        *bool                               `xml:"urn:com.workday/bsvc Exclude_Active_Locations,omitempty"`
	FieldAndParameterCriteriaData []FieldAndParameterCriteriaDataType `xml:"urn:com.workday/bsvc Field_And_Parameter_Criteria_Data,omitempty"`
}

// Element containing reference to a specific Location.
type LocationRequestReferencesType struct {
	LocationReference        []LocationObjectType `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	SkipNonExistingInstances bool                 `xml:"urn:com.workday/bsvc Skip_Non_Existing_Instances,attr,omitempty"`
}

// Contains each Location based on the Request Reference or Request Criteria. The data returned is the current information as of the dates in the response filter, and does not include all historical information about the Location.
type LocationResponseDataType struct {
	Location []LocationResponseType `xml:"urn:com.workday/bsvc Location,omitempty"`
}

// The response group allows for the response data to be tailored to only included elements that the user is looking for.  If no response group is provided in the request, then all groups will be returned.
type LocationResponseGroupType struct {
	IncludeReference    *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludeLocationData *bool `xml:"urn:com.workday/bsvc Include_Location_Data,omitempty"`
}

// Response element containing an instance of Location and its associated data.
type LocationResponseType struct {
	LocationReference *LocationObjectType `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	LocationData      *LocationiDataType  `xml:"urn:com.workday/bsvc Location_Data,omitempty"`
}

// The Location Student Housing Assignment Data Wrapper for the Location iData Element
type LocationStudentHousingAssignmentDataType struct {
	AcademicUnitReference *AcademicUnitObjectType `xml:"urn:com.workday/bsvc Academic_Unit_Reference"`
}

// Encapsulating element containing a brief summary of Location data.
type LocationSummaryDataType struct {
	LocationReference        *LocationObjectType          `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	Name                     string                       `xml:"urn:com.workday/bsvc Name,omitempty"`
	LocationTypeReference    []LocationTypeObjectType     `xml:"urn:com.workday/bsvc Location_Type_Reference,omitempty"`
	LocalReference           *LocaleObjectType            `xml:"urn:com.workday/bsvc Local_Reference,omitempty"`
	DisplayLanguageReference *UserLanguageObjectType      `xml:"urn:com.workday/bsvc Display_Language_Reference,omitempty"`
	TimeProfileReference     *TimeProfileObjectType       `xml:"urn:com.workday/bsvc Time_Profile_Reference,omitempty"`
	ScheduledWeeklyHours     float64                      `xml:"urn:com.workday/bsvc Scheduled_Weekly_Hours,omitempty"`
	AddressData              []AddressInformationDataType `xml:"urn:com.workday/bsvc Address_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type LocationTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LocationTypeObjectType struct {
	ID         []LocationTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Location Type.
type LocationTypeReferenceDataType struct {
	LocationTypeDescription string `xml:"urn:com.workday/bsvc Location_Type_Description"`
}

// Contains a unique identifier for an instance of an object.
type LocationUsageObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LocationUsageObjectType struct {
	ID         []LocationUsageObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element containing all Location data.
type LocationiDataType struct {
	LocationID                         string                                    `xml:"urn:com.workday/bsvc Location_ID,omitempty"`
	EffectiveDate                      *time.Time                                `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	LocationName                       string                                    `xml:"urn:com.workday/bsvc Location_Name"`
	LocationUsageReference             []LocationUsageObjectType                 `xml:"urn:com.workday/bsvc Location_Usage_Reference"`
	LocationTypeReference              []LocationTypeObjectType                  `xml:"urn:com.workday/bsvc Location_Type_Reference,omitempty"`
	LocationAttributeReference         []LocationAttributeObjectType             `xml:"urn:com.workday/bsvc Location_Attribute_Reference,omitempty"`
	SuperiorLocationReference          *LocationObjectType                       `xml:"urn:com.workday/bsvc Superior_Location_Reference,omitempty"`
	Inactive                           *bool                                     `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	Latitude                           float64                                   `xml:"urn:com.workday/bsvc Latitude,omitempty"`
	Longitude                          float64                                   `xml:"urn:com.workday/bsvc Longitude,omitempty"`
	Altitude                           float64                                   `xml:"urn:com.workday/bsvc Altitude,omitempty"`
	TimeProfileReference               *TimeProfileObjectType                    `xml:"urn:com.workday/bsvc Time_Profile_Reference,omitempty"`
	LocaleReference                    *LocaleObjectType                         `xml:"urn:com.workday/bsvc Locale_Reference,omitempty"`
	DisplayLanguageReference           *UserLanguageObjectType                   `xml:"urn:com.workday/bsvc Display_Language_Reference,omitempty"`
	TimeZoneReference                  *TimeZoneObjectType                       `xml:"urn:com.workday/bsvc Time_Zone_Reference,omitempty"`
	DefaultCurrencyReference           *CurrencyObjectType                       `xml:"urn:com.workday/bsvc Default_Currency_Reference,omitempty"`
	ExternalName                       string                                    `xml:"urn:com.workday/bsvc External_Name,omitempty"`
	DefaultJobPostingLocationReference *LocationObjectType                       `xml:"urn:com.workday/bsvc Default_Job_Posting_Location_Reference,omitempty"`
	TradeName                          string                                    `xml:"urn:com.workday/bsvc Trade_Name,omitempty"`
	WorksiteIDCode                     string                                    `xml:"urn:com.workday/bsvc Worksite_ID_Code,omitempty"`
	GlobalLocationNumber               string                                    `xml:"urn:com.workday/bsvc Global_Location_Number,omitempty"`
	LocationIdentifier                 string                                    `xml:"urn:com.workday/bsvc Location_Identifier,omitempty"`
	InstructionalSiteData              *LocationInstructionalSiteDataType        `xml:"urn:com.workday/bsvc Instructional_Site_Data,omitempty"`
	StudentHousingAssignmentData       *LocationStudentHousingAssignmentDataType `xml:"urn:com.workday/bsvc Student_Housing_Assignment_Data,omitempty"`
	ContactData                        *ContactInformationDataType               `xml:"urn:com.workday/bsvc Contact_Data,omitempty"`
	IntegrationIDData                  *ExternalIntegrationIDDataType            `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	LocationHierarchyReference         []LocationHierarchyObjectType             `xml:"urn:com.workday/bsvc Location_Hierarchy_Reference,omitempty"`
	IntegrationFieldOverrideData       []DocumentFieldResultDataType             `xml:"urn:com.workday/bsvc Integration_Field_Override_Data,omitempty"`
}

func (t *LocationiDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T LocationiDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *LocationiDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T LocationiDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type LossImpactObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type LossImpactObjectType struct {
	ID         []LossImpactObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The details of the transaction that has been rescinded or corrected.
type MainTransactionLogEntryDataType struct {
	TransactionLogReference *TransactionLogObjectType `xml:"urn:com.workday/bsvc Transaction_Log_Reference,omitempty"`
	TransactionLogData      *TransactionLogDataType   `xml:"urn:com.workday/bsvc Transaction_Log_Data,omitempty"`
}

// Contains the instructions for adding or updating a committee definition.
type MaintainCommitteeDefinitionRequestType struct {
	CommitteeDefinitionReference *CommitteeObjectType         `xml:"urn:com.workday/bsvc Committee_Definition_Reference,omitempty"`
	CommitteeDefinitionData      *CommitteeDefinitionDataType `xml:"urn:com.workday/bsvc Committee_Definition_Data"`
	AddOnly                      bool                         `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                      string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Maintain Committee Definition Response
type MaintainCommitteeDefinitionResponseType struct {
	CommitteeDefinitionReference *CommitteeObjectType `xml:"urn:com.workday/bsvc Committee_Definition_Reference,omitempty"`
	Version                      string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Operation allowing the addition of contact information for a person
type MaintainContactInformationforPersonEventRequestType struct {
	BusinessProcessParameters      *BusinessProcessParametersType            `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	MaintainContactInformationData *ContactInformationforPersonEventDataType `xml:"urn:com.workday/bsvc Maintain_Contact_Information_Data,omitempty"`
	AddOnly                        bool                                      `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                        string                                    `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The Contact Information for Person Event created by the corresponding request
type MaintainContactInformationforPersonEventResponseType struct {
	ContactInformationforPersonEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Contact_Information_for_Person_Event_Reference,omitempty"`
	Version                                   string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Manage Committee Membership Data, contains the data for the Manage Committee Membership event
type ManageCommitteeMembershipDataType struct {
	CreateExternalCommitteeMemberData                                         *CreateExternalCommitteeMemberDataType                   `xml:"urn:com.workday/bsvc Create_External_Committee_Member_Data"`
	CommitteeMemberReference                                                  *CommitteeMemberEnabledObjectType                        `xml:"urn:com.workday/bsvc Committee_Member_Reference"`
	EffectiveDate                                                             time.Time                                                `xml:"urn:com.workday/bsvc Effective_Date"`
	ReasonReference                                                           *EventClassificationSubcategoryObjectType                `xml:"urn:com.workday/bsvc Reason_Reference"`
	CommitteeReference                                                        *CommitteeObjectType                                     `xml:"urn:com.workday/bsvc Committee__Reference"`
	CommitteeMembershipTypeReference                                          *CommitteeMembershipTypeObjectType                       `xml:"urn:com.workday/bsvc Committee_Membership_Type_Reference"`
	EndDate                                                                   *time.Time                                               `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	ManageProfessionalAffiliationSubBusinessProcessforExternalCommitteeMember *ManageProfessionalAffiliationSubBusinessProcessDataType `xml:"urn:com.workday/bsvc Manage_Professional_Affiliation_Sub_Business_Process_for_External_Committee_Member,omitempty"`
	AddOnly                                                                   bool                                                     `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
}

func (t *ManageCommitteeMembershipDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ManageCommitteeMembershipDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
		EndDate       *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *ManageCommitteeMembershipDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ManageCommitteeMembershipDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
		EndDate       *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Request element for the Manage Committee Membership business process web service.
type ManageCommitteeMembershipRequestType struct {
	BusinessProcessParameters     *BusinessProcessParametersType     `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ManageCommitteeMembershipData *ManageCommitteeMembershipDataType `xml:"urn:com.workday/bsvc Manage_Committee_Membership_Data"`
	Version                       string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Top level response for Manage Committee Membership business process operation
type ManageCommitteeMembershipResponseType struct {
	EventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Event_Reference,omitempty"`
	Version        string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for Education Data.
type ManageEducationDataforRoleType struct {
	RoleReference   *RoleObjectType                      `xml:"urn:com.workday/bsvc Role_Reference,omitempty"`
	SourceReference *PersonSkillSourceCategoryObjectType `xml:"urn:com.workday/bsvc Source_Reference,omitempty"`
	Education       []EducationType                      `xml:"urn:com.workday/bsvc Education,omitempty"`
}

// Manage Education Sub Business Process Data
type ManageEducationSubBusinessProcessDataType struct {
	BusinessSubProcessParameters []BusinessSubProcessParametersType `xml:"urn:com.workday/bsvc Business_Sub_Process_Parameters,omitempty"`
	ManageEducationData          []ManageEducationDataforRoleType   `xml:"urn:com.workday/bsvc Manage_Education_Data,omitempty"`
}

// Details of the Probation Period being added to the Worker
type ManageEmployeeProbationPeriodsEventDataType struct {
	WorkerReference               *WorkerObjectType                        `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	PositionReference             *PositionElementObjectType               `xml:"urn:com.workday/bsvc Position_Reference,omitempty"`
	ProbationPeriodReference      *EmployeeProbationPeriodObjectType       `xml:"urn:com.workday/bsvc Probation_Period_Reference,omitempty"`
	StartDate                     time.Time                                `xml:"urn:com.workday/bsvc Start_Date"`
	EndDate                       *time.Time                               `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	ProbationTypeReference        *EmployeeProbationPeriodTypeObjectType   `xml:"urn:com.workday/bsvc Probation_Type_Reference,omitempty"`
	DeriveProbationPeriodfromRule *bool                                    `xml:"urn:com.workday/bsvc Derive_Probation_Period_from_Rule,omitempty"`
	Length                        *ProbationPeriodLengthDataType           `xml:"urn:com.workday/bsvc Length,omitempty"`
	ExtendedLength                *ProbationPeriodExtendedLengthDataType   `xml:"urn:com.workday/bsvc Extended_Length,omitempty"`
	ProbationReasonReference      *EmployeeProbationPeriodReasonObjectType `xml:"urn:com.workday/bsvc Probation_Reason_Reference,omitempty"`
	ExtendedEndDate               *time.Time                               `xml:"urn:com.workday/bsvc Extended_End_Date,omitempty"`
	Note                          string                                   `xml:"urn:com.workday/bsvc Note,omitempty"`
}

func (t *ManageEmployeeProbationPeriodsEventDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ManageEmployeeProbationPeriodsEventDataType
	var layout struct {
		*T
		StartDate       *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		EndDate         *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
		ExtendedEndDate *xsdDate `xml:"urn:com.workday/bsvc Extended_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(&layout.T.StartDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	layout.ExtendedEndDate = (*xsdDate)(layout.T.ExtendedEndDate)
	return e.EncodeElement(layout, start)
}
func (t *ManageEmployeeProbationPeriodsEventDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ManageEmployeeProbationPeriodsEventDataType
	var overlay struct {
		*T
		StartDate       *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		EndDate         *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
		ExtendedEndDate *xsdDate `xml:"urn:com.workday/bsvc Extended_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(&overlay.T.StartDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	overlay.ExtendedEndDate = (*xsdDate)(overlay.T.ExtendedEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Probation Period Request Element
type ManageEmployeeProbationPeriodsEventRequestType struct {
	BusinessProcessParameters               *BusinessProcessParametersType                `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ManageEmployeeProbationPeriodsEventData []ManageEmployeeProbationPeriodsEventDataType `xml:"urn:com.workday/bsvc Manage_Employee_Probation_Periods_Event_Data,omitempty"`
	Version                                 string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Manage Employee Probation Period Response
type ManageEmployeeProbationPeriodsEventResponseType struct {
	EmployeeProbationPeriodEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Employee_Probation_Period_Event_Reference,omitempty"`
	Version                               string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Manage Instructor Eligibility Sub Business Process Data
type ManageInstructorEligibilitySubBusinessProcessDataType struct {
	BusinessSubProcessParameters  []BusinessSubProcessParametersType  `xml:"urn:com.workday/bsvc Business_Sub_Process_Parameters,omitempty"`
	InstructorEligibilityLineData []InstructorEligibilityLineDataType `xml:"urn:com.workday/bsvc Instructor_Eligibility_Line_Data,omitempty"`
}

// Wrapper element for Professional Affiliation Data.
type ManageProfessionalAffiliationDataforRoleType struct {
	RoleReference           *RoleObjectType                      `xml:"urn:com.workday/bsvc Role_Reference,omitempty"`
	SourceReference         *PersonSkillSourceCategoryObjectType `xml:"urn:com.workday/bsvc Source_Reference,omitempty"`
	ProfessionalAffiliation []ProfessionalAffiliationSkillType   `xml:"urn:com.workday/bsvc Professional_Affiliation,omitempty"`
}

// Manage Professional Affiliation Sub Business Process Data
type ManageProfessionalAffiliationSubBusinessProcessDataType struct {
	BusinessSubProcessParameters      []BusinessSubProcessParametersType             `xml:"urn:com.workday/bsvc Business_Sub_Process_Parameters,omitempty"`
	ManageProfessionalAffiliationData []ManageProfessionalAffiliationDataforRoleType `xml:"urn:com.workday/bsvc Manage_Professional_Affiliation_Data,omitempty"`
}

// Top Level Request element containing the information needed to create a new union member instance.
type ManageUnionMembershipRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	UnionMemberData           *UnionMemberDataType           `xml:"urn:com.workday/bsvc Union_Member_Data"`
	Version                   string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the response data for the Put Union member WS.   Returns the Union Membership Event Reference info for the instance created.
type ManageUnionMembershipResponseType struct {
	UnionMemberEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Union_Member_Event_Reference,omitempty"`
	Version                   string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the organization reference and details about an organization.
type ManagementChainDataType struct {
	OrganizationReference *OrganizationObjectType `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	ManagerReference      []WorkerObjectType      `xml:"urn:com.workday/bsvc Manager_Reference,omitempty"`
	Manager               []WorkerBasicDataType   `xml:"urn:com.workday/bsvc Manager,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ManagementLevelObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ManagementLevelObjectType struct {
	ID         []ManagementLevelObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the evaluation information that was filled out by the manager.
type ManagerEvaluationDetailDataType struct {
	OverallData *OverallEvaluationDetailDataType `xml:"urn:com.workday/bsvc Overall_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type MaritalStatusObjectIDType struct {
	Value      string `xml:",chardata"`
	Type       string `xml:"urn:com.workday/bsvc type,attr"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
}

type MaritalStatusObjectType struct {
	ID         []MaritalStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Marital Status.
type MaritalStatusReferenceType struct {
	MaritalStatusDescription string `xml:"urn:com.workday/bsvc Marital_Status_Description"`
}

// Contains a unique identifier for an instance of an object.
type MeritPercentPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type MeritPercentPlanObjectType struct {
	ID         []MeritPercentPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for all Military Service data for the worker.
type MilitaryInformationDataType struct {
	MilitaryServiceInformationData []MilitaryServiceInformationDataType `xml:"urn:com.workday/bsvc Military_Service_Information_Data,omitempty"`
	ReplaceAll                     bool                                 `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type MilitaryRankObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type MilitaryRankObjectType struct {
	ID         []MilitaryRankObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element for Military Service Data.
type MilitaryServiceDataType struct {
	MilitaryStatusReference *MilitaryStatusReferenceType `xml:"urn:com.workday/bsvc Military_Status_Reference"`
	MilitaryDischargeDate   *time.Time                   `xml:"urn:com.workday/bsvc Military_Discharge_Date,omitempty"`
}

func (t *MilitaryServiceDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T MilitaryServiceDataType
	var layout struct {
		*T
		MilitaryDischargeDate *xsdDate `xml:"urn:com.workday/bsvc Military_Discharge_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.MilitaryDischargeDate = (*xsdDate)(layout.T.MilitaryDischargeDate)
	return e.EncodeElement(layout, start)
}
func (t *MilitaryServiceDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T MilitaryServiceDataType
	var overlay struct {
		*T
		MilitaryDischargeDate *xsdDate `xml:"urn:com.workday/bsvc Military_Discharge_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MilitaryDischargeDate = (*xsdDate)(overlay.T.MilitaryDischargeDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper element for each Military Service entry.
type MilitaryServiceInformationDataType struct {
	MilitaryServiceReference *MilitaryServiceReferenceObjectType `xml:"urn:com.workday/bsvc Military_Service_Reference,omitempty"`
	MilitaryServiceData      *MilitaryServiceSubDataType         `xml:"urn:com.workday/bsvc Military_Service_Data,omitempty"`
	Delete                   bool                                `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type MilitaryServiceReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type MilitaryServiceReferenceObjectType struct {
	ID         []MilitaryServiceReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Container for military service data for the Change Personal Information business process.
type MilitaryServiceSubDataType struct {
	MilitaryStatusReference      *MilitaryStatusObjectType      `xml:"urn:com.workday/bsvc Military_Status_Reference"`
	MilitaryDischargeDate        *time.Time                     `xml:"urn:com.workday/bsvc Military_Discharge_Date,omitempty"`
	MilitaryStatusBeginDate      *time.Time                     `xml:"urn:com.workday/bsvc Military_Status_Begin_Date,omitempty"`
	MilitaryServiceTypeReference *MilitaryServiceTypeObjectType `xml:"urn:com.workday/bsvc Military_Service_Type_Reference,omitempty"`
	MilitaryRankReference        *MilitaryRankObjectType        `xml:"urn:com.workday/bsvc Military_Rank_Reference,omitempty"`
	Notes                        string                         `xml:"urn:com.workday/bsvc Notes,omitempty"`
}

func (t *MilitaryServiceSubDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T MilitaryServiceSubDataType
	var layout struct {
		*T
		MilitaryDischargeDate   *xsdDate `xml:"urn:com.workday/bsvc Military_Discharge_Date,omitempty"`
		MilitaryStatusBeginDate *xsdDate `xml:"urn:com.workday/bsvc Military_Status_Begin_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.MilitaryDischargeDate = (*xsdDate)(layout.T.MilitaryDischargeDate)
	layout.MilitaryStatusBeginDate = (*xsdDate)(layout.T.MilitaryStatusBeginDate)
	return e.EncodeElement(layout, start)
}
func (t *MilitaryServiceSubDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T MilitaryServiceSubDataType
	var overlay struct {
		*T
		MilitaryDischargeDate   *xsdDate `xml:"urn:com.workday/bsvc Military_Discharge_Date,omitempty"`
		MilitaryStatusBeginDate *xsdDate `xml:"urn:com.workday/bsvc Military_Status_Begin_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MilitaryDischargeDate = (*xsdDate)(overlay.T.MilitaryDischargeDate)
	overlay.MilitaryStatusBeginDate = (*xsdDate)(overlay.T.MilitaryStatusBeginDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type MilitaryServiceTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type MilitaryServiceTypeObjectType struct {
	ID         []MilitaryServiceTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type MilitaryStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type MilitaryStatusObjectType struct {
	ID         []MilitaryStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Military Status.
type MilitaryStatusReferenceType struct {
	MilitaryStatusName string                `xml:"urn:com.workday/bsvc Military_Status_Name"`
	CountryReference   *CountryReferenceType `xml:"urn:com.workday/bsvc Country_Reference"`
}

// Contains a unique identifier for an instance of an object.
type MimeTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type MimeTypeObjectType struct {
	ID         []MimeTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type MobilityChoiceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type MobilityChoiceObjectType struct {
	ID         []MobilityChoiceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type MonthObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type MonthObjectType struct {
	ID         []MonthObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element for all of the name data such as first and last name
type NameDataType struct {
	CountryReference   *CountryReferenceType `xml:"urn:com.workday/bsvc Country_Reference"`
	AdditionalNameType string                `xml:"urn:com.workday/bsvc Additional_Name_Type,omitempty"`
	Prefix             []PrefixNameDataType  `xml:"urn:com.workday/bsvc Prefix,omitempty"`
	FirstName          string                `xml:"urn:com.workday/bsvc First_Name,omitempty"`
	MiddleName         string                `xml:"urn:com.workday/bsvc Middle_Name,omitempty"`
	LastName           []LastNameDataType    `xml:"urn:com.workday/bsvc Last_Name,omitempty"`
	LocalNameData      *LocalNameDataType    `xml:"urn:com.workday/bsvc Local_Name_Data,omitempty"`
	Suffix             []SuffixNameDataType  `xml:"urn:com.workday/bsvc Suffix,omitempty"`
	IsLegal            bool                  `xml:"urn:com.workday/bsvc Is_Legal,attr,omitempty"`
	IsPreferred        bool                  `xml:"urn:com.workday/bsvc Is_Preferred,attr,omitempty"`
	EffectiveDate      time.Time             `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	LastModified       time.Time             `xml:"urn:com.workday/bsvc Last_Modified,attr,omitempty"`
}

func (t *NameDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T NameDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
		LastModified  *xsdDateTime `xml:"urn:com.workday/bsvc Last_Modified,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	layout.LastModified = (*xsdDateTime)(&layout.T.LastModified)
	return e.EncodeElement(layout, start)
}
func (t *NameDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T NameDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
		LastModified  *xsdDateTime `xml:"urn:com.workday/bsvc Last_Modified,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	overlay.LastModified = (*xsdDateTime)(&overlay.T.LastModified)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type NamedProfessorshipObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type NamedProfessorshipObjectType struct {
	ID         []NamedProfessorshipObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for the Named Professorship Snapshot.
type NamedProfessorshipSnapshotDataType struct {
	GiftReference                              *GiftObjectType         `xml:"urn:com.workday/bsvc Gift_Reference"`
	ProfessorshipName                          string                  `xml:"urn:com.workday/bsvc Professorship_Name"`
	NamedProfessorshipTitle                    string                  `xml:"urn:com.workday/bsvc Named_Professorship_Title"`
	AcademicUnitforNamedProfessorshipReference *AcademicUnitObjectType `xml:"urn:com.workday/bsvc Academic_Unit_for_Named_Professorship_Reference"`
	TermLimits                                 float64                 `xml:"urn:com.workday/bsvc Term_Limits,omitempty"`
	AppointmentRestrictions                    string                  `xml:"urn:com.workday/bsvc Appointment_Restrictions,omitempty"`
}

// Wrapper for National Identifier Data.
type NationalIDDataType struct {
	ID                  string                    `xml:"urn:com.workday/bsvc ID,omitempty"`
	IDTypeReference     *NationalIDTypeObjectType `xml:"urn:com.workday/bsvc ID_Type_Reference,omitempty"`
	CountryReference    *CountryObjectType        `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	IssuedDate          *time.Time                `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate      *time.Time                `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	VerificationDate    *time.Time                `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	Series              string                    `xml:"urn:com.workday/bsvc Series,omitempty"`
	IssuingAgency       string                    `xml:"urn:com.workday/bsvc Issuing_Agency,omitempty"`
	VerifiedByReference *WorkerObjectType         `xml:"urn:com.workday/bsvc Verified_By_Reference,omitempty"`
}

func (t *NationalIDDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T NationalIDDataType
	var layout struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.VerificationDate = (*xsdDate)(layout.T.VerificationDate)
	return e.EncodeElement(layout, start)
}
func (t *NationalIDDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T NationalIDDataType
	var overlay struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.VerificationDate = (*xsdDate)(overlay.T.VerificationDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper element for all National Identifier Data.
type NationalIDType struct {
	NationalIDReference       *UniqueIdentifierObjectType            `xml:"urn:com.workday/bsvc National_ID_Reference,omitempty"`
	NationalIDData            *NationalIDDataType                    `xml:"urn:com.workday/bsvc National_ID_Data,omitempty"`
	NationalIDSharedReference *NationalIdentifierReferenceObjectType `xml:"urn:com.workday/bsvc National_ID_Shared_Reference,omitempty"`
	Delete                    bool                                   `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type NationalIDTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type NationalIDTypeObjectType struct {
	ID         []NationalIDTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type NationalIdentifierReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type NationalIdentifierReferenceObjectType struct {
	ID         []NationalIdentifierReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type NotificationCategorizableObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type NotificationCategorizableObjectType struct {
	ID         []NotificationCategorizableObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Notification Type configurations for a particular user
type NotificationSubCategoryConfigurationsforUsersType struct {
	NotificationSubTypeConfiguration []NotificationSubTypeConfigurationType `xml:"urn:com.workday/bsvc Notification_Sub_Type_Configuration,omitempty"`
}

// Notification sub type configuration for each notification sub type
type NotificationSubTypeConfigurationType struct {
	NotificationSubTypeReference  *NotificationCategorizableObjectType `xml:"urn:com.workday/bsvc Notification_Sub_Type_Reference,omitempty"`
	NotificationchannelsReference []UniqueIdentifierObjectType         `xml:"urn:com.workday/bsvc Notification_channels_Reference,omitempty"`
}

// Occupation of the Dependent
type OccupationDataType struct {
	EffectiveDate *time.Time `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	Occupation    string     `xml:"urn:com.workday/bsvc Occupation,omitempty"`
}

func (t *OccupationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OccupationDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *OccupationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OccupationDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Emergency Contact data.
type OldEmergencyContactType struct {
	EmergencyContactReference *EmergencyContactObjectType `xml:"urn:com.workday/bsvc Emergency_Contact_Reference"`
	EmergencyContactData      *EmergencyContactDataType   `xml:"urn:com.workday/bsvc Emergency_Contact_Data"`
}

// Contains a unique identifier for an instance of an object.
type OneTimePaymentPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type OneTimePaymentPlanObjectType struct {
	ID         []OneTimePaymentPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type OrderableItemObjectIDType struct {
	Value      string `xml:",chardata"`
	Type       string `xml:"urn:com.workday/bsvc type,attr"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
}

type OrderableItemObjectType struct {
	ID         []OrderableItemObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Utilize the following elements to add (or update, if already existing) a new Organization into the Workday system. A new effective-dated organization name is automatically created if any attributes used for organization name are different as of specified effective date.
type OrganizationAddUpdateType struct {
	OrganizationData *OrganizationDataType `xml:"urn:com.workday/bsvc Organization_Data"`
	Version          string                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Organization Assignment Restrictions Data
type OrganizationAssignmentRestrictionsDataType struct {
	SupervisoryOrganizationReference             *SupervisoryOrganizationObjectType                 `xml:"urn:com.workday/bsvc Supervisory_Organization_Reference"`
	OrganizationAssignmentRestrictionsbyTypeData []OrganizationAssignmentRestrictionsbyTypeDataType `xml:"urn:com.workday/bsvc Organization_Assignment_Restrictions_by_Type_Data,omitempty"`
	ReplaceAll                                   bool                                               `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Organization Assignment Restrictions Request References
type OrganizationAssignmentRestrictionsRequestReferencesType struct {
	SupervisoryOrganizationReference []SupervisoryOrganizationObjectType `xml:"urn:com.workday/bsvc Supervisory_Organization_Reference"`
}

// Response Data
type OrganizationAssignmentRestrictionsResponseDataType struct {
	OrganizationAssignmentRestrictions []OrganizationAssignmentRestrictionsType `xml:"urn:com.workday/bsvc Organization_Assignment_Restrictions,omitempty"`
}

// Organization Assignment Restrictions Response Data
type OrganizationAssignmentRestrictionsType struct {
	OrganizationAssignmentRestrictionsData *OrganizationAssignmentRestrictionsDataType `xml:"urn:com.workday/bsvc Organization_Assignment_Restrictions_Data,omitempty"`
}

// Organization Assignment Restrictions by Type Data
type OrganizationAssignmentRestrictionsbyTypeDataType struct {
	OrganizationTypeReference *OrganizationTypeObjectType `xml:"urn:com.workday/bsvc Organization_Type_Reference"`
	AllowedOrganizationData   []StaffAllowedDataType      `xml:"urn:com.workday/bsvc Allowed_Organization_Data,omitempty"`
	DefaultOrganizationData   []StaffDefaultDataType      `xml:"urn:com.workday/bsvc Default_Organization_Data,omitempty"`
}

// Wrapper element for the default organization assignments for this organization.
type OrganizationAssignmentsDataType struct {
	OrganizationTypeReference *OrganizationTypeObjectType `xml:"urn:com.workday/bsvc Organization_Type_Reference"`
	OrganizationReference     *OrganizationObjectType     `xml:"urn:com.workday/bsvc Organization_Reference"`
}

// Encapsulating element containg a brief summary of Organization data.
type OrganizationContentDataType struct {
	IntegrationIDData            *ExternalIntegrationIDDataType         `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	OrganizationID               string                                 `xml:"urn:com.workday/bsvc Organization_ID,omitempty"`
	OrganizationName             string                                 `xml:"urn:com.workday/bsvc Organization_Name,omitempty"`
	OrganizationTypeReference    []OrganizationTypeReferenceDataType    `xml:"urn:com.workday/bsvc Organization_Type_Reference,omitempty"`
	OrganizationSubtypeReference []OrganizationSubtypeReferenceDataType `xml:"urn:com.workday/bsvc Organization_Subtype_Reference,omitempty"`
}

// Encapsulating element containing all Organization data.
type OrganizationDataType struct {
	OrganizationReferenceID         string                                   `xml:"urn:com.workday/bsvc Organization_Reference_ID,omitempty"`
	IncludeOrganizationIDinName     *bool                                    `xml:"urn:com.workday/bsvc Include_Organization_ID_in_Name,omitempty"`
	IntegrationIDData               *ExternalIntegrationIDDataType           `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	OrganizationName                string                                   `xml:"urn:com.workday/bsvc Organization_Name,omitempty"`
	AvailabilityDate                *time.Time                               `xml:"urn:com.workday/bsvc Availability_Date,omitempty"`
	IncludeOrganizationCodeInName   *bool                                    `xml:"urn:com.workday/bsvc Include_Organization_Code_In_Name,omitempty"`
	OrganizationCode                string                                   `xml:"urn:com.workday/bsvc Organization_Code,omitempty"`
	IncludeLeaderInName             *bool                                    `xml:"urn:com.workday/bsvc Include_Leader_In_Name,omitempty"`
	FrozenStatus                    *bool                                    `xml:"urn:com.workday/bsvc Frozen_Status,omitempty"`
	JobManagementEnabled            *bool                                    `xml:"urn:com.workday/bsvc Job_Management_Enabled,omitempty"`
	PositionManagementEnabled       *bool                                    `xml:"urn:com.workday/bsvc Position_Management_Enabled,omitempty"`
	SuperiorOrganizationReference   *SuperiorOrganizationReferenceDataType   `xml:"urn:com.workday/bsvc Superior_Organization_Reference,omitempty"`
	OrganizationTypeReference       *OrganizationTypeReferenceDataType       `xml:"urn:com.workday/bsvc Organization_Type_Reference,omitempty"`
	OrganizationSubtypeReference    *OrganizationSubtypeReferenceDataType    `xml:"urn:com.workday/bsvc Organization_Subtype_Reference,omitempty"`
	OrganizationVisibilityReference *OrganizationVisibilityReferenceDataType `xml:"urn:com.workday/bsvc Organization_Visibility_Reference,omitempty"`
	PrimaryBusinessSiteReference    *PrimaryBusinessSiteReferenceDataType    `xml:"urn:com.workday/bsvc Primary_Business_Site_Reference,omitempty"`
	ContainerOrganizationReference  []ContainerOrganizationReferenceDataType `xml:"urn:com.workday/bsvc Container_Organization_Reference,omitempty"`
	EffectiveDate                   time.Time                                `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
}

func (t *OrganizationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationDataType
	var layout struct {
		*T
		AvailabilityDate *xsdDate `xml:"urn:com.workday/bsvc Availability_Date,omitempty"`
		EffectiveDate    *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AvailabilityDate = (*xsdDate)(layout.T.AvailabilityDate)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationDataType
	var overlay struct {
		*T
		AvailabilityDate *xsdDate `xml:"urn:com.workday/bsvc Availability_Date,omitempty"`
		EffectiveDate    *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AvailabilityDate = (*xsdDate)(overlay.T.AvailabilityDate)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following criteria options to search for Organizations within the Workday system.  The Organization references that are returned are those that satisfy ALL criteria included in the request.  Therefore, the result set will become more limited with every criterium that is populated.
type OrganizationFindType struct {
	AsOfDate                      *time.Time                         `xml:"urn:com.workday/bsvc As_Of_Date,omitempty"`
	OrganizationName              string                             `xml:"urn:com.workday/bsvc Organization_Name,omitempty"`
	LocationReferenceData         *BusinessSiteReferenceDataType     `xml:"urn:com.workday/bsvc Location_Reference_Data,omitempty"`
	EmployeeReferenceData         *EmployeeReferenceType             `xml:"urn:com.workday/bsvc Employee_Reference_Data,omitempty"`
	ContingentWorkerReferenceData *ContingentWorkerReferenceDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Reference_Data,omitempty"`
	Version                       string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *OrganizationFindType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationFindType
	var layout struct {
		*T
		AsOfDate *xsdDate `xml:"urn:com.workday/bsvc As_Of_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(layout.T.AsOfDate)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationFindType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationFindType
	var overlay struct {
		*T
		AsOfDate *xsdDate `xml:"urn:com.workday/bsvc As_Of_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(overlay.T.AsOfDate)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following Reference element (and other optional attributes) to retrieve an instance of Organization and its associated data.
type OrganizationGetType struct {
	OrganizationReference *OrganizationReferenceType `xml:"urn:com.workday/bsvc Organization_Reference"`
	AsOfDate              time.Time                  `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment            time.Time                  `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version               string                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *OrganizationGetType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationGetType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationGetType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationGetType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type OrganizationGoalObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type OrganizationGoalObjectType struct {
	ID         []OrganizationGoalObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains information regarding organizations just adjacent in the hierarchy.
type OrganizationHierarchyDataType struct {
	TopLevelOrganizationReference    *OrganizationObjectType  `xml:"urn:com.workday/bsvc Top-Level_Organization_Reference,omitempty"`
	SuperiorOrganizationReference    *OrganizationObjectType  `xml:"urn:com.workday/bsvc Superior_Organization_Reference,omitempty"`
	SubordinateOrganizationReference []OrganizationObjectType `xml:"urn:com.workday/bsvc Subordinate_Organization_Reference,omitempty"`
	IncludedOrganizationReference    []OrganizationObjectType `xml:"urn:com.workday/bsvc Included_Organization_Reference,omitempty"`
	IncludedInOrganizationReference  []OrganizationObjectType `xml:"urn:com.workday/bsvc Included_In_Organization_Reference,omitempty"`
}

// This element contains the effective date that the organization is inactivated.
type OrganizationInactivateDataType struct {
	EffectiveDate time.Time `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
}

func (t *OrganizationInactivateDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationInactivateDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationInactivateDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationInactivateDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following elements to Inactivate an existing Organization within the Workday system.
type OrganizationInactivateType struct {
	ValidateOnly                                  *bool                           `xml:"urn:com.workday/bsvc Validate_Only,omitempty"`
	OrganizationReferenceData                     *OrganizationReferenceType      `xml:"urn:com.workday/bsvc Organization_Reference_Data"`
	OrganizationInactivateData                    *OrganizationInactivateDataType `xml:"urn:com.workday/bsvc Organization_Inactivate_Data"`
	KeepinHierarchy                               *bool                           `xml:"urn:com.workday/bsvc Keep_in_Hierarchy,omitempty"`
	OrganizationforSubordinatesReference          *OrganizationObjectType         `xml:"urn:com.workday/bsvc Organization_for_Subordinates_Reference,omitempty"`
	OrganizationforIncludedOrganizationsReference *OrganizationObjectType         `xml:"urn:com.workday/bsvc Organization_for_Included_Organizations_Reference,omitempty"`
	RemoveAllRoleAssignments                      *bool                           `xml:"urn:com.workday/bsvc Remove_All_Role_Assignments,omitempty"`
	Version                                       string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains information for Organization name data
type OrganizationNameDataType struct {
	EffectiveDate                 *time.Time `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	OrganizationID                string     `xml:"urn:com.workday/bsvc Organization_ID,omitempty"`
	OrganizationName              string     `xml:"urn:com.workday/bsvc Organization_Name,omitempty"`
	PhoneticName                  string     `xml:"urn:com.workday/bsvc Phonetic_Name,omitempty"`
	IncludeOrganizationIDinName   *bool      `xml:"urn:com.workday/bsvc Include_Organization_ID_in_Name,omitempty"`
	OrganizationCode              string     `xml:"urn:com.workday/bsvc Organization_Code,omitempty"`
	IncludeOrganizationCodeinName *bool      `xml:"urn:com.workday/bsvc Include_Organization_Code_in_Name,omitempty"`
	IncludeManagerLeaderinName    *bool      `xml:"urn:com.workday/bsvc Include_Manager_Leader_in_Name,omitempty"`
}

func (t *OrganizationNameDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationNameDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationNameDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationNameDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper for Request Criteria
type OrganizationNameRequestCriteriaType struct {
	OrganizationNameinEffectFrom *time.Time                   `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_From,omitempty"`
	OrganizationNameinEffectTo   *time.Time                   `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_To,omitempty"`
	OrganizationTypeReference    []OrganizationTypeObjectType `xml:"urn:com.workday/bsvc Organization_Type_Reference,omitempty"`
	IncludeInactive              *bool                        `xml:"urn:com.workday/bsvc Include_Inactive,omitempty"`
}

func (t *OrganizationNameRequestCriteriaType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationNameRequestCriteriaType
	var layout struct {
		*T
		OrganizationNameinEffectFrom *xsdDate `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_From,omitempty"`
		OrganizationNameinEffectTo   *xsdDate `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_To,omitempty"`
	}
	layout.T = (*T)(t)
	layout.OrganizationNameinEffectFrom = (*xsdDate)(layout.T.OrganizationNameinEffectFrom)
	layout.OrganizationNameinEffectTo = (*xsdDate)(layout.T.OrganizationNameinEffectTo)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationNameRequestCriteriaType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationNameRequestCriteriaType
	var overlay struct {
		*T
		OrganizationNameinEffectFrom *xsdDate `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_From,omitempty"`
		OrganizationNameinEffectTo   *xsdDate `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_To,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.OrganizationNameinEffectFrom = (*xsdDate)(overlay.T.OrganizationNameinEffectFrom)
	overlay.OrganizationNameinEffectTo = (*xsdDate)(overlay.T.OrganizationNameinEffectTo)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper for Request References
type OrganizationNameRequestReferencesType struct {
	OrganizationReference        []OrganizationObjectType `xml:"urn:com.workday/bsvc Organization_Reference"`
	OrganizationNameinEffectFrom *time.Time               `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_From,omitempty"`
	OrganizationNameinEffectTo   *time.Time               `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_To,omitempty"`
}

func (t *OrganizationNameRequestReferencesType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationNameRequestReferencesType
	var layout struct {
		*T
		OrganizationNameinEffectFrom *xsdDate `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_From,omitempty"`
		OrganizationNameinEffectTo   *xsdDate `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_To,omitempty"`
	}
	layout.T = (*T)(t)
	layout.OrganizationNameinEffectFrom = (*xsdDate)(layout.T.OrganizationNameinEffectFrom)
	layout.OrganizationNameinEffectTo = (*xsdDate)(layout.T.OrganizationNameinEffectTo)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationNameRequestReferencesType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationNameRequestReferencesType
	var overlay struct {
		*T
		OrganizationNameinEffectFrom *xsdDate `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_From,omitempty"`
		OrganizationNameinEffectTo   *xsdDate `xml:"urn:com.workday/bsvc Organization_Name_in_Effect_To,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.OrganizationNameinEffectFrom = (*xsdDate)(overlay.T.OrganizationNameinEffectFrom)
	overlay.OrganizationNameinEffectTo = (*xsdDate)(overlay.T.OrganizationNameinEffectTo)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper for Organization Name information
type OrganizationNameResponseDataType struct {
	OrganizationName []OrganizationNameType `xml:"urn:com.workday/bsvc Organization_Name,omitempty"`
}

// Wrapper for Response Group
type OrganizationNameResponseGroupType struct {
}

// Wrapper for Organization Name Data
type OrganizationNameType struct {
	OrganizationReference *OrganizationObjectType    `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	OrganizationNameData  []OrganizationNameDataType `xml:"urn:com.workday/bsvc Organization_Name_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type OrganizationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type OrganizationObjectType struct {
	ID         []OrganizationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type OrganizationOwnerObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type OrganizationOwnerObjectType struct {
	ID         []OrganizationOwnerObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Holds data for Organization Reference ID
type OrganizationReferenceIDReferenceDataType struct {
	OrganizationReferenceID     string `xml:"urn:com.workday/bsvc Organization_Reference_ID,omitempty"`
	OrganizationName            string `xml:"urn:com.workday/bsvc Organization_Name,omitempty"`
	IncludeOrganizationIDinName *bool  `xml:"urn:com.workday/bsvc Include_Organization_ID_in_Name,omitempty"`
}

// Organization Reference ID Request Criteria
type OrganizationReferenceIDRequestCriteriaType struct {
}

// Organization Reference ID Request References
type OrganizationReferenceIDRequestReferencesType struct {
	OrganizationReferenceIDReference []OrganizationObjectType `xml:"urn:com.workday/bsvc Organization_Reference_ID_Reference"`
}

// Organization Reference ID Response Data
type OrganizationReferenceIDResponseDataType struct {
	OrganizationReferenceID []OrganizationReferenceIDType `xml:"urn:com.workday/bsvc Organization_Reference_ID,omitempty"`
}

// Organization Reference ID Response Data
type OrganizationReferenceIDType struct {
	OrganizationReference *OrganizationObjectType                    `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	OrganizationIDData    []OrganizationReferenceIDReferenceDataType `xml:"urn:com.workday/bsvc Organization_ID_Data,omitempty"`
}

type OrganizationReferenceRootType struct {
	IntegrationIDReference *ExternalIntegrationIDReferenceDataType `xml:"urn:com.workday/bsvc Integration_ID_Reference"`
	Version                string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Reference element representing a unique instance of Organization.
type OrganizationReferenceType struct {
	IntegrationIDReference *ExternalIntegrationIDReferenceDataType `xml:"urn:com.workday/bsvc Integration_ID_Reference"`
}

// Reference element representing a unique instance of Organization.
type OrganizationReferenceWWSType struct {
	IntegrationIDReference  *ExternalIntegrationIDReferenceDataType `xml:"urn:com.workday/bsvc Integration_ID_Reference,omitempty"`
	OrganizationIDReference *OrganizationObjectType                 `xml:"urn:com.workday/bsvc Organization_ID_Reference,omitempty"`
}

type OrganizationReferencesRootType struct {
	OrganizationReference []OrganizationReferenceWWSType `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	Version               string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
	AsOfDate              time.Time                      `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
}

func (t *OrganizationReferencesRootType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationReferencesRootType
	var layout struct {
		*T
		AsOfDate *xsdDate `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationReferencesRootType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationReferencesRootType
	var overlay struct {
		*T
		AsOfDate *xsdDate `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	return d.DecodeElement(&overlay, &start)
}

// Set of Organization Reference elements.
type OrganizationReferencesType struct {
	OrganizationReference []OrganizationReferenceWWSType `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	AsOfDate              time.Time                      `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
}

func (t *OrganizationReferencesType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationReferencesType
	var layout struct {
		*T
		AsOfDate *xsdDate `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationReferencesType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationReferencesType
	var overlay struct {
		*T
		AsOfDate *xsdDate `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	return d.DecodeElement(&overlay, &start)
}

// This element contains criteria to filter the Organizations returned.
type OrganizationRequestCriteriaType struct {
	OrganizationTypeReference     []OrganizationTypeObjectType       `xml:"urn:com.workday/bsvc Organization_Type_Reference,omitempty"`
	IncludeInactive               *bool                              `xml:"urn:com.workday/bsvc Include_Inactive,omitempty"`
	TransactionLogCriteria        []TransactionLogCriteriaType       `xml:"urn:com.workday/bsvc Transaction_Log_Criteria,omitempty"`
	FieldAndParameterCriteriaData *FieldAndParameterCriteriaDataType `xml:"urn:com.workday/bsvc Field_And_Parameter_Criteria_Data,omitempty"`
}

// References to specific Organizations to return
type OrganizationRequestReferencesType struct {
	OrganizationReference    []OrganizationObjectType `xml:"urn:com.workday/bsvc Organization_Reference"`
	SkipNonExistingInstances bool                     `xml:"urn:com.workday/bsvc Skip_Non_Existing_Instances,attr,omitempty"`
}

// Response element containing an instance of Organization and its associated data.
type OrganizationResponseDataType struct {
	Organization []OrganizationWWSType `xml:"urn:com.workday/bsvc Organization,omitempty"`
}

// The response group allows for the response data to be tailored to only included elements that the user is looking for.  If no response group is provided in the request, then only the following elements will be returned:  Reference, Organization Data, Hierarchy Data and if a Supervisory Organization Type the Supervisory Data.
type OrganizationResponseGroupType struct {
	IncludeRolesData                *bool `xml:"urn:com.workday/bsvc Include_Roles_Data,omitempty"`
	IncludeHierarchyData            *bool `xml:"urn:com.workday/bsvc Include_Hierarchy_Data,omitempty"`
	IncludeSupervisoryData          *bool `xml:"urn:com.workday/bsvc Include_Supervisory_Data,omitempty"`
	IncludeStaffingRestrictionsData *bool `xml:"urn:com.workday/bsvc Include_Staffing_Restrictions_Data,omitempty"`
}

// Contains information about organization role assignments.
type OrganizationRoleAssignmentWWSDataType struct {
	RoleReference   *AssignableRoleObjectType `xml:"urn:com.workday/bsvc Role_Reference,omitempty"`
	WorkerReference []WorkerObjectType        `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
}

// Contains the organzation role information.
type OrganizationRoleAssignmentforWorkerDataType struct {
	RoleAssignerReference *RoleAssignerObjectType `xml:"urn:com.workday/bsvc Role_Assigner_Reference,omitempty"`
	EffectiveDate         *time.Time              `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	AssignmentFrom        string                  `xml:"urn:com.workday/bsvc Assignment_From,omitempty"`
}

func (t *OrganizationRoleAssignmentforWorkerDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationRoleAssignmentforWorkerDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationRoleAssignmentforWorkerDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationRoleAssignmentforWorkerDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains the organization role and the organizations that the worker supports that role for.
type OrganizationRoleforWorkerDataType struct {
	OrganizationRoleReference *AssignableRoleObjectType                     `xml:"urn:com.workday/bsvc Organization_Role_Reference,omitempty"`
	OrganizationRoleData      []OrganizationRoleAssignmentforWorkerDataType `xml:"urn:com.workday/bsvc Organization_Role_Data,omitempty"`
}

// Contains information about role assignments for an organization.
type OrganizationRolesWWSDataType struct {
	OrganizationRoleData []OrganizationRoleAssignmentWWSDataType `xml:"urn:com.workday/bsvc Organization_Role_Data,omitempty"`
}

// Encapsulating element containing all Organization Structure Dissolve data.
type OrganizationStructureDissolveDataType struct {
	EffectiveDate time.Time `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
}

func (t *OrganizationStructureDissolveDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationStructureDissolveDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationStructureDissolveDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationStructureDissolveDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following elements to Dissolve an existing Organization Structure within the Workday system.
type OrganizationStructureDissolveType struct {
	OrganizationReferenceData         *OrganizationReferenceType             `xml:"urn:com.workday/bsvc Organization_Reference_Data"`
	OrganizationStructureDissolveData *OrganizationStructureDissolveDataType `xml:"urn:com.workday/bsvc Organization_Structure_Dissolve_Data"`
	Version                           string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type OrganizationSubtypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type OrganizationSubtypeObjectType struct {
	ID         []OrganizationSubtypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Organization Subtype.
type OrganizationSubtypeReferenceDataType struct {
	OrganizationSubtypeName string `xml:"urn:com.workday/bsvc Organization_Subtype_Name"`
}

// Contains the details about the organization.
type OrganizationSummaryDataType struct {
	OrganizationReferenceID             string                          `xml:"urn:com.workday/bsvc Organization_Reference_ID,omitempty"`
	OrganizationCode                    string                          `xml:"urn:com.workday/bsvc Organization_Code,omitempty"`
	IntegrationIDData                   []ExternalIntegrationIDDataType `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	OrganizationName                    string                          `xml:"urn:com.workday/bsvc Organization_Name,omitempty"`
	OrganizationTypeReference           *OrganizationTypeObjectType     `xml:"urn:com.workday/bsvc Organization_Type_Reference,omitempty"`
	OrganizationSubtypeReference        *OrganizationSubtypeObjectType  `xml:"urn:com.workday/bsvc Organization_Subtype_Reference,omitempty"`
	PrimaryBusinessSiteReference        *LocationObjectType             `xml:"urn:com.workday/bsvc Primary_Business_Site_Reference,omitempty"`
	OrganizationSupportRoleData         *OrganizationSupportRoleType    `xml:"urn:com.workday/bsvc Organization_Support_Role_Data,omitempty"`
	DateofPayGroupAssignment            *time.Time                      `xml:"urn:com.workday/bsvc Date_of_Pay_Group_Assignment,omitempty"`
	UsedinChangeOrganizationAssignments *bool                           `xml:"urn:com.workday/bsvc Used_in_Change_Organization_Assignments,omitempty"`
}

func (t *OrganizationSummaryDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationSummaryDataType
	var layout struct {
		*T
		DateofPayGroupAssignment *xsdDate `xml:"urn:com.workday/bsvc Date_of_Pay_Group_Assignment,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DateofPayGroupAssignment = (*xsdDate)(layout.T.DateofPayGroupAssignment)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationSummaryDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationSummaryDataType
	var overlay struct {
		*T
		DateofPayGroupAssignment *xsdDate `xml:"urn:com.workday/bsvc Date_of_Pay_Group_Assignment,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DateofPayGroupAssignment = (*xsdDate)(overlay.T.DateofPayGroupAssignment)
	return d.DecodeElement(&overlay, &start)
}

// Contains the organization role refeference and the information about that role.
type OrganizationSupportRoleType struct {
	OrganizationSupportRole []OrganizationSupportingRoleDataType `xml:"urn:com.workday/bsvc Organization_Support_Role,omitempty"`
}

// The organizational roles which provide support for the worker.
type OrganizationSupportingRoleDataType struct {
	OrganizationRoleReference *AssignableRoleObjectType                  `xml:"urn:com.workday/bsvc Organization_Role_Reference,omitempty"`
	OrganizationRoleData      []WorkerOrganizationRoleAssignmentDataType `xml:"urn:com.workday/bsvc Organization_Role_Data,omitempty"`
}

// Response element containing an instance of Organization and its associated data.
type OrganizationType struct {
	OrganizationReference *OrganizationReferenceType `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	OrganizationData      *OrganizationDataType      `xml:"urn:com.workday/bsvc Organization_Data,omitempty"`
	AsOfDate              time.Time                  `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment            time.Time                  `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version               string                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *OrganizationType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type OrganizationTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type OrganizationTypeObjectType struct {
	ID         []OrganizationTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Organization Type.
type OrganizationTypeReferenceDataType struct {
	OrganizationTypeName string `xml:"urn:com.workday/bsvc Organization_Type_Name"`
}

// Reference element representing a unique instance of Organization Visibility.
type OrganizationVisibilityReferenceDataType struct {
	OrganizationVisibilityName string `xml:"urn:com.workday/bsvc Organization_Visibility_Name"`
}

// Contains the detailed information about an Organization.
type OrganizationWWSDataType struct {
	ReferenceID                     string                         `xml:"urn:com.workday/bsvc Reference_ID,omitempty"`
	Name                            string                         `xml:"urn:com.workday/bsvc Name,omitempty"`
	Description                     string                         `xml:"urn:com.workday/bsvc Description,omitempty"`
	OrganizationCode                string                         `xml:"urn:com.workday/bsvc Organization_Code,omitempty"`
	IncludeManagerinName            *bool                          `xml:"urn:com.workday/bsvc Include_Manager_in_Name,omitempty"`
	IncludeOrganizationCodeinName   *bool                          `xml:"urn:com.workday/bsvc Include_Organization_Code_in_Name,omitempty"`
	OrganizationTypeReference       *OrganizationTypeObjectType    `xml:"urn:com.workday/bsvc Organization_Type_Reference,omitempty"`
	OrganizationSubtypeReference    *OrganizationSubtypeObjectType `xml:"urn:com.workday/bsvc Organization_Subtype_Reference,omitempty"`
	AvailibilityDate                *time.Time                     `xml:"urn:com.workday/bsvc Availibility_Date,omitempty"`
	LastUpdatedDateTime             *time.Time                     `xml:"urn:com.workday/bsvc Last_Updated_DateTime,omitempty"`
	Inactive                        *bool                          `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	InactiveDate                    *time.Time                     `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	ManagerReference                *WorkerObjectType              `xml:"urn:com.workday/bsvc Manager_Reference,omitempty"`
	LeadershipReference             []WorkerObjectType             `xml:"urn:com.workday/bsvc Leadership_Reference,omitempty"`
	OrganizationOwnerReference      *OrganizationOwnerObjectType   `xml:"urn:com.workday/bsvc Organization_Owner_Reference,omitempty"`
	OrganizationVisibilityReference *UniqueIdentifierObjectType    `xml:"urn:com.workday/bsvc Organization_Visibility_Reference,omitempty"`
	ExternalURLReference            *ExternalURLObjectType         `xml:"urn:com.workday/bsvc External_URL_Reference,omitempty"`
	ExternalIDsData                 *ExternalIntegrationIDDataType `xml:"urn:com.workday/bsvc External_IDs_Data,omitempty"`
	RolesData                       *OrganizationRolesWWSDataType  `xml:"urn:com.workday/bsvc Roles_Data,omitempty"`
	HierarchyData                   *OrganizationHierarchyDataType `xml:"urn:com.workday/bsvc Hierarchy_Data,omitempty"`
	SupervisoryData                 *SupervisoryOrgDataType        `xml:"urn:com.workday/bsvc Supervisory_Data,omitempty"`
	IntegrationFieldOverrideData    []DocumentFieldResultDataType  `xml:"urn:com.workday/bsvc Integration_Field_Override_Data,omitempty"`
}

func (t *OrganizationWWSDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T OrganizationWWSDataType
	var layout struct {
		*T
		AvailibilityDate    *xsdDateTime `xml:"urn:com.workday/bsvc Availibility_Date,omitempty"`
		LastUpdatedDateTime *xsdDateTime `xml:"urn:com.workday/bsvc Last_Updated_DateTime,omitempty"`
		InactiveDate        *xsdDate     `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AvailibilityDate = (*xsdDateTime)(layout.T.AvailibilityDate)
	layout.LastUpdatedDateTime = (*xsdDateTime)(layout.T.LastUpdatedDateTime)
	layout.InactiveDate = (*xsdDate)(layout.T.InactiveDate)
	return e.EncodeElement(layout, start)
}
func (t *OrganizationWWSDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T OrganizationWWSDataType
	var overlay struct {
		*T
		AvailibilityDate    *xsdDateTime `xml:"urn:com.workday/bsvc Availibility_Date,omitempty"`
		LastUpdatedDateTime *xsdDateTime `xml:"urn:com.workday/bsvc Last_Updated_DateTime,omitempty"`
		InactiveDate        *xsdDate     `xml:"urn:com.workday/bsvc Inactive_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AvailibilityDate = (*xsdDateTime)(overlay.T.AvailibilityDate)
	overlay.LastUpdatedDateTime = (*xsdDateTime)(overlay.T.LastUpdatedDateTime)
	overlay.InactiveDate = (*xsdDate)(overlay.T.InactiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Response element containing an instance of Organization and its associated data.
type OrganizationWWSType struct {
	OrganizationReference *OrganizationObjectType  `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	OrganizationData      *OrganizationWWSDataType `xml:"urn:com.workday/bsvc Organization_Data,omitempty"`
}

// The overall section evaluation information (rating, comments) for the evaluator.
type OverallEvaluationDetailDataType struct {
	RatingReference *ReviewRatingObjectType `xml:"urn:com.workday/bsvc Rating_Reference,omitempty"`
	Comment         string                  `xml:"urn:com.workday/bsvc Comment,omitempty"`
}

// Wrapper for Passport Identifier data.
type PassportIDDataType struct {
	ID                  string                       `xml:"urn:com.workday/bsvc ID,omitempty"`
	IDTypeReference     *PassportIDTypeAllObjectType `xml:"urn:com.workday/bsvc ID_Type_Reference,omitempty"`
	CountryReference    *CountryObjectType           `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	IssuedDate          *time.Time                   `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate      *time.Time                   `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	VerificationDate    *time.Time                   `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	VerifiedByReference *WorkerObjectType            `xml:"urn:com.workday/bsvc Verified_By_Reference,omitempty"`
}

func (t *PassportIDDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PassportIDDataType
	var layout struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.VerificationDate = (*xsdDate)(layout.T.VerificationDate)
	return e.EncodeElement(layout, start)
}
func (t *PassportIDDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PassportIDDataType
	var overlay struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.VerificationDate = (*xsdDate)(overlay.T.VerificationDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element for all Passport Identifier data.
type PassportIDType struct {
	PassportIDReference       *UniqueIdentifierObjectType            `xml:"urn:com.workday/bsvc Passport_ID_Reference,omitempty"`
	PassportIDData            *PassportIDDataType                    `xml:"urn:com.workday/bsvc Passport_ID_Data,omitempty"`
	PassportIDSharedReference *PassportIdentifierReferenceObjectType `xml:"urn:com.workday/bsvc Passport_ID_Shared_Reference,omitempty"`
	Delete                    bool                                   `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PassportIDTypeAllObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PassportIDTypeAllObjectType struct {
	ID         []PassportIDTypeAllObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element for all Passport Identifier data.
type PassportIdentifierDataType struct {
	PassportNumber        string                     `xml:"urn:com.workday/bsvc Passport_Number"`
	PassportTypeReference *PassportTypeReferenceType `xml:"urn:com.workday/bsvc Passport_Type_Reference"`
	CountryReference      *CountryReferenceType      `xml:"urn:com.workday/bsvc Country_Reference"`
	IssuedDate            *time.Time                 `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate        *time.Time                 `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	VerificationDate      *time.Time                 `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
}

func (t *PassportIdentifierDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PassportIdentifierDataType
	var layout struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.VerificationDate = (*xsdDate)(layout.T.VerificationDate)
	return e.EncodeElement(layout, start)
}
func (t *PassportIdentifierDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PassportIdentifierDataType
	var overlay struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.VerificationDate = (*xsdDate)(overlay.T.VerificationDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type PassportIdentifierReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PassportIdentifierReferenceObjectType struct {
	ID         []PassportIdentifierReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Passport ID Type.
type PassportTypeReferenceType struct {
	PassportTypeName string `xml:"urn:com.workday/bsvc Passport_Type_Name"`
}

// Wrapper for Passports and Visas Identification Data. Includes Passport Identifiers and Visa Identifiers
type PassportsandVisasIdentificationDataType struct {
	PassportID []PassportIDType `xml:"urn:com.workday/bsvc Passport_ID,omitempty"`
	VisaID     []VisaIDType     `xml:"urn:com.workday/bsvc Visa_ID,omitempty"`
	ReplaceAll bool             `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Instance data for Schedule Pattern. This schedule pattern may be linked to schedule changes that a manager made. If you update this schedule pattern, you will also be deleting the manager's changes.
type PatternScheduleEventDataType struct {
	WeekNumber            float64                  `xml:"urn:com.workday/bsvc Week_Number"`
	DayoftheWeekReference []DayoftheWeekObjectType `xml:"urn:com.workday/bsvc Day_of_the_Week_Reference"`
	StartTime             *time.Time               `xml:"urn:com.workday/bsvc Start_Time,omitempty"`
	EndTime               *time.Time               `xml:"urn:com.workday/bsvc End_Time,omitempty"`
	N24HourShift          *bool                    `xml:"urn:com.workday/bsvc _24_Hour_Shift,omitempty"`
	MealStart             *time.Time               `xml:"urn:com.workday/bsvc Meal_Start,omitempty"`
	MealEnd               *time.Time               `xml:"urn:com.workday/bsvc Meal_End,omitempty"`
	ID                    string                   `xml:"urn:com.workday/bsvc ID,attr,omitempty"`
}

func (t *PatternScheduleEventDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PatternScheduleEventDataType
	var layout struct {
		*T
		StartTime *xsdTime `xml:"urn:com.workday/bsvc Start_Time,omitempty"`
		EndTime   *xsdTime `xml:"urn:com.workday/bsvc End_Time,omitempty"`
		MealStart *xsdTime `xml:"urn:com.workday/bsvc Meal_Start,omitempty"`
		MealEnd   *xsdTime `xml:"urn:com.workday/bsvc Meal_End,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartTime = (*xsdTime)(layout.T.StartTime)
	layout.EndTime = (*xsdTime)(layout.T.EndTime)
	layout.MealStart = (*xsdTime)(layout.T.MealStart)
	layout.MealEnd = (*xsdTime)(layout.T.MealEnd)
	return e.EncodeElement(layout, start)
}
func (t *PatternScheduleEventDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PatternScheduleEventDataType
	var overlay struct {
		*T
		StartTime *xsdTime `xml:"urn:com.workday/bsvc Start_Time,omitempty"`
		EndTime   *xsdTime `xml:"urn:com.workday/bsvc End_Time,omitempty"`
		MealStart *xsdTime `xml:"urn:com.workday/bsvc Meal_Start,omitempty"`
		MealEnd   *xsdTime `xml:"urn:com.workday/bsvc Meal_End,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartTime = (*xsdTime)(overlay.T.StartTime)
	overlay.EndTime = (*xsdTime)(overlay.T.EndTime)
	overlay.MealStart = (*xsdTime)(overlay.T.MealStart)
	overlay.MealEnd = (*xsdTime)(overlay.T.MealEnd)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type PayComponentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PayComponentObjectType struct {
	ID         []PayComponentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// This element reports Pay Group Assignment rescind events.
type PayGroupAssignmentCorrectorRescindedOrganizationDataType struct {
	EffectiveDate             *time.Time          `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	CompletedOn               *time.Time          `xml:"urn:com.workday/bsvc Completed_On,omitempty"`
	EventCorrected            *bool               `xml:"urn:com.workday/bsvc Event_Corrected,omitempty"`
	EventRescinded            *bool               `xml:"urn:com.workday/bsvc Event_Rescinded,omitempty"`
	OriginalPayGroupReference *PayGroupObjectType `xml:"urn:com.workday/bsvc Original_Pay_Group_Reference,omitempty"`
	ProposedPayGroupReference *PayGroupObjectType `xml:"urn:com.workday/bsvc Proposed_Pay_Group_Reference,omitempty"`
}

func (t *PayGroupAssignmentCorrectorRescindedOrganizationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PayGroupAssignmentCorrectorRescindedOrganizationDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
		CompletedOn   *xsdDateTime `xml:"urn:com.workday/bsvc Completed_On,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	layout.CompletedOn = (*xsdDateTime)(layout.T.CompletedOn)
	return e.EncodeElement(layout, start)
}
func (t *PayGroupAssignmentCorrectorRescindedOrganizationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PayGroupAssignmentCorrectorRescindedOrganizationDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
		CompletedOn   *xsdDateTime `xml:"urn:com.workday/bsvc Completed_On,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	overlay.CompletedOn = (*xsdDateTime)(overlay.T.CompletedOn)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type PayGroupObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PayGroupObjectType struct {
	ID         []PayGroupObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PayRateTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PayRateTypeObjectType struct {
	ID         []PayRateTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Pay Rate Type.
type PayRateTypeReferenceType struct {
	PayTypeName string `xml:"urn:com.workday/bsvc Pay_Type_Name,omitempty"`
}

// Contains the payroll interface contribution amount for the retirement savings election.
type PayrollInterfaceContributionAmountDataType struct {
	ContributionAmount float64              `xml:"urn:com.workday/bsvc Contribution_Amount"`
	FrequencyReference *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference"`
}

// Contains the payroll interface contribution information for the spending account election.
type PayrollInterfaceContributionDataType struct {
	ContributionAmount float64              `xml:"urn:com.workday/bsvc Contribution_Amount,omitempty"`
	FrequencyReference *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
}

// Encapsulating element containg all Payroll Interface Processing data.
type PayrollInterfaceProcessingDataType struct {
	PayRateTypeReference   *PayRateTypeReferenceType            `xml:"urn:com.workday/bsvc Pay_Rate_Type_Reference,omitempty"`
	FrequencyReference     *FrequencyReferenceDataType          `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	PayGroupReference      *ExternalPayGroupReferenceType       `xml:"urn:com.workday/bsvc Pay_Group_Reference,omitempty"`
	PayrollEntityReference []ExternalPayrollEntityReferenceType `xml:"urn:com.workday/bsvc Payroll_Entity_Reference,omitempty"`
	EffectiveDate          time.Time                            `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
}

func (t *PayrollInterfaceProcessingDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PayrollInterfaceProcessingDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *PayrollInterfaceProcessingDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PayrollInterfaceProcessingDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type PayrollReportingCodeAllObjectIDType struct {
	Value      string `xml:",chardata"`
	Type       string `xml:"urn:com.workday/bsvc type,attr"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
}

type PayrollReportingCodeAllObjectType struct {
	ID         []PayrollReportingCodeAllObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PayrollReportingTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PayrollReportingTypeObjectType struct {
	ID         []PayrollReportingTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the latest completed performance improvement plan for the employee.
type PerformanceImprovementPlanDataType struct {
	PerformanceImprovementPlanReference *PerformanceImprovementPlanObjectType `xml:"urn:com.workday/bsvc Performance_Improvement_Plan_Reference,omitempty"`
	ReviewData                          *EmployeeReviewDetailsDataType        `xml:"urn:com.workday/bsvc Review_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PerformanceImprovementPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PerformanceImprovementPlanObjectType struct {
	ID         []PerformanceImprovementPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the latest completed performance review for the employee.
type PerformanceReviewDataType struct {
	PerformanceReviewReference *PerformanceReviewObjectType   `xml:"urn:com.workday/bsvc Performance_Review_Reference,omitempty"`
	ReviewData                 *EmployeeReviewDetailsDataType `xml:"urn:com.workday/bsvc Review_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PerformanceReviewObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PerformanceReviewObjectType struct {
	ID         []PerformanceReviewObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Form to put, update, and view a Period Reporting Calendar
type PeriodReportingCalendarDataType struct {
	ID                             string                               `xml:"urn:com.workday/bsvc ID,omitempty"`
	ReportingCalendarName          string                               `xml:"urn:com.workday/bsvc Reporting_Calendar_Name"`
	AcademicUnitReference          []AcademicUnitObjectType             `xml:"urn:com.workday/bsvc Academic_Unit_Reference,omitempty"`
	DefaultCalendar                *bool                                `xml:"urn:com.workday/bsvc Default_Calendar,omitempty"`
	Inactive                       *bool                                `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	PeriodReportingCalendarRowData []PeriodReportingCalendarRowDataType `xml:"urn:com.workday/bsvc Period_Reporting_Calendar_Row_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PeriodReportingCalendarObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PeriodReportingCalendarObjectType struct {
	ID         []PeriodReportingCalendarObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request Criteria of the Period Reporting Calendar
type PeriodReportingCalendarRequestCriteriaType struct {
}

// Request References Element for Get Period Reporting Calendars Web Service
type PeriodReportingCalendarRequestReferencesType struct {
	PeriodReportingCalendarReference []PeriodReportingCalendarObjectType `xml:"urn:com.workday/bsvc Period_Reporting_Calendar_Reference"`
}

// Response element for Get Period Reporting Calendars Web Service
type PeriodReportingCalendarResponseDataType struct {
	PeriodReportingCalendar []PeriodReportingCalendarType `xml:"urn:com.workday/bsvc Period_Reporting_Calendar,omitempty"`
}

// Response Group of the Period Reporting Calendar Web Service
type PeriodReportingCalendarResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Period Reporting Row Data
type PeriodReportingCalendarRowDataType struct {
	Order                         string                          `xml:"urn:com.workday/bsvc Order"`
	ID                            string                          `xml:"urn:com.workday/bsvc ID,omitempty"`
	CalendarPeriodName            string                          `xml:"urn:com.workday/bsvc Calendar_Period_Name"`
	AcademicPeriodReference       *AcademicPeriodObjectType       `xml:"urn:com.workday/bsvc Academic_Period_Reference,omitempty"`
	StartDate                     time.Time                       `xml:"urn:com.workday/bsvc Start_Date"`
	EndDate                       time.Time                       `xml:"urn:com.workday/bsvc End_Date"`
	EvaluationConstraintReference *EvaluationConstraintObjectType `xml:"urn:com.workday/bsvc Evaluation_Constraint_Reference"`
	Delete                        bool                            `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
	AddOnly                       bool                            `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
}

func (t *PeriodReportingCalendarRowDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PeriodReportingCalendarRowDataType
	var layout struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(&layout.T.StartDate)
	layout.EndDate = (*xsdDate)(&layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *PeriodReportingCalendarRowDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PeriodReportingCalendarRowDataType
	var overlay struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(&overlay.T.StartDate)
	overlay.EndDate = (*xsdDate)(&overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper Element for Responding with Reporting Calendar Data
type PeriodReportingCalendarType struct {
	PeriodReportingCalendarReference *PeriodReportingCalendarObjectType `xml:"urn:com.workday/bsvc Period_Reporting_Calendar_Reference,omitempty"`
	PeriodReportingCalendarData      []PeriodReportingCalendarDataType  `xml:"urn:com.workday/bsvc Period_Reporting_Calendar_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PeriodSalaryPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PeriodSalaryPlanObjectType struct {
	ID         []PeriodSalaryPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// This element contains all provisioning group assignments for a person.
type PersonAccountProvisioningDataType struct {
	ProvisioningGroupAssignmentData []ProvisioningGroupAssignmentforPersonDataType `xml:"urn:com.workday/bsvc Provisioning_Group_Assignment_Data,omitempty"`
}

// Encapsulating element for updating a single address.
type PersonAddressDataType struct {
	AddressData            []AddressCoreDataType                         `xml:"urn:com.workday/bsvc Address_Data,omitempty"`
	UsageData              []CommunicationMethodUsageInformationDataType `xml:"urn:com.workday/bsvc Usage_Data,omitempty"`
	NumberofDays           float64                                       `xml:"urn:com.workday/bsvc Number_of_Days,omitempty"`
	DaysoftheWeekReference []DayoftheWeekObjectType                      `xml:"urn:com.workday/bsvc Days_of_the_Week_Reference,omitempty"`
	AddressReference       *AddressReferenceObjectType                   `xml:"urn:com.workday/bsvc Address_Reference,omitempty"`
	AddressID              string                                        `xml:"urn:com.workday/bsvc Address_ID,omitempty"`
	AddressFormatType      string                                        `xml:"urn:com.workday/bsvc Address_Format_Type,attr,omitempty"`
	Delete                 bool                                          `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
	EffectiveDate          time.Time                                     `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
}

func (t *PersonAddressDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PersonAddressDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *PersonAddressDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PersonAddressDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element that tracks all addresses.
type PersonAddressInformationDataType struct {
	AddressInformationData []PersonAddressDataType `xml:"urn:com.workday/bsvc Address_Information_Data,omitempty"`
	ReplaceAll             bool                    `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Encapsulating element for tracking a person's contact information.
type PersonContactInformationDataType struct {
	PersonAddressInformationData          *PersonAddressInformationDataType          `xml:"urn:com.workday/bsvc Person_Address_Information_Data,omitempty"`
	PersonPhoneInformationData            *PersonPhoneInformationDataType            `xml:"urn:com.workday/bsvc Person_Phone_Information_Data,omitempty"`
	PersonEmailInformationData            *PersonEmailInformationDataType            `xml:"urn:com.workday/bsvc Person_Email_Information_Data,omitempty"`
	PersonInstantMessengerInformationData *PersonInstantMessengerInformationDataType `xml:"urn:com.workday/bsvc Person_Instant_Messenger_Information_Data,omitempty"`
	PersonWebAddressInformationData       *PersonWebAddressInformationDataType       `xml:"urn:com.workday/bsvc Person_Web_Address_Information_Data,omitempty"`
}

// All of the personal data. This includes name, contact information (Email, Phone, Address, Web, Instant Messenger), Visa and ID information, Biographic, Demographic, and Background Check Information.
type PersonDataType struct {
	NameData                []NameDataType                 `xml:"urn:com.workday/bsvc Name_Data,omitempty"`
	ContactData             *ContactDataType               `xml:"urn:com.workday/bsvc Contact_Data,omitempty"`
	DemographicData         *DemographicDataType           `xml:"urn:com.workday/bsvc Demographic_Data,omitempty"`
	BiographicData          *BiographicDataType            `xml:"urn:com.workday/bsvc Biographic_Data,omitempty"`
	VisaIDData              []VisaIdentifierDataType       `xml:"urn:com.workday/bsvc Visa_ID_Data,omitempty"`
	CustomIDData            []CustomIdentifierDataType     `xml:"urn:com.workday/bsvc Custom_ID_Data,omitempty"`
	GovernmentIDData        []GovernmentIdentifierDataType `xml:"urn:com.workday/bsvc Government_ID_Data,omitempty"`
	LicenseIDData           []LicenseIdentifierDataType    `xml:"urn:com.workday/bsvc License_ID_Data,omitempty"`
	PassportIDData          []PassportIdentifierDataType   `xml:"urn:com.workday/bsvc Passport_ID_Data,omitempty"`
	PersonalPreferencesData *PersonalPreferencesDataType   `xml:"urn:com.workday/bsvc Personal_Preferences_Data,omitempty"`
}

// Wrapper element for the disability status information for the person.
type PersonDisabilityStatusDataType struct {
	DisabilityReference                       *DisabilityObjectType                       `xml:"urn:com.workday/bsvc Disability_Reference"`
	DisabilityStatusDate                      *time.Time                                  `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
	DisabilityDateKnown                       *time.Time                                  `xml:"urn:com.workday/bsvc Disability_Date_Known,omitempty"`
	DisabilityEndDate                         *time.Time                                  `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
	DisabilityGradeReference                  *DisabilityGradeObjectType                  `xml:"urn:com.workday/bsvc Disability_Grade_Reference,omitempty"`
	DisabilityDegree                          float64                                     `xml:"urn:com.workday/bsvc Disability_Degree,omitempty"`
	DisabilityRemainingCapacity               float64                                     `xml:"urn:com.workday/bsvc Disability_Remaining_Capacity,omitempty"`
	DisabilityCertificationAuthorityReference *DisabilityCertificationAuthorityObjectType `xml:"urn:com.workday/bsvc Disability_Certification_Authority_Reference,omitempty"`
	DisabilityCertificationAuthority          string                                      `xml:"urn:com.workday/bsvc Disability_Certification_Authority,omitempty"`
	DisabilityCertifiedAt                     string                                      `xml:"urn:com.workday/bsvc Disability_Certified_At,omitempty"`
	DisabilityCertificationID                 string                                      `xml:"urn:com.workday/bsvc Disability_Certification_ID,omitempty"`
	DisabilityCertificationBasisReference     *DisabilityCertificationBasisObjectType     `xml:"urn:com.workday/bsvc Disability_Certification_Basis_Reference,omitempty"`
	DisabilitySeverityRecognitionDate         *time.Time                                  `xml:"urn:com.workday/bsvc Disability_Severity_Recognition_Date,omitempty"`
	DisabilityFTETowardQuota                  float64                                     `xml:"urn:com.workday/bsvc Disability_FTE_Toward_Quota,omitempty"`
	DisabilityWorkRestrictions                string                                      `xml:"urn:com.workday/bsvc Disability_Work_Restrictions,omitempty"`
	DisabilityAccommodationsRequested         string                                      `xml:"urn:com.workday/bsvc Disability_Accommodations_Requested,omitempty"`
	DisabilityAccommodationsProvided          string                                      `xml:"urn:com.workday/bsvc Disability_Accommodations_Provided,omitempty"`
	DisabilityRehabilitationRequested         string                                      `xml:"urn:com.workday/bsvc Disability_Rehabilitation_Requested,omitempty"`
	DisabilityRehabilitationProvided          string                                      `xml:"urn:com.workday/bsvc Disability_Rehabilitation_Provided,omitempty"`
	Note                                      string                                      `xml:"urn:com.workday/bsvc Note,omitempty"`
	WorkerDocumentReference                   []WorkerDocumentObjectType                  `xml:"urn:com.workday/bsvc Worker_Document_Reference,omitempty"`
	DisabilityStatusReference                 *DisabilityStatusReferenceObjectType        `xml:"urn:com.workday/bsvc Disability_Status_Reference,omitempty"`
}

func (t *PersonDisabilityStatusDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PersonDisabilityStatusDataType
	var layout struct {
		*T
		DisabilityStatusDate              *xsdDate `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
		DisabilityDateKnown               *xsdDate `xml:"urn:com.workday/bsvc Disability_Date_Known,omitempty"`
		DisabilityEndDate                 *xsdDate `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
		DisabilitySeverityRecognitionDate *xsdDate `xml:"urn:com.workday/bsvc Disability_Severity_Recognition_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DisabilityStatusDate = (*xsdDate)(layout.T.DisabilityStatusDate)
	layout.DisabilityDateKnown = (*xsdDate)(layout.T.DisabilityDateKnown)
	layout.DisabilityEndDate = (*xsdDate)(layout.T.DisabilityEndDate)
	layout.DisabilitySeverityRecognitionDate = (*xsdDate)(layout.T.DisabilitySeverityRecognitionDate)
	return e.EncodeElement(layout, start)
}
func (t *PersonDisabilityStatusDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PersonDisabilityStatusDataType
	var overlay struct {
		*T
		DisabilityStatusDate              *xsdDate `xml:"urn:com.workday/bsvc Disability_Status_Date,omitempty"`
		DisabilityDateKnown               *xsdDate `xml:"urn:com.workday/bsvc Disability_Date_Known,omitempty"`
		DisabilityEndDate                 *xsdDate `xml:"urn:com.workday/bsvc Disability_End_Date,omitempty"`
		DisabilitySeverityRecognitionDate *xsdDate `xml:"urn:com.workday/bsvc Disability_Severity_Recognition_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DisabilityStatusDate = (*xsdDate)(overlay.T.DisabilityStatusDate)
	overlay.DisabilityDateKnown = (*xsdDate)(overlay.T.DisabilityDateKnown)
	overlay.DisabilityEndDate = (*xsdDate)(overlay.T.DisabilityEndDate)
	overlay.DisabilitySeverityRecognitionDate = (*xsdDate)(overlay.T.DisabilitySeverityRecognitionDate)
	return d.DecodeElement(&overlay, &start)
}

// A email address instance.
type PersonEmailDataType struct {
	EmailData      []EmailCoreDataType                           `xml:"urn:com.workday/bsvc Email_Data,omitempty"`
	UsageData      []CommunicationMethodUsageInformationDataType `xml:"urn:com.workday/bsvc Usage_Data,omitempty"`
	EmailReference *EmailReferenceObjectType                     `xml:"urn:com.workday/bsvc Email_Reference,omitempty"`
	EmailID        string                                        `xml:"urn:com.workday/bsvc Email_ID,omitempty"`
	Delete         bool                                          `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Encapsulating element that tracks all emails.
type PersonEmailInformationDataType struct {
	EmailInformationData []PersonEmailDataType `xml:"urn:com.workday/bsvc Email_Information_Data,omitempty"`
	ReplaceAll           bool                  `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Wrapper for Person Identification Data. Includes National Identifiers, Government Identifiers, Visa Identifiers, Passport Identifiers, License Identifiers and Custom Identifiers.
type PersonIdentificationDataType struct {
	NationalID   []NationalIDType   `xml:"urn:com.workday/bsvc National_ID,omitempty"`
	GovernmentID []GovernmentIDType `xml:"urn:com.workday/bsvc Government_ID,omitempty"`
	VisaID       []VisaIDType       `xml:"urn:com.workday/bsvc Visa_ID,omitempty"`
	PassportID   []PassportIDType   `xml:"urn:com.workday/bsvc Passport_ID,omitempty"`
	LicenseID    []LicenseIDType    `xml:"urn:com.workday/bsvc License_ID,omitempty"`
	CustomID     []CustomIDType     `xml:"urn:com.workday/bsvc Custom_ID,omitempty"`
}

// An instant messenger instance
type PersonInstantMessengerDataType struct {
	InstantMessengerData      *InstantMessengerCoreDataType                `xml:"urn:com.workday/bsvc Instant_Messenger_Data,omitempty"`
	UsageData                 *CommunicationMethodUsageInformationDataType `xml:"urn:com.workday/bsvc Usage_Data,omitempty"`
	InstantMessengerReference *InstantMessengerReferenceObjectType         `xml:"urn:com.workday/bsvc Instant_Messenger_Reference,omitempty"`
	InstantMessengerID        string                                       `xml:"urn:com.workday/bsvc Instant_Messenger_ID,omitempty"`
	Delete                    bool                                         `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Encapsulating element for an instant messenger instance.
type PersonInstantMessengerInformationDataType struct {
	PersonInstantMessengerData []PersonInstantMessengerDataType `xml:"urn:com.workday/bsvc Person_Instant_Messenger_Data,omitempty"`
	ReplaceAll                 bool                             `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Wrapper element for the military service information for the person.
type PersonMilitaryServiceDataType struct {
	StatusReference              *MilitaryStatusObjectType           `xml:"urn:com.workday/bsvc Status_Reference"`
	DischargeDate                *time.Time                          `xml:"urn:com.workday/bsvc Discharge_Date,omitempty"`
	StatusBeginDate              *time.Time                          `xml:"urn:com.workday/bsvc Status_Begin_Date,omitempty"`
	MilitaryServiceTypeReference *MilitaryServiceTypeObjectType      `xml:"urn:com.workday/bsvc Military_Service_Type_Reference,omitempty"`
	MilitaryRankReference        *MilitaryRankObjectType             `xml:"urn:com.workday/bsvc Military_Rank_Reference,omitempty"`
	Notes                        string                              `xml:"urn:com.workday/bsvc Notes,omitempty"`
	MilitaryServiceReference     *MilitaryServiceReferenceObjectType `xml:"urn:com.workday/bsvc Military_Service_Reference,omitempty"`
}

func (t *PersonMilitaryServiceDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PersonMilitaryServiceDataType
	var layout struct {
		*T
		DischargeDate   *xsdDate `xml:"urn:com.workday/bsvc Discharge_Date,omitempty"`
		StatusBeginDate *xsdDate `xml:"urn:com.workday/bsvc Status_Begin_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DischargeDate = (*xsdDate)(layout.T.DischargeDate)
	layout.StatusBeginDate = (*xsdDate)(layout.T.StatusBeginDate)
	return e.EncodeElement(layout, start)
}
func (t *PersonMilitaryServiceDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PersonMilitaryServiceDataType
	var overlay struct {
		*T
		DischargeDate   *xsdDate `xml:"urn:com.workday/bsvc Discharge_Date,omitempty"`
		StatusBeginDate *xsdDate `xml:"urn:com.workday/bsvc Status_Begin_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DischargeDate = (*xsdDate)(overlay.T.DischargeDate)
	overlay.StatusBeginDate = (*xsdDate)(overlay.T.StatusBeginDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains the legal, preferred, and additional names for a person.
type PersonNameDataType struct {
	LegalNameData      *LegalNameDataType       `xml:"urn:com.workday/bsvc Legal_Name_Data,omitempty"`
	PreferredNameData  *PreferredNameDataType   `xml:"urn:com.workday/bsvc Preferred_Name_Data,omitempty"`
	AdditionalNameData []AdditionalNameDataType `xml:"urn:com.workday/bsvc Additional_Name_Data,omitempty"`
}

// Contains the components of a name, such as the First Name and Last Name.
type PersonNameDetailDataType struct {
	CountryReference                *CountryObjectType             `xml:"urn:com.workday/bsvc Country_Reference"`
	PrefixData                      *PersonNamePrefixDataType      `xml:"urn:com.workday/bsvc Prefix_Data,omitempty"`
	FirstName                       string                         `xml:"urn:com.workday/bsvc First_Name,omitempty"`
	MiddleName                      string                         `xml:"urn:com.workday/bsvc Middle_Name,omitempty"`
	LastName                        string                         `xml:"urn:com.workday/bsvc Last_Name,omitempty"`
	SecondaryLastName               string                         `xml:"urn:com.workday/bsvc Secondary_Last_Name,omitempty"`
	TertiaryLastName                string                         `xml:"urn:com.workday/bsvc Tertiary_Last_Name,omitempty"`
	LocalNameDetailData             *LocalPersonNameDetailDataType `xml:"urn:com.workday/bsvc Local_Name_Detail_Data,omitempty"`
	SuffixData                      *PersonNameSuffixDataType      `xml:"urn:com.workday/bsvc Suffix_Data,omitempty"`
	FullNameforSingaporeandMalaysia string                         `xml:"urn:com.workday/bsvc Full_Name_for_Singapore_and_Malaysia,omitempty"`
	FormattedName                   string                         `xml:"urn:com.workday/bsvc Formatted_Name,attr,omitempty"`
	ReportingName                   string                         `xml:"urn:com.workday/bsvc Reporting_Name,attr,omitempty"`
}

// Contains the prefixes for a name.
type PersonNamePrefixDataType struct {
	TitleReference      *CountryPredefinedPersonNameComponentValueObjectType `xml:"urn:com.workday/bsvc Title_Reference,omitempty"`
	TitleDescriptor     string                                               `xml:"urn:com.workday/bsvc Title_Descriptor,omitempty"`
	SalutationReference *CountryPredefinedPersonNameComponentValueObjectType `xml:"urn:com.workday/bsvc Salutation_Reference,omitempty"`
}

// Contains the suffixes for a name.
type PersonNameSuffixDataType struct {
	SocialSuffixReference       *CountryPredefinedPersonNameComponentValueObjectType `xml:"urn:com.workday/bsvc Social_Suffix_Reference,omitempty"`
	SocialSuffixDescriptor      string                                               `xml:"urn:com.workday/bsvc Social_Suffix_Descriptor,omitempty"`
	AcademicSuffixReference     *CountryPredefinedPersonNameComponentValueObjectType `xml:"urn:com.workday/bsvc Academic_Suffix_Reference,omitempty"`
	HereditarySuffixReference   *CountryPredefinedPersonNameComponentValueObjectType `xml:"urn:com.workday/bsvc Hereditary_Suffix_Reference,omitempty"`
	HonorarySuffixReference     *CountryPredefinedPersonNameComponentValueObjectType `xml:"urn:com.workday/bsvc Honorary_Suffix_Reference,omitempty"`
	ProfessionalSuffixReference *CountryPredefinedPersonNameComponentValueObjectType `xml:"urn:com.workday/bsvc Professional_Suffix_Reference,omitempty"`
	ReligiousSuffixReference    *CountryPredefinedPersonNameComponentValueObjectType `xml:"urn:com.workday/bsvc Religious_Suffix_Reference,omitempty"`
	RoyalSuffixReference        *CountryPredefinedPersonNameComponentValueObjectType `xml:"urn:com.workday/bsvc Royal_Suffix_Reference,omitempty"`
}

// A phone instance.
type PersonPhoneDataType struct {
	PhoneData      []PhoneCoreDataType                           `xml:"urn:com.workday/bsvc Phone_Data,omitempty"`
	UsageData      []CommunicationMethodUsageInformationDataType `xml:"urn:com.workday/bsvc Usage_Data,omitempty"`
	PhoneReference *PhoneReferenceObjectType                     `xml:"urn:com.workday/bsvc Phone_Reference,omitempty"`
	PhoneID        string                                        `xml:"urn:com.workday/bsvc Phone_ID,omitempty"`
	Delete         bool                                          `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Encapsulating element that tracks all phones.
type PersonPhoneInformationDataType struct {
	PhoneInformationData []PersonPhoneDataType `xml:"urn:com.workday/bsvc Phone_Information_Data,omitempty"`
	ReplaceAll           bool                  `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Person's Photo Information
type PersonPhotoDataType struct {
	Filename string `xml:"urn:com.workday/bsvc Filename,omitempty"`
	File     []byte `xml:"urn:com.workday/bsvc File"`
}

func (t *PersonPhotoDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PersonPhotoDataType
	var layout struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File"`
	}
	layout.T = (*T)(t)
	layout.File = (*xsdBase64Binary)(&layout.T.File)
	return e.EncodeElement(layout, start)
}
func (t *PersonPhotoDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PersonPhotoDataType
	var overlay struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File"`
	}
	overlay.T = (*T)(t)
	overlay.File = (*xsdBase64Binary)(&overlay.T.File)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the Request Criteria element to retrieve a specific instance or instances of Person and their associated photo.
type PersonPhotoRequestCriteriaType struct {
	PersonReference      []RoleObjectType                `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIDReference []UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
}

// Element containing the person data for the Get Person Photos response.
type PersonPhotoResponseDataType struct {
	PersonPhoto []PersonPhotoType `xml:"urn:com.workday/bsvc Person_Photo,omitempty"`
}

// Wrapper element for the Submit Person Photo Data element.
type PersonPhotoType struct {
	PersonReference *RoleObjectType            `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	PersonPhotoData *ChangePersonPhotoDataType `xml:"urn:com.workday/bsvc Person_Photo_Data,omitempty"`
}

// Contains the worker's skills and experience.
//
// Security Note: This element is secured to the following domains:  Self Service: Skills and Experience; Worker: Skills and Experience
type PersonQualificationDataType struct {
	ExternalJobHistory        []JobHistoryType                   `xml:"urn:com.workday/bsvc External_Job_History,omitempty"`
	Competency                []CompetencyAchievementDatav10Type `xml:"urn:com.workday/bsvc Competency,omitempty"`
	Certification             []CertificationAchievementType     `xml:"urn:com.workday/bsvc Certification,omitempty"`
	Training                  []TrainingType                     `xml:"urn:com.workday/bsvc Training,omitempty"`
	AwardandActivity          []AwardandActivityType             `xml:"urn:com.workday/bsvc Award_and_Activity,omitempty"`
	OrganizationMembership    []ProfessionalAffiliationSkillType `xml:"urn:com.workday/bsvc Organization_Membership,omitempty"`
	Education                 []EducationType                    `xml:"urn:com.workday/bsvc Education,omitempty"`
	WorkExperience            []WorkExperienceDataType           `xml:"urn:com.workday/bsvc Work_Experience,omitempty"`
	Language                  []LanguageAchievementDataType      `xml:"urn:com.workday/bsvc Language,omitempty"`
	InternalProjectExperience []InternalProjectExperienceType    `xml:"urn:com.workday/bsvc Internal_Project_Experience,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PersonSkillSourceCategoryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PersonSkillSourceCategoryObjectType struct {
	ID         []PersonSkillSourceCategoryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Provides selection for filtering the response
type PersonTypeCriteriaType struct {
	IncludeAcademicAffiliates       *bool `xml:"urn:com.workday/bsvc Include_Academic_Affiliates,omitempty"`
	IncludeExternalCommitteeMembers *bool `xml:"urn:com.workday/bsvc Include_External_Committee_Members,omitempty"`
	IncludeExternalStudentRecords   *bool `xml:"urn:com.workday/bsvc Include_External_Student_Records,omitempty"`
	IncludeStudentProspectRecords   *bool `xml:"urn:com.workday/bsvc Include_Student_Prospect_Records,omitempty"`
	IncludeStudentRecords           *bool `xml:"urn:com.workday/bsvc Include_Student_Records,omitempty"`
	IncludeWorkers                  *bool `xml:"urn:com.workday/bsvc Include_Workers,omitempty"`
}

// A web address instance.
type PersonWebAddressDataType struct {
	WebAddressData      *WebAddressCoreDataType                      `xml:"urn:com.workday/bsvc Web_Address_Data,omitempty"`
	UsageData           *CommunicationMethodUsageInformationDataType `xml:"urn:com.workday/bsvc Usage_Data,omitempty"`
	WebAddressReference *WebAddressReferenceObjectType               `xml:"urn:com.workday/bsvc Web_Address_Reference,omitempty"`
	WebAddressID        string                                       `xml:"urn:com.workday/bsvc Web_Address_ID,omitempty"`
	Delete              bool                                         `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Encapsulating element that tracks all web addresses.
type PersonWebAddressInformationDataType struct {
	PersonWebAddressData []PersonWebAddressDataType `xml:"urn:com.workday/bsvc Person_Web_Address_Data,omitempty"`
	ReplaceAll           bool                       `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Encapsulating element containing all Personal Information for a Person.
type PersonalInfoDataType struct {
	BusinessTitle     string                 `xml:"urn:com.workday/bsvc Business_Title,omitempty"`
	PersonData        *PersonDataType        `xml:"urn:com.workday/bsvc Person_Data,omitempty"`
	QualificationData *QualificationDataType `xml:"urn:com.workday/bsvc Qualification_Data,omitempty"`
}

// Wrapper element for Personal Data.
type PersonalInformationDataType struct {
	UniversalID                     string                            `xml:"urn:com.workday/bsvc Universal_ID,omitempty"`
	NameData                        *PersonNameDataType               `xml:"urn:com.workday/bsvc Name_Data,omitempty"`
	GenderReference                 *GenderObjectType                 `xml:"urn:com.workday/bsvc Gender_Reference,omitempty"`
	BirthDate                       *time.Time                        `xml:"urn:com.workday/bsvc Birth_Date,omitempty"`
	DateofDeath                     *time.Time                        `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
	CountryofBirthReference         *CountryObjectType                `xml:"urn:com.workday/bsvc Country_of_Birth_Reference,omitempty"`
	RegionofBirthReference          *CountryRegionObjectType          `xml:"urn:com.workday/bsvc Region_of_Birth_Reference,omitempty"`
	RegionofBirthDescriptor         string                            `xml:"urn:com.workday/bsvc Region_of_Birth_Descriptor,omitempty"`
	CityofBirth                     string                            `xml:"urn:com.workday/bsvc City_of_Birth,omitempty"`
	CityofBirthReference            *CountryCityObjectType            `xml:"urn:com.workday/bsvc City_of_Birth_Reference,omitempty"`
	MaritalStatusReference          *MaritalStatusObjectType          `xml:"urn:com.workday/bsvc Marital_Status_Reference,omitempty"`
	MaritalStatusDate               *time.Time                        `xml:"urn:com.workday/bsvc Marital_Status_Date,omitempty"`
	ReligionReference               *ReligionObjectType               `xml:"urn:com.workday/bsvc Religion_Reference,omitempty"`
	DisabilityStatusData            []PersonDisabilityStatusDataType  `xml:"urn:com.workday/bsvc Disability_Status_Data,omitempty"`
	EthnicityReference              []EthnicityObjectType             `xml:"urn:com.workday/bsvc Ethnicity_Reference,omitempty"`
	HispanicorLatino                *bool                             `xml:"urn:com.workday/bsvc Hispanic_or_Latino,omitempty"`
	CitizenshipStatusReference      []CitizenshipStatusObjectType     `xml:"urn:com.workday/bsvc Citizenship_Status_Reference,omitempty"`
	PrimaryNationalityReference     *CountryObjectType                `xml:"urn:com.workday/bsvc Primary_Nationality_Reference,omitempty"`
	AdditionalNationalityReference  []CountryObjectType               `xml:"urn:com.workday/bsvc Additional_Nationality_Reference,omitempty"`
	HukouRegionReference            *CountryRegionObjectType          `xml:"urn:com.workday/bsvc Hukou_Region_Reference,omitempty"`
	HukouSubregionReference         *CountrySubregionObjectType       `xml:"urn:com.workday/bsvc Hukou_Subregion_Reference,omitempty"`
	HukouLocality                   string                            `xml:"urn:com.workday/bsvc Hukou_Locality,omitempty"`
	HukouPostalCode                 string                            `xml:"urn:com.workday/bsvc Hukou_Postal_Code,omitempty"`
	HukouTypeReference              *HukouTypeObjectType              `xml:"urn:com.workday/bsvc Hukou_Type_Reference,omitempty"`
	LocalHukou                      *bool                             `xml:"urn:com.workday/bsvc Local_Hukou,omitempty"`
	NativeRegionReference           *CountryRegionObjectType          `xml:"urn:com.workday/bsvc Native_Region_Reference,omitempty"`
	NativeRegionDescriptor          string                            `xml:"urn:com.workday/bsvc Native_Region_Descriptor,omitempty"`
	PersonnelFileAgencyforPerson    string                            `xml:"urn:com.workday/bsvc Personnel_File_Agency_for_Person,omitempty"`
	LastMedicalExamDate             *time.Time                        `xml:"urn:com.workday/bsvc Last_Medical_Exam_Date,omitempty"`
	LastMedicalExamValidTo          *time.Time                        `xml:"urn:com.workday/bsvc Last_Medical_Exam_Valid_To,omitempty"`
	MedicalExamNotes                string                            `xml:"urn:com.workday/bsvc Medical_Exam_Notes,omitempty"`
	BloodTypeReference              *BloodTypeObjectType              `xml:"urn:com.workday/bsvc Blood_Type_Reference,omitempty"`
	MilitaryServiceData             []PersonMilitaryServiceDataType   `xml:"urn:com.workday/bsvc Military_Service_Data,omitempty"`
	IdentificationData              *PersonIdentificationDataType     `xml:"urn:com.workday/bsvc Identification_Data,omitempty"`
	ContactData                     *ContactInformationDataType       `xml:"urn:com.workday/bsvc Contact_Data,omitempty"`
	TobaccoUse                      *bool                             `xml:"urn:com.workday/bsvc Tobacco_Use,omitempty"`
	PoliticalAffiliationReference   *PoliticalAffiliationObjectType   `xml:"urn:com.workday/bsvc Political_Affiliation_Reference,omitempty"`
	SocialBenefitsLocalityReference *SocialBenefitsLocalityObjectType `xml:"urn:com.workday/bsvc Social_Benefits_Locality_Reference,omitempty"`
	RelativeNameInformationData     *RelativeNameInformationDataType  `xml:"urn:com.workday/bsvc Relative_Name_Information_Data,omitempty"`
}

func (t *PersonalInformationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PersonalInformationDataType
	var layout struct {
		*T
		BirthDate              *xsdDate `xml:"urn:com.workday/bsvc Birth_Date,omitempty"`
		DateofDeath            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
		MaritalStatusDate      *xsdDate `xml:"urn:com.workday/bsvc Marital_Status_Date,omitempty"`
		LastMedicalExamDate    *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Date,omitempty"`
		LastMedicalExamValidTo *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Valid_To,omitempty"`
	}
	layout.T = (*T)(t)
	layout.BirthDate = (*xsdDate)(layout.T.BirthDate)
	layout.DateofDeath = (*xsdDate)(layout.T.DateofDeath)
	layout.MaritalStatusDate = (*xsdDate)(layout.T.MaritalStatusDate)
	layout.LastMedicalExamDate = (*xsdDate)(layout.T.LastMedicalExamDate)
	layout.LastMedicalExamValidTo = (*xsdDate)(layout.T.LastMedicalExamValidTo)
	return e.EncodeElement(layout, start)
}
func (t *PersonalInformationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PersonalInformationDataType
	var overlay struct {
		*T
		BirthDate              *xsdDate `xml:"urn:com.workday/bsvc Birth_Date,omitempty"`
		DateofDeath            *xsdDate `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
		MaritalStatusDate      *xsdDate `xml:"urn:com.workday/bsvc Marital_Status_Date,omitempty"`
		LastMedicalExamDate    *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Date,omitempty"`
		LastMedicalExamValidTo *xsdDate `xml:"urn:com.workday/bsvc Last_Medical_Exam_Valid_To,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.BirthDate = (*xsdDate)(overlay.T.BirthDate)
	overlay.DateofDeath = (*xsdDate)(overlay.T.DateofDeath)
	overlay.MaritalStatusDate = (*xsdDate)(overlay.T.MaritalStatusDate)
	overlay.LastMedicalExamDate = (*xsdDate)(overlay.T.LastMedicalExamDate)
	overlay.LastMedicalExamValidTo = (*xsdDate)(overlay.T.LastMedicalExamValidTo)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element for all Personal Preferences.
type PersonalPreferencesDataType struct {
	ReceiveEmailNotifications *bool `xml:"urn:com.workday/bsvc Receive_Email_Notifications,omitempty"`
}

// Phone core data.
type PhoneCoreDataType struct {
	DeviceTypeReference  *PhoneDeviceTypeObjectType  `xml:"urn:com.workday/bsvc Device_Type_Reference"`
	CountryCodeReference *CountryPhoneCodeObjectType `xml:"urn:com.workday/bsvc Country_Code_Reference,omitempty"`
	CompletePhoneNumber  string                      `xml:"urn:com.workday/bsvc Complete_Phone_Number"`
	Extension            string                      `xml:"urn:com.workday/bsvc Extension,omitempty"`
	FormattedPhone       string                      `xml:"urn:com.workday/bsvc Formatted_Phone,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PhoneDeviceTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PhoneDeviceTypeObjectType struct {
	ID         []PhoneDeviceTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Phone Device Type.
type PhoneDeviceTypeReferenceType struct {
	PhoneDeviceTypeDescription string `xml:"urn:com.workday/bsvc Phone_Device_Type_Description"`
}

// Phone Information
type PhoneInformationDataType struct {
	CountryISOCode              string                                        `xml:"urn:com.workday/bsvc Country_ISO_Code,omitempty"`
	InternationalPhoneCode      string                                        `xml:"urn:com.workday/bsvc International_Phone_Code,omitempty"`
	PhoneNumber                 string                                        `xml:"urn:com.workday/bsvc Phone_Number,omitempty"`
	PhoneExtension              string                                        `xml:"urn:com.workday/bsvc Phone_Extension,omitempty"`
	PhoneDeviceTypeReference    *PhoneDeviceTypeObjectType                    `xml:"urn:com.workday/bsvc Phone_Device_Type_Reference,omitempty"`
	UsageData                   []CommunicationMethodUsageInformationDataType `xml:"urn:com.workday/bsvc Usage_Data,omitempty"`
	PhoneReference              *PhoneReferenceObjectType                     `xml:"urn:com.workday/bsvc Phone_Reference,omitempty"`
	ID                          string                                        `xml:"urn:com.workday/bsvc ID,omitempty"`
	AreaCode                    string                                        `xml:"urn:com.workday/bsvc Area_Code,attr,omitempty"`
	TenantFormattedPhone        string                                        `xml:"urn:com.workday/bsvc Tenant_Formatted_Phone,attr,omitempty"`
	InternationalFormattedPhone string                                        `xml:"urn:com.workday/bsvc International_Formatted_Phone,attr,omitempty"`
	PhoneNumberWithoutAreaCode  string                                        `xml:"urn:com.workday/bsvc Phone_Number_Without_Area_Code,attr,omitempty"`
	NationalFormattedPhone      string                                        `xml:"urn:com.workday/bsvc National_Formatted_Phone,attr,omitempty"`
	E164FormattedPhone          string                                        `xml:"urn:com.workday/bsvc E164_Formatted_Phone,attr,omitempty"`
	Delete                      bool                                          `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
	DoNotReplaceAll             bool                                          `xml:"urn:com.workday/bsvc Do_Not_Replace_All,attr,omitempty"`
}

// Encapsulating element for all Phone Number data.
type PhoneNumberDataType struct {
	CountryISOCode           string                            `xml:"urn:com.workday/bsvc Country_ISO_Code,omitempty"`
	InternationalPhoneCode   string                            `xml:"urn:com.workday/bsvc International_Phone_Code,omitempty"`
	AreaCode                 string                            `xml:"urn:com.workday/bsvc Area_Code,omitempty"`
	PhoneNumber              string                            `xml:"urn:com.workday/bsvc Phone_Number"`
	PhoneExtension           string                            `xml:"urn:com.workday/bsvc Phone_Extension,omitempty"`
	PhoneDeviceTypeReference *PhoneDeviceTypeReferenceType     `xml:"urn:com.workday/bsvc Phone_Device_Type_Reference"`
	UsageData                *CommunicationMethodUsageDataType `xml:"urn:com.workday/bsvc Usage_Data"`
}

// Contains a unique identifier for an instance of an object.
type PhoneReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PhoneReferenceObjectType struct {
	ID         []PhoneReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Information about the Earliest and Earliest Contiguous Eligiblility Dates for Retirement Plans which are Part of a Plan Year
type PlanEligiblityDatesDataType struct {
	BenefitPlanReference              *BenefitPlanObjectType `xml:"urn:com.workday/bsvc Benefit_Plan_Reference,omitempty"`
	EarliestEligibilityDate           *time.Time             `xml:"urn:com.workday/bsvc Earliest_Eligibility_Date,omitempty"`
	EarliestContiguousEligibilityDate *time.Time             `xml:"urn:com.workday/bsvc Earliest_Contiguous_Eligibility_Date,omitempty"`
}

func (t *PlanEligiblityDatesDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PlanEligiblityDatesDataType
	var layout struct {
		*T
		EarliestEligibilityDate           *xsdDate `xml:"urn:com.workday/bsvc Earliest_Eligibility_Date,omitempty"`
		EarliestContiguousEligibilityDate *xsdDate `xml:"urn:com.workday/bsvc Earliest_Contiguous_Eligibility_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EarliestEligibilityDate = (*xsdDate)(layout.T.EarliestEligibilityDate)
	layout.EarliestContiguousEligibilityDate = (*xsdDate)(layout.T.EarliestContiguousEligibilityDate)
	return e.EncodeElement(layout, start)
}
func (t *PlanEligiblityDatesDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PlanEligiblityDatesDataType
	var overlay struct {
		*T
		EarliestEligibilityDate           *xsdDate `xml:"urn:com.workday/bsvc Earliest_Eligibility_Date,omitempty"`
		EarliestContiguousEligibilityDate *xsdDate `xml:"urn:com.workday/bsvc Earliest_Contiguous_Eligibility_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EarliestEligibilityDate = (*xsdDate)(overlay.T.EarliestEligibilityDate)
	overlay.EarliestContiguousEligibilityDate = (*xsdDate)(overlay.T.EarliestContiguousEligibilityDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Political Affiliation data.
type PoliticalAffiliationDataType struct {
	ID                string                     `xml:"urn:com.workday/bsvc ID,omitempty"`
	Name              string                     `xml:"urn:com.workday/bsvc Name"`
	Code              string                     `xml:"urn:com.workday/bsvc Code,omitempty"`
	Description       string                     `xml:"urn:com.workday/bsvc Description,omitempty"`
	LocationReference *LocationContextObjectType `xml:"urn:com.workday/bsvc Location_Reference"`
	Inactive          *bool                      `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PoliticalAffiliationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PoliticalAffiliationObjectType struct {
	ID         []PoliticalAffiliationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Political Affiliation and its associated data.
type PoliticalAffiliationRequestReferencesType struct {
	PoliticalAffiliationReference []PoliticalAffiliationObjectType `xml:"urn:com.workday/bsvc Political_Affiliation_Reference"`
}

// The "Response Data" element contains the core data results based on the inbound request that was processed.
type PoliticalAffiliationResponseDataType struct {
	PoliticalAffiliation []PoliticalAffiliationType `xml:"urn:com.workday/bsvc Political_Affiliation,omitempty"`
}

// Contains the response elements for the Get Political Affiliation and Put Political Affiliation service requests.
type PoliticalAffiliationType struct {
	PoliticalAffiliationReference *PoliticalAffiliationObjectType `xml:"urn:com.workday/bsvc Political_Affiliation_Reference,omitempty"`
	PoliticalAffiliationData      *PoliticalAffiliationDataType   `xml:"urn:com.workday/bsvc Political_Affiliation_Data,omitempty"`
}

// Encapsulating element containg all Payroll Interface Processing data.
type PositionDetailDataType struct {
	PositionReference                             *PositionElementObjectType                 `xml:"urn:com.workday/bsvc Position_Reference,omitempty"`
	HeadcountReference                            *HeadcountRestrictionsObjectType           `xml:"urn:com.workday/bsvc Headcount_Reference,omitempty"`
	PositionID                                    string                                     `xml:"urn:com.workday/bsvc Position_ID,omitempty"`
	PositionTitle                                 string                                     `xml:"urn:com.workday/bsvc Position_Title,omitempty"`
	BusinessTitle                                 string                                     `xml:"urn:com.workday/bsvc Business_Title,omitempty"`
	StartDate                                     *time.Time                                 `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
	EndEmploymentDate                             *time.Time                                 `xml:"urn:com.workday/bsvc End_Employment_Date,omitempty"`
	EndEmploymentReasonReference                  []EventClassificationSubcategoryObjectType `xml:"urn:com.workday/bsvc End_Employment_Reason_Reference,omitempty"`
	WorkerTypeReference                           *PositionWorkerTypeObjectType              `xml:"urn:com.workday/bsvc Worker_Type_Reference,omitempty"`
	PositionTimeTypeReference                     *PositionTimeTypeObjectType                `xml:"urn:com.workday/bsvc Position_Time_Type_Reference,omitempty"`
	JobExempt                                     *bool                                      `xml:"urn:com.workday/bsvc Job_Exempt,omitempty"`
	ScheduledWeeklyHours                          float64                                    `xml:"urn:com.workday/bsvc Scheduled_Weekly_Hours,omitempty"`
	DefaultWeeklyHours                            float64                                    `xml:"urn:com.workday/bsvc Default_Weekly_Hours,omitempty"`
	WorkingTimeFrequencyReference                 *FrequencyObjectType                       `xml:"urn:com.workday/bsvc Working_Time_Frequency_Reference,omitempty"`
	WorkingTimeUnitReference                      *WorkingTimeUnitObjectType                 `xml:"urn:com.workday/bsvc Working_Time_Unit_Reference,omitempty"`
	WorkingTimeValue                              float64                                    `xml:"urn:com.workday/bsvc Working_Time_Value,omitempty"`
	FullTimeEquivalentPercentage                  float64                                    `xml:"urn:com.workday/bsvc Full_Time_Equivalent_Percentage,omitempty"`
	ExcludefromHeadcount                          *bool                                      `xml:"urn:com.workday/bsvc Exclude_from_Headcount,omitempty"`
	PayRateTypeReference                          *PayRateTypeObjectType                     `xml:"urn:com.workday/bsvc Pay_Rate_Type_Reference,omitempty"`
	JobClassificationSummaryData                  []JobClassificationSummaryDataType         `xml:"urn:com.workday/bsvc Job_Classification_Summary_Data,omitempty"`
	CompanyInsiderReference                       []CompanyInsiderTypeObjectType             `xml:"urn:com.workday/bsvc Company_Insider_Reference,omitempty"`
	WorkShiftReference                            *WorkShiftObjectType                       `xml:"urn:com.workday/bsvc Work_Shift_Reference,omitempty"`
	WorkHoursProfilesReference                    *WorkHoursProfileObjectType                `xml:"urn:com.workday/bsvc Work_Hours_Profiles_Reference,omitempty"`
	FederalWithholdingFEIN                        string                                     `xml:"urn:com.workday/bsvc Federal_Withholding_FEIN,omitempty"`
	WorkerCompensationCodeData                    []WorkerCompensationCodeDataType           `xml:"urn:com.workday/bsvc Worker_Compensation_Code_Data,omitempty"`
	PositionPayrollReportingCodeData              []PositionPayrollReportingCodeDataType     `xml:"urn:com.workday/bsvc Position_Payroll_Reporting_Code_Data,omitempty"`
	JobProfileSummaryData                         *JobProfileinPositionSummaryDataType       `xml:"urn:com.workday/bsvc Job_Profile_Summary_Data,omitempty"`
	BusinessSiteSummaryData                       *LocationSummaryDataType                   `xml:"urn:com.workday/bsvc Business_Site_Summary_Data,omitempty"`
	PayrollInterfaceProcessingData                *PositionPayrollInterfaceDetailDataType    `xml:"urn:com.workday/bsvc Payroll_Interface_Processing_Data,omitempty"`
	RegularPaidEquivalentHours                    float64                                    `xml:"urn:com.workday/bsvc Regular_Paid_Equivalent_Hours,omitempty"`
	WorkerHoursProfileClassification              string                                     `xml:"urn:com.workday/bsvc Worker_Hours_Profile_Classification,omitempty"`
	InternationalAssignmentData                   *InternationalAssignmentDataType           `xml:"urn:com.workday/bsvc International_Assignment_Data,omitempty"`
	WorkSpaceReference                            *LocationObjectType                        `xml:"urn:com.workday/bsvc Work_Space__Reference,omitempty"`
	AcademicPaySetupData                          *AcademicPaySetupDataType                  `xml:"urn:com.workday/bsvc Academic_Pay_Setup_Data,omitempty"`
	EndDate                                       *time.Time                                 `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	PayThroughDate                                *time.Time                                 `xml:"urn:com.workday/bsvc Pay_Through_Date,omitempty"`
	CollectiveAgreementSummaryData                []CollectiveAgreementSummaryDataType       `xml:"urn:com.workday/bsvc Collective_Agreement_Summary_Data,omitempty"`
	EmployeeProbationPeriodSummaryData            *EmployeeProbationPeriodSummaryDataType    `xml:"urn:com.workday/bsvc Employee_Probation_Period_Summary_Data,omitempty"`
	ManagerasoflastdetectedmanagerchangeReference []WorkerObjectType                         `xml:"urn:com.workday/bsvc Manager_as_of_last_detected_manager_change_Reference,omitempty"`
	EffectiveDate                                 time.Time                                  `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
}

func (t *PositionDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PositionDetailDataType
	var layout struct {
		*T
		StartDate         *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndEmploymentDate *xsdDate `xml:"urn:com.workday/bsvc End_Employment_Date,omitempty"`
		EndDate           *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
		PayThroughDate    *xsdDate `xml:"urn:com.workday/bsvc Pay_Through_Date,omitempty"`
		EffectiveDate     *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(layout.T.StartDate)
	layout.EndEmploymentDate = (*xsdDate)(layout.T.EndEmploymentDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	layout.PayThroughDate = (*xsdDate)(layout.T.PayThroughDate)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *PositionDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PositionDetailDataType
	var overlay struct {
		*T
		StartDate         *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndEmploymentDate *xsdDate `xml:"urn:com.workday/bsvc End_Employment_Date,omitempty"`
		EndDate           *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
		PayThroughDate    *xsdDate `xml:"urn:com.workday/bsvc Pay_Through_Date,omitempty"`
		EffectiveDate     *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(overlay.T.StartDate)
	overlay.EndEmploymentDate = (*xsdDate)(overlay.T.EndEmploymentDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	overlay.PayThroughDate = (*xsdDate)(overlay.T.PayThroughDate)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type PositionElementObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PositionElementObjectType struct {
	ID         []PositionElementObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper for restriction data for openings for all staffing models.
type PositionGroupRestrictionSummaryDataType struct {
	AvailabilityDate                 *time.Time                     `xml:"urn:com.workday/bsvc Availability_Date,omitempty"`
	EarliestHireDate                 *time.Time                     `xml:"urn:com.workday/bsvc Earliest_Hire_Date,omitempty"`
	JobFamilyReference               []JobFamilyBaseObjectType      `xml:"urn:com.workday/bsvc Job_Family_Reference,omitempty"`
	JobProfileRestrictionSummaryData []JobProfileSummaryDataType    `xml:"urn:com.workday/bsvc Job_Profile_Restriction_Summary_Data,omitempty"`
	LocationReference                []LocationObjectType           `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	WorkerTypeReference              *WorkerTypeObjectType          `xml:"urn:com.workday/bsvc Worker_Type_Reference,omitempty"`
	TimeTypeReference                *PositionTimeTypeObjectType    `xml:"urn:com.workday/bsvc Time_Type_Reference,omitempty"`
	PositionWorkerTypeReference      []PositionWorkerTypeObjectType `xml:"urn:com.workday/bsvc Position_Worker_Type_Reference,omitempty"`
}

func (t *PositionGroupRestrictionSummaryDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PositionGroupRestrictionSummaryDataType
	var layout struct {
		*T
		AvailabilityDate *xsdDate `xml:"urn:com.workday/bsvc Availability_Date,omitempty"`
		EarliestHireDate *xsdDate `xml:"urn:com.workday/bsvc Earliest_Hire_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AvailabilityDate = (*xsdDate)(layout.T.AvailabilityDate)
	layout.EarliestHireDate = (*xsdDate)(layout.T.EarliestHireDate)
	return e.EncodeElement(layout, start)
}
func (t *PositionGroupRestrictionSummaryDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PositionGroupRestrictionSummaryDataType
	var overlay struct {
		*T
		AvailabilityDate *xsdDate `xml:"urn:com.workday/bsvc Availability_Date,omitempty"`
		EarliestHireDate *xsdDate `xml:"urn:com.workday/bsvc Earliest_Hire_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AvailabilityDate = (*xsdDate)(overlay.T.AvailabilityDate)
	overlay.EarliestHireDate = (*xsdDate)(overlay.T.EarliestHireDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains the worker's organizations that they are a member of related to the position.
type PositionManagementChainsDataType struct {
	PositionSupervisoryManagementChainData *WorkerSupervisoryManagementChainDataType `xml:"urn:com.workday/bsvc Position_Supervisory_Management_Chain_Data,omitempty"`
	PositionMatrixManagementChainData      *WorkerMatrixManagementChainDataType      `xml:"urn:com.workday/bsvc Position_Matrix_Management_Chain_Data,omitempty"`
}

// Contains the position's organization that it is part of
type PositionOrganizationDataType struct {
	PositionOrganizationData               []WorkerOrganizationMembershipDataType                     `xml:"urn:com.workday/bsvc Position_Organization_Data,omitempty"`
	PayGroupAssignmentCorrectorRescindData []PayGroupAssignmentCorrectorRescindedOrganizationDataType `xml:"urn:com.workday/bsvc Pay_Group_Assignment_Correct_or_Rescind_Data,omitempty"`
}

// Encapsulating element containg all Payroll Interface Processing data.
type PositionPayrollInterfaceDetailDataType struct {
	EffectiveDate                 *time.Time                             `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	PayRateTypeReference          *PayRateTypeObjectType                 `xml:"urn:com.workday/bsvc Pay_Rate_Type_Reference,omitempty"`
	FrequencyReference            *FrequencyObjectType                   `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	PayGroupReference             *ExternalPayGroupObjectType            `xml:"urn:com.workday/bsvc Pay_Group_Reference,omitempty"`
	PayrollEntityReference        *ExternalPayrollEntityObjectType       `xml:"urn:com.workday/bsvc Payroll_Entity_Reference,omitempty"`
	ExternalEmployeeTypeReference *ExternalPayrollEmployeeTypeObjectType `xml:"urn:com.workday/bsvc External_Employee_Type_Reference,omitempty"`
	PayrollFileNumber             string                                 `xml:"urn:com.workday/bsvc Payroll_File_Number,omitempty"`
}

func (t *PositionPayrollInterfaceDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PositionPayrollInterfaceDetailDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *PositionPayrollInterfaceDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PositionPayrollInterfaceDetailDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains each payroll reporting code for the position.
type PositionPayrollReportingCodeDataType struct {
	PayrollReportingCodeReference *PayrollReportingCodeAllObjectType `xml:"urn:com.workday/bsvc Payroll_Reporting_Code_Reference"`
	Code                          string                             `xml:"urn:com.workday/bsvc Code"`
	FormattedCode                 string                             `xml:"urn:com.workday/bsvc Formatted_Code,omitempty"`
	Name                          string                             `xml:"urn:com.workday/bsvc Name"`
	PayrollReportingTypeReference *PayrollReportingTypeObjectType    `xml:"urn:com.workday/bsvc Payroll_Reporting_Type_Reference"`
}

// Reference element representing a unique instance of Position.
type PositionReferenceType struct {
	IntegrationIDReference *ExternalIntegrationIDReferenceDataType `xml:"urn:com.workday/bsvc Integration_ID_Reference"`
}

// Contains a unique identifier for an instance of an object.
type PositionSetObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PositionSetObjectType struct {
	ID         []PositionSetObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PositionTimeTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PositionTimeTypeObjectType struct {
	ID         []PositionTimeTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Position Time Type.
type PositionTimeTypeReferenceType struct {
	TimeTypeDescription string `xml:"urn:com.workday/bsvc Time_Type_Description"`
}

// Contains a unique identifier for an instance of an object.
type PositionWorkerTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PositionWorkerTypeObjectType struct {
	ID         []PositionWorkerTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PotentialObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PotentialObjectType struct {
	ID         []PotentialObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// User Language Setting Data
type PreferredCommunicationLanguageDataType struct {
	UserLanguageReference []UserLanguageObjectType `xml:"urn:com.workday/bsvc User_Language_Reference"`
	Inactive              *bool                    `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Preferred Communication Language Response Data
type PreferredCommunicationLanguageResponseDataType struct {
	PreferredCommunicationLanguages []PreferredCommunicationLanguagesType `xml:"urn:com.workday/bsvc Preferred_Communication_Languages,omitempty"`
}

// Preferred Communication Language
type PreferredCommunicationLanguagesType struct {
	Delete                             *bool                                   `xml:"urn:com.workday/bsvc Delete,omitempty"`
	CountryReference                   *CountryObjectType                      `xml:"urn:com.workday/bsvc Country_Reference"`
	PreferredCommunicationLanguageData *PreferredCommunicationLanguageDataType `xml:"urn:com.workday/bsvc Preferred_Communication_Language_Data"`
}

// Contains the preferred name for a person.  If no preferred name is returned then the legal name is assumed to be the preferred name.  If a preferred name is not provided in a request then the legal name is assumed to be the preferred name.
type PreferredNameDataType struct {
	NameDetailData *PersonNameDetailDataType `xml:"urn:com.workday/bsvc Name_Detail_Data"`
}

// Encapsulating element for all Prefix Name data.
type PrefixNameDataType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc Type,attr,omitempty"`
}

// Container for defining whether a previous system job history entry is being added, updated or deleted.
type PreviousSystemJobHistoryDataType struct {
	PreviousSystemJobHistoryReference  *JobPreviousSystemHistoryObjectType     `xml:"urn:com.workday/bsvc Previous_System_Job_History_Reference,omitempty"`
	PreviousSystemJobHistoryDetailData *PreviousSystemJobHistoryDetailDataType `xml:"urn:com.workday/bsvc Previous_System_Job_History_Detail_Data,omitempty"`
	AddOnly                            bool                                    `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Delete                             bool                                    `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Detail data for a Previous System Job History entry.
type PreviousSystemJobHistoryDetailDataType struct {
	ID                string     `xml:"urn:com.workday/bsvc ID,omitempty"`
	WorkerHistoryName string     `xml:"urn:com.workday/bsvc Worker_History_Name,omitempty"`
	ActionDate        *time.Time `xml:"urn:com.workday/bsvc Action_Date,omitempty"`
	Reason            string     `xml:"urn:com.workday/bsvc Reason,omitempty"`
	Description       string     `xml:"urn:com.workday/bsvc Description,omitempty"`
}

func (t *PreviousSystemJobHistoryDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T PreviousSystemJobHistoryDetailDataType
	var layout struct {
		*T
		ActionDate *xsdDate `xml:"urn:com.workday/bsvc Action_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ActionDate = (*xsdDate)(layout.T.ActionDate)
	return e.EncodeElement(layout, start)
}
func (t *PreviousSystemJobHistoryDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T PreviousSystemJobHistoryDetailDataType
	var overlay struct {
		*T
		ActionDate *xsdDate `xml:"urn:com.workday/bsvc Action_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ActionDate = (*xsdDate)(overlay.T.ActionDate)
	return d.DecodeElement(&overlay, &start)
}

// Container for a Worker and the Previous System Job History data.
type PreviousSystemJobHistoryGetDataType struct {
	WorkerReference              *WorkerObjectType              `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	PreviousSystemJobHistoryData []PreviousSystemJobHistoryType `xml:"urn:com.workday/bsvc Previous_System_Job_History_Data,omitempty"`
}

// Contains each Worker and their job history from a previous system.
type PreviousSystemJobHistoryResponseDataType struct {
	PreviousSystemJobHistory []PreviousSystemJobHistoryGetDataType `xml:"urn:com.workday/bsvc Previous_System_Job_History,omitempty"`
}

// Contains the Data for adding, updating or deleting a previous system job history entry for a worker.
type PreviousSystemJobHistoryType struct {
	WorkerReference          *WorkerObjectType                  `xml:"urn:com.workday/bsvc Worker_Reference"`
	PreviousSystemJobHistory []PreviousSystemJobHistoryDataType `xml:"urn:com.workday/bsvc Previous_System_Job_History"`
}

// Reference element representing a unique instance of Location.
type PrimaryBusinessSiteReferenceDataType struct {
	BusinessSiteReference *BusinessSiteReferenceDataType `xml:"urn:com.workday/bsvc Business_Site_Reference"`
}

// Probation Period Extended Length
type ProbationPeriodExtendedLengthDataType struct {
	Duration      float64                     `xml:"urn:com.workday/bsvc Duration"`
	UnitReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Unit_Reference"`
}

// Probation Period Length
type ProbationPeriodLengthDataType struct {
	Duration      float64                     `xml:"urn:com.workday/bsvc Duration"`
	UnitReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Unit_Reference"`
}

// Encapsulating element containg all Probation Status data for a Worker.
type ProbationStatusDataType struct {
	ProbationStartDate *time.Time `xml:"urn:com.workday/bsvc Probation_Start_Date,omitempty"`
	ProbationEndDate   *time.Time `xml:"urn:com.workday/bsvc Probation_End_Date,omitempty"`
}

func (t *ProbationStatusDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ProbationStatusDataType
	var layout struct {
		*T
		ProbationStartDate *xsdDate `xml:"urn:com.workday/bsvc Probation_Start_Date,omitempty"`
		ProbationEndDate   *xsdDate `xml:"urn:com.workday/bsvc Probation_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ProbationStartDate = (*xsdDate)(layout.T.ProbationStartDate)
	layout.ProbationEndDate = (*xsdDate)(layout.T.ProbationEndDate)
	return e.EncodeElement(layout, start)
}
func (t *ProbationStatusDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ProbationStatusDataType
	var overlay struct {
		*T
		ProbationStartDate *xsdDate `xml:"urn:com.workday/bsvc Probation_Start_Date,omitempty"`
		ProbationEndDate   *xsdDate `xml:"urn:com.workday/bsvc Probation_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProbationStartDate = (*xsdDate)(overlay.T.ProbationStartDate)
	overlay.ProbationEndDate = (*xsdDate)(overlay.T.ProbationEndDate)
	return d.DecodeElement(&overlay, &start)
}

type ProcessingFaultType struct {
	DetailMessage string `xml:"urn:com.workday/bsvc Detail_Message,omitempty"`
}

// Wrapper element for the Organization Professional Affiliation information.
type ProfessionalAffiliationOrganizationDataType struct {
	ProfessionalAffiliationID                        string                                             `xml:"urn:com.workday/bsvc Professional_Affiliation_ID,omitempty"`
	RemoveProfessionalAffiliation                    *bool                                              `xml:"urn:com.workday/bsvc Remove_Professional_Affiliation,omitempty"`
	ProfessionalAffiliationReference                 *ProfessionalAffiliationReferenceObjectType        `xml:"urn:com.workday/bsvc Professional_Affiliation_Reference,omitempty"`
	ProfessionalAffiliation                          string                                             `xml:"urn:com.workday/bsvc Professional_Affiliation,omitempty"`
	ProfessionalAffiliationTypeReference             *ProfessionalAffiliationTypeAllObjectType          `xml:"urn:com.workday/bsvc Professional_Affiliation_Type_Reference,omitempty"`
	Affiliation                                      string                                             `xml:"urn:com.workday/bsvc Affiliation,omitempty"`
	ProfessionalAffiliationRelationshipTypeReference *ProfessionalAffiliationRelationshipTypeObjectType `xml:"urn:com.workday/bsvc Professional_Affiliation_Relationship_Type_Reference,omitempty"`
	BeginDate                                        *time.Time                                         `xml:"urn:com.workday/bsvc Begin_Date,omitempty"`
	EndDate                                          *time.Time                                         `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	ContactInformationData                           []ContactInformationDataType                       `xml:"urn:com.workday/bsvc Contact_Information_Data,omitempty"`
}

func (t *ProfessionalAffiliationOrganizationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ProfessionalAffiliationOrganizationDataType
	var layout struct {
		*T
		BeginDate *xsdDate `xml:"urn:com.workday/bsvc Begin_Date,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.BeginDate = (*xsdDate)(layout.T.BeginDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *ProfessionalAffiliationOrganizationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ProfessionalAffiliationOrganizationDataType
	var overlay struct {
		*T
		BeginDate *xsdDate `xml:"urn:com.workday/bsvc Begin_Date,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.BeginDate = (*xsdDate)(overlay.T.BeginDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type ProfessionalAffiliationReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ProfessionalAffiliationReferenceObjectType struct {
	ID         []ProfessionalAffiliationReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ProfessionalAffiliationRelationshipTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ProfessionalAffiliationRelationshipTypeObjectType struct {
	ID         []ProfessionalAffiliationRelationshipTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ProfessionalAffiliationSkillObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ProfessionalAffiliationSkillObjectType struct {
	ID         []ProfessionalAffiliationSkillObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for the Organization Professional Affiliation information.
type ProfessionalAffiliationSkillType struct {
	OrganizationProfessionalAffiliationReference *ProfessionalAffiliationSkillObjectType       `xml:"urn:com.workday/bsvc Organization_Professional_Affiliation_Reference,omitempty"`
	OrganizationProfessionalAffiliationData      []ProfessionalAffiliationOrganizationDataType `xml:"urn:com.workday/bsvc Organization_Professional_Affiliation_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ProfessionalAffiliationTypeAllObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ProfessionalAffiliationTypeAllObjectType struct {
	ID         []ProfessionalAffiliationTypeAllObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Professional Experience data.
type ProfessionalExperienceDataType struct {
	ProfessionalExperience                string                                     `xml:"urn:com.workday/bsvc Professional_Experience"`
	ProfessionalExperienceRatingReference *ProfessionalExperienceRatingReferenceType `xml:"urn:com.workday/bsvc Professional_Experience_Rating_Reference,omitempty"`
	ProfessionalExperienceComment         string                                     `xml:"urn:com.workday/bsvc Professional_Experience_Comment,omitempty"`
}

// Reference element representing a unique instance of Work Experience Rating.
type ProfessionalExperienceRatingReferenceType struct {
	RatingDescription string `xml:"urn:com.workday/bsvc Rating_Description,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ProficiencyRatingBehaviorObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ProficiencyRatingBehaviorObjectType struct {
	ID         []ProficiencyRatingBehaviorObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ProficiencyRatingObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ProficiencyRatingObjectType struct {
	ID         []ProficiencyRatingObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The pronoun data for a worker.
type PronounDataType struct {
	ID                 string `xml:"urn:com.workday/bsvc ID,omitempty"`
	PronounName        string `xml:"urn:com.workday/bsvc Pronoun_Name"`
	PronounCode        string `xml:"urn:com.workday/bsvc Pronoun_Code,omitempty"`
	PronounDescription string `xml:"urn:com.workday/bsvc Pronoun_Description,omitempty"`
	PronounInactive    *bool  `xml:"urn:com.workday/bsvc Pronoun_Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type PronounObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type PronounObjectType struct {
	ID         []PronounObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The Criteria of the request
type PronounRequestCriteriaType struct {
}

// Reference to the Pronoun of the person.
type PronounRequestReferencesType struct {
	PronounReference []PronounObjectType `xml:"urn:com.workday/bsvc Pronoun_Reference"`
}

// The pronoun response data.
type PronounResponseDataType struct {
	Pronoun []PronounType `xml:"urn:com.workday/bsvc Pronoun,omitempty"`
}

// The pronoun for a worker.
type PronounType struct {
	PronounReference *PronounObjectType `xml:"urn:com.workday/bsvc Pronoun_Reference,omitempty"`
	PronounData      []PronounDataType  `xml:"urn:com.workday/bsvc Pronoun_Data,omitempty"`
}

// The element includes all data for the assignment of a person/worker to a provisioning group. The data reflects the current status, the assignment history is not included.
type ProvisioningGroupAssignmentDataType struct {
	PersonReference   *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	WorkerReference   *WorkerObjectType           `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	ProvisioningGroup string                      `xml:"urn:com.workday/bsvc Provisioning_Group"`
	Status            string                      `xml:"urn:com.workday/bsvc Status,omitempty"`
	LastChanged       *time.Time                  `xml:"urn:com.workday/bsvc Last_Changed,omitempty"`
}

func (t *ProvisioningGroupAssignmentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ProvisioningGroupAssignmentDataType
	var layout struct {
		*T
		LastChanged *xsdDateTime `xml:"urn:com.workday/bsvc Last_Changed,omitempty"`
	}
	layout.T = (*T)(t)
	layout.LastChanged = (*xsdDateTime)(layout.T.LastChanged)
	return e.EncodeElement(layout, start)
}
func (t *ProvisioningGroupAssignmentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ProvisioningGroupAssignmentDataType
	var overlay struct {
		*T
		LastChanged *xsdDateTime `xml:"urn:com.workday/bsvc Last_Changed,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LastChanged = (*xsdDateTime)(overlay.T.LastChanged)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the Request Criteria element to search for provisioning group assignments to specific workers or persons.
type ProvisioningGroupAssignmentRequestCriteriaType struct {
	PersonReference []UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	WorkerReference []WorkerObjectType           `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
}

// Contains each provisioning group assignment based on the Request References or Request Criteria.
type ProvisioningGroupAssignmentResponseDataType struct {
	ProvisioningGroupAssignment []ProvisioningGroupAssignmentType `xml:"urn:com.workday/bsvc Provisioning_Group_Assignment,omitempty"`
}

// The response group allows for the response data to be tailored to only included elements that the user is looking for.  If no response group is provided in the request all sub-elements will be returned.
type ProvisioningGroupAssignmentResponseGroupType struct {
	IncludeReference                       *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludeProvisioningGroupAssignmentData *bool `xml:"urn:com.workday/bsvc Include_Provisioning_Group_Assignment_Data,omitempty"`
}

// Encapsulating element containing all provisioning group assignment data.
type ProvisioningGroupAssignmentType struct {
	ProvisioningGroupAssignmentReference *UniqueIdentifierObjectType          `xml:"urn:com.workday/bsvc Provisioning_Group_Assignment_Reference,omitempty"`
	ProvisioningGroupAssignmentData      *ProvisioningGroupAssignmentDataType `xml:"urn:com.workday/bsvc Provisioning_Group_Assignment_Data,omitempty"`
}

// This element contains all data defining the assignment of the person to a specific provisioning group at the current moment. It does not include the assignment's history.
type ProvisioningGroupAssignmentforPersonDataType struct {
	ProvisioningGroup string     `xml:"urn:com.workday/bsvc Provisioning_Group,omitempty"`
	Status            string     `xml:"urn:com.workday/bsvc Status,omitempty"`
	LastChanged       *time.Time `xml:"urn:com.workday/bsvc Last_Changed,omitempty"`
}

func (t *ProvisioningGroupAssignmentforPersonDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ProvisioningGroupAssignmentforPersonDataType
	var layout struct {
		*T
		LastChanged *xsdDateTime `xml:"urn:com.workday/bsvc Last_Changed,omitempty"`
	}
	layout.T = (*T)(t)
	layout.LastChanged = (*xsdDateTime)(layout.T.LastChanged)
	return e.EncodeElement(layout, start)
}
func (t *ProvisioningGroupAssignmentforPersonDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ProvisioningGroupAssignmentforPersonDataType
	var overlay struct {
		*T
		LastChanged *xsdDateTime `xml:"urn:com.workday/bsvc Last_Changed,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LastChanged = (*xsdDateTime)(overlay.T.LastChanged)
	return d.DecodeElement(&overlay, &start)
}

// Response element containing the requested instances of provisioning group assignments and their associated data.
type ProvisioningGroupAssignmentsResponseType struct {
	RequestReferences *ProvsioningGroupAssignmentRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	RequestCriteria   *ProvisioningGroupAssignmentRequestCriteriaType  `xml:"urn:com.workday/bsvc Request_Criteria,omitempty"`
	ResponseFilter    *ResponseFilterType                              `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *ProvisioningGroupAssignmentResponseGroupType    `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                             `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *ProvisioningGroupAssignmentResponseDataType     `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// This element contains all setup data for a provisioning group.
type ProvisioningGroupDataType struct {
	Name        string `xml:"urn:com.workday/bsvc Name"`
	Description string `xml:"urn:com.workday/bsvc Description,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ProvisioningGroupObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ProvisioningGroupObjectType struct {
	ID         []ProvisioningGroupObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of provisioning groups.
type ProvisioningGroupRequestReferencesType struct {
	ProvisioningGroupRequestReference []ProvisioningGroupObjectType `xml:"urn:com.workday/bsvc Provisioning_Group_Request_Reference,omitempty"`
}

// Contains each provisioning group based on the Request References or Request Criteria.
type ProvisioningGroupResponseDataType struct {
	ProvisioningGroup []ProvisioningGroupType `xml:"urn:com.workday/bsvc Provisioning_Group,omitempty"`
}

// The response group allows for the response data to be tailored to only included elements that the user is looking for.  If no response group is provided in the request all sub-elements will be returned.
type ProvisioningGroupResponseGroupType struct {
	IncludeReference             *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludeProvisioningGroupData *bool `xml:"urn:com.workday/bsvc Include_Provisioning_Group_Data,omitempty"`
}

// Encapsulating element containing all provisioning group data.
type ProvisioningGroupType struct {
	ProvisioningGroupReference *ProvisioningGroupObjectType `xml:"urn:com.workday/bsvc Provisioning_Group_Reference,omitempty"`
	ProvisioningGroupData      *ProvisioningGroupDataType   `xml:"urn:com.workday/bsvc Provisioning_Group_Data,omitempty"`
}

// Response element containing the requested instances of provisioning groups and their associated data.
type ProvisioningGroupsResponseType struct {
	RequestReferences *ProvisioningGroupRequestReferencesType `xml:"urn:com.workday/bsvc Request_References,omitempty"`
	ResponseFilter    *ResponseFilterType                     `xml:"urn:com.workday/bsvc Response_Filter,omitempty"`
	ResponseGroup     *ProvisioningGroupResponseGroupType     `xml:"urn:com.workday/bsvc Response_Group,omitempty"`
	ResponseResults   *ResponseResultsType                    `xml:"urn:com.workday/bsvc Response_Results,omitempty"`
	ResponseData      *ProvisioningGroupResponseDataType      `xml:"urn:com.workday/bsvc Response_Data,omitempty"`
	Version           string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of provisioning group assignments.
type ProvsioningGroupAssignmentRequestReferencesType struct {
	ProvisioningGroupAssignmentRequestReference []UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Provisioning_Group_Assignment_Request_Reference,omitempty"`
}

// Request element for the Put Academic Rank Request
type PutAcademicRankRequestType struct {
	AcademicRankReference *AcademicRankObjectType `xml:"urn:com.workday/bsvc Academic_Rank_Reference,omitempty"`
	AcademicRankData      *AcademicRankDataType   `xml:"urn:com.workday/bsvc Academic_Rank_Data"`
	AddOnly               bool                    `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for the Put Academic Rank Response
type PutAcademicRankResponseType struct {
	AcademicRankReference *AcademicRankObjectType `xml:"urn:com.workday/bsvc Academic_Rank_Reference,omitempty"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Top-level request element used to add or update an Academic Unit Hierarchy.
type PutAcademicUnitHierarchyRequestType struct {
	AcademicUnitHierarchyReference *AcademicUnitHierarchyObjectType `xml:"urn:com.workday/bsvc Academic_Unit_Hierarchy_Reference,omitempty"`
	AcademicUnitHierarchyData      *AcademicUnitHierarchyDataType   `xml:"urn:com.workday/bsvc Academic_Unit_Hierarchy_Data"`
	AddOnly                        bool                             `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                        string                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Top-level response element for the Put Academic Unit Hierarchy operation
type PutAcademicUnitHierarchyResponseType struct {
	AcademicUnitHierarchyReference *AcademicUnitHierarchyObjectType `xml:"urn:com.workday/bsvc Academic_Unit_Hierarchy_Reference,omitempty"`
	Version                        string                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for selecting the Academic Unit to be updated
type PutAcademicUnitRequestType struct {
	AcademicUnitReference *AcademicUnitObjectType `xml:"urn:com.workday/bsvc Academic_Unit_Reference,omitempty"`
	AcademicUnitData      *AcademicUnitDataType   `xml:"urn:com.workday/bsvc Academic_Unit_Data"`
	AddOnly               bool                    `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for the Put Academic Unit response
type PutAcademicUnitResponseType struct {
	AcademicUnitReference *AcademicUnitObjectType `xml:"urn:com.workday/bsvc Academic_Unit_Reference,omitempty"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element containing Address update information.
type PutAddressesforCountryFormatExtensionRequestType struct {
	AddressReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Address_Reference"`
	AddressData      []GlobalAddressDataType     `xml:"urn:com.workday/bsvc Address_Data"`
	Version          string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing Address reference.
type PutAddressesforCountryFormatExtensionResponseType struct {
	AddressReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Address_Reference,omitempty"`
	Version          string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Appointment Specialty Request
type PutAppointmentSpecialtyRequestType struct {
	AppointmentSpecialtyReference *AppointmentSpecialtyObjectType `xml:"urn:com.workday/bsvc Appointment_Specialty_Reference,omitempty"`
	AppointmentSpecialtyData      *AppointmentSpecialtyDataType   `xml:"urn:com.workday/bsvc Appointment_Specialty_Data"`
	AddOnly                       bool                            `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                       string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Appointment Specialty Response
type PutAppointmentSpecialtyResponseType struct {
	AppointmentSpecialtyReference *AppointmentSpecialtyObjectType `xml:"urn:com.workday/bsvc Appointment_Specialty_Reference,omitempty"`
	Version                       string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Request Element for assigning Workday Accounts to a User-Based Security Group
type PutAssignUserBasedSecurityGroupRequestType struct {
	AssignUserBasedSecurityGroupData *AssignUserBasedSecurityGroupDataType `xml:"urn:com.workday/bsvc Assign_User-Based_Security_Group_Data"`
	Version                          string                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Response for the Assign User-Based Security Groups to a Workday Account request.
type PutAssignUserBasedSecurityGroupResponseType struct {
	UserBasedSecurityGroupReference *UserBasedSecurityGroupObjectType `xml:"urn:com.workday/bsvc User-Based_Security_Group_Reference,omitempty"`
	Version                         string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Request element for assigning User-Based Security Groups to a Workday Account.
type PutAssignUserBasedSecurityGroupsRequestType struct {
	AssignUserBasedSecurityGroupsData *AssignUserBasedSecurityGroupsDataType `xml:"urn:com.workday/bsvc Assign_User-Based_Security_Groups_Data,omitempty"`
	Version                           string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Response for the Assign User-Based Security Groups to a Workday Account request.
type PutAssignUserBasedSecurityGroupsResponseType struct {
	WorkdayAccountReference *SystemUserObjectType `xml:"urn:com.workday/bsvc Workday_Account_Reference,omitempty"`
	Version                 string                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the instructions for adding or updating a committee classification group
type PutCommitteeClassificationGroupRequestType struct {
	CommitteeClassificationGroupReference *CommitteeClassificationGroupObjectType `xml:"urn:com.workday/bsvc Committee_Classification_Group_Reference,omitempty"`
	CommitteeClassificationGroupData      *CommitteeClassificationGroupDataType   `xml:"urn:com.workday/bsvc Committee_Classification_Group_Data,omitempty"`
	AddOnly                               bool                                    `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                               string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Committee Member Type
type PutCommitteeClassificationGroupResponseType struct {
	CommitteeClassificationGroupReference *CommitteeClassificationGroupObjectType `xml:"urn:com.workday/bsvc Committee_Classification_Group_Reference,omitempty"`
	Version                               string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the instructions for adding or updating a committee classification.
type PutCommitteeClassificationRequestType struct {
	CommitteeClassificationReference *CommitteeClassificationObjectType `xml:"urn:com.workday/bsvc Committee_Classification_Reference,omitempty"`
	CommitteeClassificationData      *CommitteeClassificationDataType   `xml:"urn:com.workday/bsvc Committee_Classification_Data,omitempty"`
	AddOnly                          bool                               `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Committee Classification Response
type PutCommitteeClassificationResponseType struct {
	CommitteeClassificationReference *CommitteeClassificationObjectType `xml:"urn:com.workday/bsvc Committee_Classification_Reference,omitempty"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Data for Committee Meeting Web Service Request
type PutCommitteeMeetingRequestType struct {
	CommitteeMeetingReference *CommitteeMeetingObjectType `xml:"urn:com.workday/bsvc Committee_Meeting_Reference,omitempty"`
	CommitteeMeetingData      *CommitteeMeetingDataType   `xml:"urn:com.workday/bsvc Committee_Meeting_Data"`
	AddOnly                   bool                        `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                   string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response data for put committee meeting request
type PutCommitteeMeetingResponseType struct {
	CommitteeMeetingReference *CommitteeMeetingObjectType `xml:"urn:com.workday/bsvc Committee_Meeting_Reference,omitempty"`
	Version                   string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Committee Membership Type Request
type PutCommitteeMembershipTypeRequestType struct {
	CommitteeMembershipTypeReference *CommitteeMembershipTypeObjectType `xml:"urn:com.workday/bsvc Committee_Membership_Type_Reference,omitempty"`
	CommitteeMembershipTypeData      *CommitteeMembershipTypeDataType   `xml:"urn:com.workday/bsvc Committee_Membership_Type_Data,omitempty"`
	AddOnly                          bool                               `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Committee Membership Type Response
type PutCommitteeMembershipTypeResponseType struct {
	CommitteeMembershipTypeReference *CommitteeMembershipTypeObjectType `xml:"urn:com.workday/bsvc Committee_Membership_Type_Reference,omitempty"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the instructions for adding or updating a committee type.
type PutCommitteeTypeRequestType struct {
	CommitteeTypeReference *CommitteeTypeObjectType `xml:"urn:com.workday/bsvc Committee_Type_Reference,omitempty"`
	CommitteeTypeData      *CommitteeTypeDataType   `xml:"urn:com.workday/bsvc Committee_Type_Data,omitempty"`
	AddOnly                bool                     `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                string                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Committee Type Response
type PutCommitteeTypeResponseType struct {
	CommitteeTypeReference *CommitteeTypeObjectType `xml:"urn:com.workday/bsvc Committee_Type_Reference,omitempty"`
	Version                string                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains data for adding or updating a Company Insider Type
type PutCompanyInsiderTypeRequestType struct {
	CompanyInsiderTypeReference *CompanyInsiderTypeObjectType `xml:"urn:com.workday/bsvc Company_Insider_Type_Reference,omitempty"`
	CompanyInsiderTypeData      *CompanyInsiderTypeDataType   `xml:"urn:com.workday/bsvc Company_Insider_Type_Data"`
	AddOnly                     bool                          `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                     string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Put Company Insider Type Response Data
type PutCompanyInsiderTypeResponseType struct {
	CompanyInsiderTypeReference *CompanyInsiderTypeObjectType `xml:"urn:com.workday/bsvc Company_Insider_Type_Reference,omitempty"`
	Version                     string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The Wrapper data element for the Put Dependent Web Service.
type PutDependentDataType struct {
	DependentID                        string                                               `xml:"urn:com.workday/bsvc Dependent_ID,omitempty"`
	EmployeeReference                  *EmployeeObjectType                                  `xml:"urn:com.workday/bsvc Employee_Reference,omitempty"`
	ExistingRelatedPersonReference     *RelatedPersonforWorkerObjectType                    `xml:"urn:com.workday/bsvc Existing_Related_Person_Reference,omitempty"`
	RelatedPersonRelationshipReference *RelatedPersonRelationshipObjectType                 `xml:"urn:com.workday/bsvc Related_Person_Relationship_Reference,omitempty"`
	UseEmployeeAddress                 *bool                                                `xml:"urn:com.workday/bsvc Use_Employee_Address,omitempty"`
	UseEmployeePhone                   *bool                                                `xml:"urn:com.workday/bsvc Use_Employee_Phone,omitempty"`
	Irrevocable                        *bool                                                `xml:"urn:com.workday/bsvc Irrevocable,omitempty"`
	DependentPersonalInformationData   *DependentPersonalInformationDataType                `xml:"urn:com.workday/bsvc Dependent_Personal_Information_Data,omitempty"`
	CourtOrderReplacementData          []QualifiedDomesticRelationsOrderReplacementDataType `xml:"urn:com.workday/bsvc Court_Order_Replacement_Data,omitempty"`
}

// Wrapper element for the Put Dependent Request Information.
type PutDependentRequestType struct {
	DependentReference *DependentObjectType  `xml:"urn:com.workday/bsvc Dependent_Reference,omitempty"`
	DependentData      *PutDependentDataType `xml:"urn:com.workday/bsvc Dependent_Data"`
	AddOnly            bool                  `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version            string                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the Put Dependent Returned data.
type PutDependentResponseType struct {
	DependentReference     *DependentObjectType                           `xml:"urn:com.workday/bsvc Dependent_Reference,omitempty"`
	EmployeeReference      *EmployeeObjectType                            `xml:"urn:com.workday/bsvc Employee_Reference,omitempty"`
	ExceptionsResponseData []ApplicationInstanceRelatedExceptionsDataType `xml:"urn:com.workday/bsvc Exceptions_Response_Data,omitempty"`
	Version                string                                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The request component of the Put Difficulty to Fill web service task.
type PutDifficultytoFillRequestType struct {
	DifficultytoFillReference *DifficultytoFillObjectType `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Reference,omitempty"`
	DifficultytoFillData      *DifficultytoFillDataType   `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Data"`
	AddOnly                   bool                        `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                   string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for difficulty to fill.
type PutDifficultytoFillResponseType struct {
	DifficultytoFillReference *DifficultytoFillObjectType `xml:"urn:com.workday/bsvc Difficulty_to_Fill_Reference,omitempty"`
	Version                   string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Put Disability
type PutDisabilityRequestType struct {
	DisabilityReference *DisabilityObjectType `xml:"urn:com.workday/bsvc Disability_Reference,omitempty"`
	DisabilityData      *DisabilityDataType   `xml:"urn:com.workday/bsvc Disability_Data"`
	AddOnly             bool                  `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version             string                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for the Put Disability operation.
type PutDisabilityResponseType struct {
	DisabilityReference *DisabilityObjectType `xml:"urn:com.workday/bsvc Disability_Reference,omitempty"`
	Version             string                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for Establishment data for the Put Establishment web service
type PutEstablishmentRequestType struct {
	EstablishmentReference *EstablishmentObjectType `xml:"urn:com.workday/bsvc Establishment_Reference,omitempty"`
	EstablishmentData      *EstablishmentDataType   `xml:"urn:com.workday/bsvc Establishment_Data,omitempty"`
	Version                string                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Establishment Response
type PutEstablishmentResponseType struct {
	EstablishmentReference *EstablishmentObjectType `xml:"urn:com.workday/bsvc Establishment_Reference,omitempty"`
	Version                string                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Put Ethnicity
type PutEthnicityRequestType struct {
	EthnicityReference *EthnicityObjectType `xml:"urn:com.workday/bsvc Ethnicity_Reference,omitempty"`
	EthnicityData      *EthnicityDataType   `xml:"urn:com.workday/bsvc Ethnicity_Data,omitempty"`
	AddOnly            bool                 `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version            string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for Put Ethnicity
type PutEthnicityResponseType struct {
	EthnicityReference *EthnicityObjectType `xml:"urn:com.workday/bsvc Ethnicity_Reference,omitempty"`
	Version            string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Put External Disability Self-Identification Record
type PutExternalDisabilitySelfIdentificationRecordRequestType struct {
	ExternalDisabilitySelfIdentificationRecordReference *ExternalDisabilitySelfIdentificationRecordObjectType `xml:"urn:com.workday/bsvc External_Disability_Self_Identification_Record_Reference,omitempty"`
	ExternalDisabilitySelfIdentificationRecordData      *ExternalDisabilitySelfIdentificationRecordDataType   `xml:"urn:com.workday/bsvc External_Disability_Self_Identification_Record_Data"`
	Delete                                              bool                                                  `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
	Version                                             string                                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for the Put External Disability Self-Identification Record operation.
type PutExternalDisabilitySelfIdentificationRecordResponseType struct {
	ExternalDisabilitySelfIdentificationRecordReference *ExternalDisabilitySelfIdentificationRecordObjectType `xml:"urn:com.workday/bsvc External_Disability_Self_Identification_Record_Reference,omitempty"`
	Version                                             string                                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The element containing all necessary information to put/get an External Form I-9 for a Worker.
type PutExternalFormI9RequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ExternalFormI9Data        *ExternalFormI9DataType        `xml:"urn:com.workday/bsvc External_Form_I-9_Data"`
	Version                   string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response element containing all necessary information to upload an External Form I-9 for a Worker.
type PutExternalFormI9ResponseType struct {
	CompleteFormI9EventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Complete_Form_I-9_Event_Reference,omitempty"`
	Version                      string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The element containing all necessary information to put/get an External Form I-9 Section 3 for a Worker.
type PutExternalFormI9Section3RequestType struct {
	BusinessProcessParameters  *BusinessProcessParametersType  `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ExternalFormI9Section3Data *ExternalFormI9Section3DataType `xml:"urn:com.workday/bsvc External_Form_I-9_Section_3_Data"`
	Version                    string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response element containing all necessary information to upload an External Form I-9 Section 3 for a Worker.
type PutExternalFormI9Section3ResponseType struct {
	CompleteFormI9Section3EventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Complete_Form_I-9_Section_3_Event_Reference,omitempty"`
	Version                              string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put External Form I-9 Source Request
type PutExternalFormI9SourceRequestType struct {
	AddOnly                       *bool                           `xml:"urn:com.workday/bsvc Add_Only,omitempty"`
	ExternalFormI9SourceReference *ExternalFormI9SourceObjectType `xml:"urn:com.workday/bsvc External_Form_I-9_Source_Reference,omitempty"`
	ExternalFormI9SourceData      []ExternalFormI9SourceDataType  `xml:"urn:com.workday/bsvc External_Form_I-9_Source_Data"`
	Version                       string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put External Form I-9 Source Response
type PutExternalFormI9SourceResponseType struct {
	ExternalFormI9SourceReference *ExternalFormI9SourceObjectType `xml:"urn:com.workday/bsvc External_Form_I-9_Source_Reference,omitempty"`
	Version                       string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Put Former Worker Document Request
type PutFormerWorkerDocumentRequestType struct {
	FormerWorkerDocumentReference *FormerWorkerAttachmentObjectType `xml:"urn:com.workday/bsvc Former_Worker_Document_Reference,omitempty"`
	FormerWorkerDocumentData      *FormerWorkerAttachmentDataType   `xml:"urn:com.workday/bsvc Former_Worker_Document_Data"`
	AddOnly                       bool                              `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                       string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response Element for Put Former Worker Attachment
type PutFormerWorkerDocumentResponseType struct {
	FormerWorkerAttachmentReference *FormerWorkerAttachmentObjectType `xml:"urn:com.workday/bsvc Former_Worker_Attachment_Reference,omitempty"`
	FormerWorkerReference           *FormerWorkerObjectType           `xml:"urn:com.workday/bsvc Former_Worker_Reference,omitempty"`
	Version                         string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the instructions for adding or updating a former worker.
type PutFormerWorkerRequestType struct {
	FormerWorkerReference *FormerWorkerObjectType `xml:"urn:com.workday/bsvc Former_Worker_Reference,omitempty"`
	FormerWorkerData      *FormerWorkerDataType   `xml:"urn:com.workday/bsvc Former_Worker_Data"`
	AddOnly               bool                    `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element for the response to Put Former Worker. Shows the Former Worker Reference ID created.
type PutFormerWorkerResponseType struct {
	FormerWorkerReference *FormerWorkerObjectType `xml:"urn:com.workday/bsvc Former_Worker_Reference,omitempty"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Root request element for the operation
type PutFrequencyRequestType struct {
	FrequencyReference *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	FrequencyData      *FrequencyDataType   `xml:"urn:com.workday/bsvc Frequency_Data"`
	AddOnly            bool                 `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version            string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response for Put Frequency service
type PutFrequencyResponseType struct {
	FrequencyReference *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	Version            string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The request to edit gender identity data for a worker.
type PutGenderIdentityRequestType struct {
	GenderIdentityReference *GenderIdentityObjectType `xml:"urn:com.workday/bsvc Gender_Identity_Reference,omitempty"`
	GenderIdentityData      *GenderIdentityDataType   `xml:"urn:com.workday/bsvc Gender_Identity_Data"`
	AddOnly                 bool                      `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                 string                    `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response to the gender identity put request.
type PutGenderIdentityResponseType struct {
	GenderIdentityReference *GenderIdentityObjectType `xml:"urn:com.workday/bsvc Gender_Identity_Reference,omitempty"`
	Version                 string                    `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Holiday Calendar
type PutHolidayCalendarRequestType struct {
	HolidayCalendarReference *HolidayCalendarObjectType `xml:"urn:com.workday/bsvc Holiday_Calendar_Reference,omitempty"`
	HolidayCalendarData      *HolidayCalendarDataType   `xml:"urn:com.workday/bsvc Holiday_Calendar_Data"`
	AddOnly                  bool                       `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                  string                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Holiday Calendar Response.
type PutHolidayCalendarResponseType struct {
	HolidayCalendarReference *HolidayCalendarObjectType `xml:"urn:com.workday/bsvc Holiday_Calendar_Reference,omitempty"`
	Version                  string                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Import Process Response element
type PutImportProcessResponseType struct {
	ImportProcessReference  *WebServiceBackgroundProcessRuntimeObjectType `xml:"urn:com.workday/bsvc Import_Process_Reference,omitempty"`
	HeaderInstanceReference *InstanceObjectType                           `xml:"urn:com.workday/bsvc Header_Instance_Reference,omitempty"`
	Version                 string                                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains data for adding or updating a Job Category.
type PutJobCategoryRequestType struct {
	JobCategoryReference *JobCategoryObjectType `xml:"urn:com.workday/bsvc Job_Category_Reference,omitempty"`
	JobCategoryData      *JobCategoryDataType   `xml:"urn:com.workday/bsvc Job_Category_Data"`
	AddOnly              bool                   `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version              string                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing the Put Job Category response data.
type PutJobCategoryResponseType struct {
	JobCategoryReference *JobCategoryObjectType `xml:"urn:com.workday/bsvc Job_Category_Reference,omitempty"`
	Version              string                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request Element for Put Job Classification Group
type PutJobClassificationGroupRequestType struct {
	JobClassificationGroupReference *JobClassificationGroupObjectType `xml:"urn:com.workday/bsvc Job_Classification_Group_Reference,omitempty"`
	JobClassificationGroupData      *JobClassificationGroupDataType   `xml:"urn:com.workday/bsvc Job_Classification_Group_Data,omitempty"`
	AddOnly                         bool                              `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                         string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for Put Job Classification
type PutJobClassificationGroupResponseType struct {
	JobClassificationGroupReference *JobClassificationGroupObjectType `xml:"urn:com.workday/bsvc Job_Classification_Group_Reference,omitempty"`
	Version                         string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for  Put Job Family Group
type PutJobFamilyGroupRequestType struct {
	JobFamilyGroupReference *JobFamilyObjectType    `xml:"urn:com.workday/bsvc Job_Family_Group_Reference,omitempty"`
	JobFamilyGroupData      *JobFamilyGroupDataType `xml:"urn:com.workday/bsvc Job_Family_Group_Data,omitempty"`
	AddOnly                 bool                    `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                 string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for the Put Job Family Group
type PutJobFamilyGroupResponseType struct {
	JobFamilyGroupsReference *JobFamilyObjectType `xml:"urn:com.workday/bsvc Job_Family_Groups_Reference,omitempty"`
	Version                  string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Put Job Family
type PutJobFamilyRequestType struct {
	JobFamilyReference *JobFamilyObjectType `xml:"urn:com.workday/bsvc Job_Family_Reference,omitempty"`
	JobFamilyData      *JobFamilyDataType   `xml:"urn:com.workday/bsvc Job_Family_Data,omitempty"`
	AddOnly            bool                 `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version            string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for Put Job Family
type PutJobFamilyResponseType struct {
	JobFamilyReference *JobFamilyObjectType `xml:"urn:com.workday/bsvc Job_Family_Reference,omitempty"`
	Version            string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains data for adding or updating a Job Profile.
type PutJobProfileRequestType struct {
	JobProfileReference *JobProfileObjectType `xml:"urn:com.workday/bsvc Job_Profile_Reference,omitempty"`
	JobProfileData      *JobProfileDataType   `xml:"urn:com.workday/bsvc Job_Profile_Data"`
	AddOnly             bool                  `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version             string                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for Put Job Profile.
type PutJobProfileResponseType struct {
	JobProfileReference    *JobProfileObjectType                          `xml:"urn:com.workday/bsvc Job_Profile_Reference,omitempty"`
	ExceptionsResponseData []ApplicationInstanceRelatedExceptionsDataType `xml:"urn:com.workday/bsvc Exceptions_Response_Data,omitempty"`
	Version                string                                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Put LGBT Identification
type PutLGBTIdentificationRequestType struct {
	LGBTIdentificationReference *LGBTIdentificationObjectType `xml:"urn:com.workday/bsvc LGBT_Identification_Reference,omitempty"`
	LGBTIdentificationData      *LGBTIdentificationDataType   `xml:"urn:com.workday/bsvc LGBT_Identification_Data"`
	AddOnly                     bool                          `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                     string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for the Put LGBT Identification operation.
type PutLGBTIdentificationResponseType struct {
	LGBTIdentificationReference *LGBTIdentificationObjectType `xml:"urn:com.workday/bsvc LGBT_Identification_Reference,omitempty"`
	Version                     string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Web Service Element for Put Location Attribute Requests
type PutLocationAttributeRequestType struct {
	LocationAttributeReference *LocationAttributeObjectType `xml:"urn:com.workday/bsvc Location_Attribute_Reference,omitempty"`
	LocationAttributeData      *LocationAttributeDataType   `xml:"urn:com.workday/bsvc Location_Attribute_Data"`
	AddOnly                    bool                         `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                    string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Web Service Element for Put Location Attribute Response
type PutLocationAttributeResponseType struct {
	LocationAttributeReference *LocationAttributeObjectType `xml:"urn:com.workday/bsvc Location_Attribute_Reference,omitempty"`
	Version                    string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request Element for Location Hierarchy Organization Assignment.
type PutLocationHierarchyOrganizationAssignmentsRequestType struct {
	LocationHierarchyOrganizationAssignmentsData *LocationHierarchyOrganizationAssignmentsDataType `xml:"urn:com.workday/bsvc Location_Hierarchy_Organization_Assignments_Data,omitempty"`
	Version                                      string                                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The Put Location Hierarchy Organization Assignments responds with the Location Hierarchy whose Organization Assignments have been updated.
type PutLocationHierarchyOrganizationAssignmentsResponseType struct {
	LocationHierarchyReference *LocationHierarchyObjectType `xml:"urn:com.workday/bsvc Location_Hierarchy_Reference,omitempty"`
	Version                    string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains data for adding or updating a Location.
type PutLocationRequestType struct {
	LocationReference *LocationObjectType `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	LocationData      *LocationiDataType  `xml:"urn:com.workday/bsvc Location_Data"`
	AddOnly           bool                `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version           string              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for Put Location operation.
type PutLocationResponseType struct {
	LocationReference      *LocationObjectType                            `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	ExceptionsResponseData []ApplicationInstanceRelatedExceptionsDataType `xml:"urn:com.workday/bsvc Exceptions_Response_Data,omitempty"`
	Version                string                                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Organization Assignment Restrictions Request
type PutOrganizationAssignmentRestrictionsRequestType struct {
	OrganizationAssignmentRestrictionsData *OrganizationAssignmentRestrictionsDataType `xml:"urn:com.workday/bsvc Organization_Assignment_Restrictions_Data,omitempty"`
	Version                                string                                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Organization Assignment Restrictions Response
type PutOrganizationAssignmentRestrictionsResponseType struct {
	SupervisoryOrganizationReference *SupervisoryOrganizationObjectType `xml:"urn:com.workday/bsvc Supervisory_Organization_Reference,omitempty"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper for Organization Name data
type PutOrganizationNameRequestType struct {
	OrganizationReference *OrganizationObjectType    `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	OrganizationNameData  []OrganizationNameDataType `xml:"urn:com.workday/bsvc Organization_Name_Data"`
	Version               string                     `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper for Organization Reference
type PutOrganizationNameResponseType struct {
	OrganizationReference *OrganizationObjectType `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request for Put Organization Reference ID
type PutOrganizationReferenceIDRequestType struct {
	OrganizationReference       *OrganizationObjectType                   `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	OrganizationReferenceIDData *OrganizationReferenceIDReferenceDataType `xml:"urn:com.workday/bsvc Organization_Reference_ID_Data,omitempty"`
	Version                     string                                    `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response for Put Organization Reference ID
type PutOrganizationReferenceIDResponseType struct {
	OrganizationIDReference *OrganizationObjectType `xml:"urn:com.workday/bsvc Organization_ID_Reference,omitempty"`
	Version                 string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request Element for Adding or Updating a Period Reporting Calendar
type PutPeriodReportingCalendarRequestType struct {
	PeriodReportingCalendarReference *PeriodReportingCalendarObjectType `xml:"urn:com.workday/bsvc Period_Reporting_Calendar_Reference,omitempty"`
	PeriodReportingCalendarData      *PeriodReportingCalendarDataType   `xml:"urn:com.workday/bsvc Period_Reporting_Calendar_Data"`
	AddOnly                          bool                               `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response of Put Period Reporting Calendar
type PutPeriodReportingCalendarResponseType struct {
	PeriodReportingCalendarReference *PeriodReportingCalendarObjectType `xml:"urn:com.workday/bsvc Period_Reporting_Calendar_Reference,omitempty"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Put Political Affiliation
type PutPoliticalAffiliationRequestType struct {
	PoliticalAffiliationReference *PoliticalAffiliationObjectType `xml:"urn:com.workday/bsvc Political_Affiliation_Reference,omitempty"`
	PoliticalAffiliationData      *PoliticalAffiliationDataType   `xml:"urn:com.workday/bsvc Political_Affiliation_Data"`
	AddOnly                       bool                            `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                       string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for the Put Political Affiliation operation.
type PutPoliticalAffiliationResponseType struct {
	PoliticalAffiliationReference *PoliticalAffiliationObjectType `xml:"urn:com.workday/bsvc Political_Affiliation_Reference,omitempty"`
	Version                       string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Preferred Communication Language Request
type PutPreferredCommunicationLanguageRequestType struct {
	PreferredCommunicationLanguages []PreferredCommunicationLanguagesType `xml:"urn:com.workday/bsvc Preferred_Communication_Languages,omitempty"`
	Version                         string                                `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Preferred Communication Language Response
type PutPreferredCommunicationLanguageResponseType struct {
	Version string `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains the Data for adding, updating or deleting a previous system job history entry for a worker.
type PutPreviousSystemJobHistoryRequestType struct {
	PreviousSystemJobHistoryData *PreviousSystemJobHistoryType `xml:"urn:com.workday/bsvc Previous_System_Job_History_Data"`
	Version                      string                        `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response for Put Previous System Job History. Returns the worker.
type PutPreviousSystemJobHistoryResponseType struct {
	WorkerReference *WorkerObjectType `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	Version         string            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The request to edit pronoun data for a worker.
type PutPronounRequestType struct {
	PronounReference *PronounObjectType `xml:"urn:com.workday/bsvc Pronoun_Reference,omitempty"`
	PronounData      *PronounDataType   `xml:"urn:com.workday/bsvc Pronoun_Data"`
	AddOnly          bool               `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version          string             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response to the pronoun put request.
type PutPronounResponseType struct {
	PronounReference *PronounObjectType `xml:"urn:com.workday/bsvc Pronoun_Reference,omitempty"`
	Version          string             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element to add or update a provisioning group assignment
type PutProvisioningGroupAssignmentRequestType struct {
	ProvisioningGroupAssignmentReference *UniqueIdentifierObjectType          `xml:"urn:com.workday/bsvc Provisioning_Group_Assignment_Reference,omitempty"`
	ProvisioningGroupAssignmentData      *ProvisioningGroupAssignmentDataType `xml:"urn:com.workday/bsvc Provisioning_Group_Assignment_Data"`
	Version                              string                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Reference to the created or updated provisioning group assignment
type PutProvisioningGroupAssignmentResponseType struct {
	ProvisioningGroupAssignmentReference *UniqueIdentifierObjectType                    `xml:"urn:com.workday/bsvc Provisioning_Group_Assignment_Reference,omitempty"`
	ExceptionsResponseData               []ApplicationInstanceRelatedExceptionsDataType `xml:"urn:com.workday/bsvc Exceptions_Response_Data,omitempty"`
	Version                              string                                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Provisioning Group Request
type PutProvisioningGroupRequestType struct {
	ProvisioningGroupReference *ProvisioningGroupObjectType `xml:"urn:com.workday/bsvc Provisioning_Group_Reference,omitempty"`
	ProvisioningGroupData      *ProvisioningGroupDataType   `xml:"urn:com.workday/bsvc Provisioning_Group_Data"`
	Version                    string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Reference to the provisioning group created or updated.
type PutProvisioningGroupResponseType struct {
	ProvisioningGroupReference *ProvisioningGroupObjectType                   `xml:"urn:com.workday/bsvc Provisioning_Group_Reference,omitempty"`
	ExceptionsResponseData     []ApplicationInstanceRelatedExceptionsDataType `xml:"urn:com.workday/bsvc Exceptions_Response_Data,omitempty"`
	Version                    string                                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Safety Incident Location Request
type PutSafetyIncidentLocationRequestType struct {
	SafetyIncidentLocationReference *SafetyIncidentLocationObjectType `xml:"urn:com.workday/bsvc Safety_Incident_Location_Reference,omitempty"`
	SafetyIncidentLocationData      *SafetyIncidentLocationDataType   `xml:"urn:com.workday/bsvc Safety_Incident_Location_Data,omitempty"`
	AddOnly                         bool                              `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                         string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Safety Incident Location Response
type PutSafetyIncidentLocationResponseType struct {
	SafetyIncidentLocationReference *SafetyIncidentLocationObjectType `xml:"urn:com.workday/bsvc Safety_Incident_Location_Reference,omitempty"`
	Version                         string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put search settings request.
type PutSearchSettingsRequestType struct {
	SearchSettingsData *SearchSettingsDataType `xml:"urn:com.workday/bsvc Search_Settings_Data"`
	AddOnly            bool                    `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version            string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing tenant setup search data
type PutSearchSettingsResponseType struct {
	SearchSettingsData []SearchSettingsDataType `xml:"urn:com.workday/bsvc Search_Settings_Data,omitempty"`
	Version            string                   `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Service Center Representative Request
type PutServiceCenterRepresentativeRequestType struct {
	ServiceCenterRepresentativeReference *ServiceCenterRepresentativeObjectType `xml:"urn:com.workday/bsvc Service_Center_Representative_Reference,omitempty"`
	ServiceCenterRepresentativeData      *ServiceCenterRepresentativeDataType   `xml:"urn:com.workday/bsvc Service_Center_Representative_Data"`
	AddOnly                              bool                                   `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                              string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Service Center Representative Response
type PutServiceCenterRepresentativeResponseType struct {
	ServiceCenterRepresentativeReference *ServiceCenterRepresentativeObjectType `xml:"urn:com.workday/bsvc Service_Center_Representative_Reference,omitempty"`
	Version                              string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request Element for Put Service Center Representative Workday Account
type PutServiceCenterRepresentativeWorkdayAccountRequestType struct {
	ServiceCenterRepresentativeWorkdayAccountReference *ServiceCenterRepresentativeObjectType             `xml:"urn:com.workday/bsvc Service_Center_Representative_Workday_Account_Reference,omitempty"`
	ServiceCenterRepresentativeWorkdayAccountData      *ServiceCenterRepresentativeWorkdayAccountDataType `xml:"urn:com.workday/bsvc Service_Center_Representative_Workday_Account_Data"`
	Version                                            string                                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Service Center Representative Workday Account Response
type PutServiceCenterRepresentativeWorkdayAccountResponseType struct {
	ServiceCenterRepresentativeWorkdayAccountReference *ServiceCenterRepresentativeObjectType `xml:"urn:com.workday/bsvc Service_Center_Representative_Workday_Account_Reference,omitempty"`
	Version                                            string                                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The request to edit sexual orientation data for a worker.
type PutSexualOrientationRequestType struct {
	SexualOrientationReference *SexualOrientationObjectType `xml:"urn:com.workday/bsvc Sexual_Orientation_Reference,omitempty"`
	SexualOrientationData      *SexualOrientationDataType   `xml:"urn:com.workday/bsvc Sexual_Orientation_Data"`
	AddOnly                    bool                         `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                    string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response to the sexual orientation put request.
type PutSexualOrientationResponseType struct {
	SexualOrientationReference *SexualOrientationObjectType `xml:"urn:com.workday/bsvc Sexual_Orientation_Reference,omitempty"`
	Version                    string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Put Social Benefits Locality
type PutSocialBenefitsLocalityRequestType struct {
	SocialBenefitsLocalityReference *SocialBenefitsLocalityObjectType `xml:"urn:com.workday/bsvc Social_Benefits_Locality_Reference,omitempty"`
	SocialBenefitsLocalityData      *SocialBenefitsLocalityDataType   `xml:"urn:com.workday/bsvc Social_Benefits_Locality_Data"`
	AddOnly                         bool                              `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                         string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for the Put Political Affiliation operation.
type PutSocialBenefitsLocalityResponseType struct {
	SocialBenefitsLocalityReference *SocialBenefitsLocalityObjectType `xml:"urn:com.workday/bsvc Social_Benefits_Locality_Reference,omitempty"`
	Version                         string                            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Sort Order Enabled Web Service request element.
type PutSortOrderEnabledRequestType struct {
	SortOrderEnabledData *SortOrderEnabledOrderDataContainerType `xml:"urn:com.workday/bsvc Sort_Order_Enabled_Data"`
	Version              string                                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Sort Order Enabled Web Service Response.
type PutSortOrderEnabledResponseType struct {
	SortOrderEnabledReference *SortOrderEnabledObjectType `xml:"urn:com.workday/bsvc Sort_Order_Enabled_Reference,omitempty"`
	Version                   string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element for Put Training
type PutTrainingTypeRequestType struct {
	TrainingTypeReference *TrainingTypeObjectType `xml:"urn:com.workday/bsvc Training_Type_Reference,omitempty"`
	TrainingTypeData      *TrainingTypeDataType   `xml:"urn:com.workday/bsvc Training_Type_Data,omitempty"`
	AddOnly               bool                    `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element for Put Training Type
type PutTrainingTypeResponseType struct {
	TrainingTypeReference *TrainingTypeObjectType `xml:"urn:com.workday/bsvc Training_Type_Reference,omitempty"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Request for Universal Identifiers. It's required to put a Person Reference in either Person Reference. Either place a manual Universal ID or no Universal ID, if no Universal ID is supplied it will use the Universal ID generator.
type PutUniversalIdentifierRequestType struct {
	PersonReference         *RoleObjectType              `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIdentifierData *UniversalIdentifierDataType `xml:"urn:com.workday/bsvc Universal_Identifier_Data"`
	AddOnly                 bool                         `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                 string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Universal Identifier Response
type PutUniversalIdentifierResponseType struct {
	PersonReference []RoleObjectType `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	Version         string           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Work Schedule Calendar and Events.
type PutWorkScheduleCalendarRequestType struct {
	WorkScheduleCalendarReference *WorkScheduleCalendarObjectType `xml:"urn:com.workday/bsvc Work_Schedule_Calendar_Reference,omitempty"`
	WorkScheduleCalendarData      *WorkScheduleCalendarDataType   `xml:"urn:com.workday/bsvc Work_Schedule_Calendar_Data"`
	AddOnly                       bool                            `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                       string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Put Work Schedule Calendar response.
type PutWorkScheduleCalendarResponseType struct {
	WorkScheduleCalendarReference *WorkScheduleCalendarObjectType `xml:"urn:com.workday/bsvc Work_Schedule_Calendar_Reference,omitempty"`
	Version                       string                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains data for adding or updating a Work Shift.
type PutWorkShiftRequestType struct {
	WorkShiftReference *WorkShiftObjectType `xml:"urn:com.workday/bsvc Work_Shift_Reference,omitempty"`
	WorkShiftData      *WorkShiftDataType   `xml:"urn:com.workday/bsvc Work_Shift_Data"`
	AddOnly            bool                 `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version            string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element Containing Put Work Shift Response Data
type PutWorkShiftResponseType struct {
	WorkShiftReference *WorkShiftObjectType `xml:"urn:com.workday/bsvc Work_Shift_Reference,omitempty"`
	Version            string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Request element to add or update Work Status Rule Set
type PutWorkStatusRuleSetRequestType struct {
	WorkStatusRuleSetReference *WorkStatusRuleSetObjectType `xml:"urn:com.workday/bsvc Work_Status_Rule_Set_Reference,omitempty"`
	WorkStatusRuleSetData      *WorkStatusRuleSetDataType   `xml:"urn:com.workday/bsvc Work_Status_Rule_Set_Data,omitempty"`
	AddOnly                    bool                         `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                    string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Work Status Rule Set Response from Put Request
type PutWorkStatusRuleSetResponseType struct {
	WorkStatusRuleSetReference *WorkStatusRuleSetObjectType `xml:"urn:com.workday/bsvc Work_Status_Rule_Set_Reference,omitempty"`
	Version                    string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains data for Adding/Updating a workers photo,
type PutWorkerPhotoRequestType struct {
	WorkerReference *WorkerObjectType      `xml:"urn:com.workday/bsvc Worker_Reference"`
	WorkerPhotoData *EmployeePhotoDataType `xml:"urn:com.workday/bsvc Worker_Photo_Data"`
	Version         string                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Put Worker Photo Response Information.
type PutWorkerPhotoResponseType struct {
	WorkerReference *WorkerObjectType `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	Version         string            `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains data for adding or updating a Workers' Compensation Code.
type PutWorkersCompensationCodeRequestType struct {
	WorkersCompensationCodeReference *WorkersCompensationCodeObjectType `xml:"urn:com.workday/bsvc Workers_Compensation_Code_Reference,omitempty"`
	WorkersCompensationCodeData      *WorkersCompensationCodeDataType   `xml:"urn:com.workday/bsvc Workers_Compensation_Code_Data"`
	AddOnly                          bool                               `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Put Workers' Compensation Code Response Data
type PutWorkersCompensationCodeResponseType struct {
	WorkersCompensationCodeReference *WorkersCompensationCodeObjectType `xml:"urn:com.workday/bsvc Workers_Compensation_Code_Reference,omitempty"`
	Version                          string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Add a new Membership to the Workteam.
type PutWorkteamMembershipRequestType struct {
	WorkteamReference      *WorkteamObjectType          `xml:"urn:com.workday/bsvc Workteam_Reference"`
	WorkteamMembershipData []WorkteamMembershipDataType `xml:"urn:com.workday/bsvc Workteam_Membership_Data"`
	Version                string                       `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response containing workteam membership reference.
type PutWorkteamMembershipResponseType struct {
	WorkteamMembershipReference *WorkteamObjectType `xml:"urn:com.workday/bsvc Workteam_Membership_Reference,omitempty"`
	Version                     string              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Workteam reference for update and all Workteam data items.
type PutWorkteamRequestType struct {
	AddOnly           *bool               `xml:"urn:com.workday/bsvc Add_Only,omitempty"`
	WorkteamReference *WorkteamObjectType `xml:"urn:com.workday/bsvc Workteam_Reference,omitempty"`
	WorkteamData      *WorkteamDataType   `xml:"urn:com.workday/bsvc Workteam_Data"`
	Version           string              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Element containing Put Workteam Response.
type PutWorkteamResponseType struct {
	WorkteamReference *WorkteamObjectType `xml:"urn:com.workday/bsvc Workteam_Reference,omitempty"`
	Version           string              `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Encapsulating element containing all Qualification data.
type QualificationDataType struct {
	EducationData              []EducationHistoryDataType       `xml:"urn:com.workday/bsvc Education_Data,omitempty"`
	ProfessionalExperienceData []ProfessionalExperienceDataType `xml:"urn:com.workday/bsvc Professional_Experience_Data,omitempty"`
}

// Element containing the qualification data for a Position Restriction or Job Profile.
type QualificationDataforPositionRestrictionorJobProfileType struct {
	ResponsibilityQualificationReplacement *ResponsibilityQualificationReplacementType `xml:"urn:com.workday/bsvc Responsibility_Qualification_Replacement,omitempty"`
	WorkExperienceQualificationReplacement *WorkExperienceQualificationReplacementType `xml:"urn:com.workday/bsvc Work_Experience_Qualification_Replacement,omitempty"`
	EducationQualificationReplacement      *EducationQualificationReplacementType      `xml:"urn:com.workday/bsvc Education_Qualification_Replacement,omitempty"`
	LanguageQualificationReplacement       *LanguageQualificationReplacementType       `xml:"urn:com.workday/bsvc Language_Qualification_Replacement,omitempty"`
	CompetencyQualificationReplacement     *CompetencyQualificationReplacementType     `xml:"urn:com.workday/bsvc Competency_Qualification_Replacement,omitempty"`
	CertificationQualificationReplacement  *CertificationQualificationReplacementType  `xml:"urn:com.workday/bsvc Certification_Qualification_Replacement,omitempty"`
	TrainingQualificationReplacement       *TrainingQualificationReplacementType       `xml:"urn:com.workday/bsvc Training_Qualification_Replacement,omitempty"`
	SkillQualificationReplacement          *SkillQualificationReplacementType          `xml:"urn:com.workday/bsvc Skill_Qualification_Replacement,omitempty"`
}

// Court Order Details. NOTE: You must pass in the entire set of court orders. Any existing court orders that are not submitted will be removed.
type QualifiedDomesticRelationsOrderReplacementDataType struct {
	BenefitCoverageTypeReference *BenefitCoverageTypeObjectType `xml:"urn:com.workday/bsvc Benefit_Coverage_Type_Reference"`
	StartDate                    time.Time                      `xml:"urn:com.workday/bsvc Start_Date"`
	EndDate                      time.Time                      `xml:"urn:com.workday/bsvc End_Date"`
}

func (t *QualifiedDomesticRelationsOrderReplacementDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T QualifiedDomesticRelationsOrderReplacementDataType
	var layout struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(&layout.T.StartDate)
	layout.EndDate = (*xsdDate)(&layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *QualifiedDomesticRelationsOrderReplacementDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T QualifiedDomesticRelationsOrderReplacementDataType
	var overlay struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(&overlay.T.StartDate)
	overlay.EndDate = (*xsdDate)(&overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Input for the Reactivate Organization Web Service.
type ReactivateOrganizationRequestType struct {
	OrganizationReference *OrganizationObjectType `xml:"urn:com.workday/bsvc Organization_Reference"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response for the Reactivate Organization Web Service
type ReactivateOrganizationResponseType struct {
	OrganizationReference *OrganizationObjectType `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	Version               string                  `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element for the 'Reassign Superior to Inactive Organization' web service.
type ReassignSuperiortoInactiveOrganizationDataType struct {
	OrganizationInactiveReference *OrganizationObjectType `xml:"urn:com.workday/bsvc Organization_Inactive_Reference,omitempty"`
}

// Provides ability to assign the previous superior to an organization that is currently inactive and does not currently have a superior.
type ReassignSuperiortoInactiveOrganizationRequestType struct {
	BusinessProcessParameters                  *BusinessProcessParametersType                  `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ReassignSuperiortoInactiveOrganizationData *ReassignSuperiortoInactiveOrganizationDataType `xml:"urn:com.workday/bsvc Reassign_Superior_to_Inactive_Organization_Data"`
	Version                                    string                                          `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Responds with the Event ID for the Assign Superior Event.
type ReassignSuperiortoInactiveOrganizationResponseType struct {
	EventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Event_Reference,omitempty"`
	Version        string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Wrapper element containing recurrence data for the Calendar Event.
type RecurrenceDataType struct {
	RecurrenceTypeReference      *ScheduleRequestTypeObjectType `xml:"urn:com.workday/bsvc Recurrence_Type_Reference"`
	RecurrenceIntervalMultiplier float64                        `xml:"urn:com.workday/bsvc Recurrence_Interval_Multiplier,omitempty"`
	RecursEveryWeekday           *bool                          `xml:"urn:com.workday/bsvc Recurs_Every_Weekday,omitempty"`
	DayoftheWeekReference        []DayoftheWeekObjectType       `xml:"urn:com.workday/bsvc Day_of_the_Week_Reference,omitempty"`
	FirstDayoftheWeekReference   *DayoftheWeekObjectType        `xml:"urn:com.workday/bsvc First_Day_of_the_Week_Reference,omitempty"`
	MonthReference               []MonthObjectType              `xml:"urn:com.workday/bsvc Month_Reference,omitempty"`
	DayoftheMonthReference       []DayoftheMonthObjectType      `xml:"urn:com.workday/bsvc Day_of_the_Month_Reference,omitempty"`
	WeekoftheMonthReference      *WeekoftheMonthObjectType      `xml:"urn:com.workday/bsvc Week_of_the_Month_Reference,omitempty"`
	RecurrenceStartDate          time.Time                      `xml:"urn:com.workday/bsvc Recurrence_Start_Date"`
	RecurrenceEndDate            *time.Time                     `xml:"urn:com.workday/bsvc Recurrence_End_Date,omitempty"`
}

func (t *RecurrenceDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T RecurrenceDataType
	var layout struct {
		*T
		RecurrenceStartDate *xsdDate `xml:"urn:com.workday/bsvc Recurrence_Start_Date"`
		RecurrenceEndDate   *xsdDate `xml:"urn:com.workday/bsvc Recurrence_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.RecurrenceStartDate = (*xsdDate)(&layout.T.RecurrenceStartDate)
	layout.RecurrenceEndDate = (*xsdDate)(layout.T.RecurrenceEndDate)
	return e.EncodeElement(layout, start)
}
func (t *RecurrenceDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T RecurrenceDataType
	var overlay struct {
		*T
		RecurrenceStartDate *xsdDate `xml:"urn:com.workday/bsvc Recurrence_Start_Date"`
		RecurrenceEndDate   *xsdDate `xml:"urn:com.workday/bsvc Recurrence_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.RecurrenceStartDate = (*xsdDate)(&overlay.T.RecurrenceStartDate)
	overlay.RecurrenceEndDate = (*xsdDate)(overlay.T.RecurrenceEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Reference Letter Event Element
type ReferenceLetterEventDataType struct {
	WorkerReference           *WorkerObjectType                  `xml:"urn:com.workday/bsvc Worker_Reference"`
	DocumentLanguageReference *UserLanguageObjectType            `xml:"urn:com.workday/bsvc Document_Language_Reference,omitempty"`
	TemplateReference         *ReferenceLetterTemplateObjectType `xml:"urn:com.workday/bsvc Template_Reference"`
}

// Contains a unique identifier for an instance of an object.
type ReferenceLetterTemplateObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ReferenceLetterTemplateObjectType struct {
	ID         []ReferenceLetterTemplateObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Related Person data.
type RelatedPersonDataType struct {
	RelatedPersonDescriptorData *RelatedPersonDescriptorDataType `xml:"urn:com.workday/bsvc Related_Person_Descriptor_Data,omitempty"`
	PersonData                  *PersonDataType                  `xml:"urn:com.workday/bsvc Person_Data"`
	ExternalContactData         *ExternalContactDataType         `xml:"urn:com.workday/bsvc External_Contact_Data,omitempty"`
	EmergencyContactData        *EmergencyContactDataWWSType     `xml:"urn:com.workday/bsvc Emergency_Contact_Data,omitempty"`
	BeneficiaryData             *BeneficiaryDataWWSType          `xml:"urn:com.workday/bsvc Beneficiary_Data,omitempty"`
	DependentData               *DependentDataWWSType            `xml:"urn:com.workday/bsvc Dependent_Data,omitempty"`
}

// Encapsulating element containing all Related Person Descriptor data.
type RelatedPersonDescriptorDataType struct {
	RelatedPersonRelationshipName string `xml:"urn:com.workday/bsvc Related_Person_Relationship_Name,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type RelatedPersonRelationshipObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type RelatedPersonRelationshipObjectType struct {
	ID         []RelatedPersonRelationshipObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Related Person data.
type RelatedPersonType struct {
	RelatedPersonRelationshipReference []RelatedPersonRelationshipObjectType `xml:"urn:com.workday/bsvc Related_Person_Relationship_Reference,omitempty"`
	PersonReference                    *UniqueIdentifierObjectType           `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	PersonalData                       *PersonalInformationDataType          `xml:"urn:com.workday/bsvc Personal_Data,omitempty"`
	Dependent                          *DependentType                        `xml:"urn:com.workday/bsvc Dependent,omitempty"`
	Beneficiary                        *BeneficiaryType                      `xml:"urn:com.workday/bsvc Beneficiary,omitempty"`
	EmergencyContact                   *OldEmergencyContactType              `xml:"urn:com.workday/bsvc Emergency_Contact,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type RelatedPersonforWorkerObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type RelatedPersonforWorkerObjectType struct {
	ID         []RelatedPersonforWorkerObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Related Persons data.
type RelatedPersonsDataType struct {
	RelatedPersonData []RelatedPersonDataType `xml:"urn:com.workday/bsvc Related_Person_Data,omitempty"`
}

// contains relative names for a relative of a person
type RelativeNameDataType struct {
	RelativeNameReferenceReference *RelativeNameReferenceObjectType `xml:"urn:com.workday/bsvc Relative_Name_Reference_Reference,omitempty"`
	RelativeTypeReference          *RelativeTypeObjectType          `xml:"urn:com.workday/bsvc Relative_Type_Reference,omitempty"`
	NameDetailData                 *PersonNameDetailDataType        `xml:"urn:com.workday/bsvc Name_Detail_Data,omitempty"`
	Delete                         bool                             `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Wrapper element for all relative names of a person
type RelativeNameInformationDataType struct {
	RelativeNameData []RelativeNameDataType `xml:"urn:com.workday/bsvc Relative_Name_Data,omitempty"`
	ReplaceAll       bool                   `xml:"urn:com.workday/bsvc Replace_All,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type RelativeNameReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type RelativeNameReferenceObjectType struct {
	ID         []RelativeNameReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type RelativeTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type RelativeTypeObjectType struct {
	ID         []RelativeTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ReligionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ReligionObjectType struct {
	ID         []ReligionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type RelocationAreaObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type RelocationAreaObjectType struct {
	ID         []RelocationAreaObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the information about the employee's willingness to relocate as part of their job.
type RelocationPreferenceDataType struct {
	ShortTermRelocationReference     *CommonBooleanEnumerationObjectType `xml:"urn:com.workday/bsvc Short_Term_Relocation_Reference,omitempty"`
	ShortTermRelocationAreaReference []RelocationAreaObjectType          `xml:"urn:com.workday/bsvc Short_Term_Relocation_Area__Reference,omitempty"`
	LongTermRelocationReference      *CommonBooleanEnumerationObjectType `xml:"urn:com.workday/bsvc Long_Term_Relocation_Reference,omitempty"`
	LongTermRelocationAreaReference  []RelocationAreaObjectType          `xml:"urn:com.workday/bsvc Long_Term_Relocation_Area__Reference,omitempty"`
	AdditionalInformation            string                              `xml:"urn:com.workday/bsvc Additional_Information,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ReorganizationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ReorganizationObjectType struct {
	ID         []ReorganizationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The request element containing all necessary information to report a Safety Incident.
type ReportSafetyIncidentDataType struct {
	SafetyIncidentReferenceID       string                                `xml:"urn:com.workday/bsvc Safety_Incident_Reference_ID,omitempty"`
	StatusReference                 *SafetyIncidentStatusObjectType       `xml:"urn:com.workday/bsvc Status_Reference,omitempty"`
	IncidentDateandTime             time.Time                             `xml:"urn:com.workday/bsvc Incident_Date_and_Time"`
	NotificationDateandTime         *time.Time                            `xml:"urn:com.workday/bsvc Notification_Date_and_Time,omitempty"`
	LocationReference               *LocationObjectType                   `xml:"urn:com.workday/bsvc Location_Reference"`
	ReportedByWorkerReference       *WorkerObjectType                     `xml:"urn:com.workday/bsvc Reported_By_Worker_Reference,omitempty"`
	ReportedToWorkerReference       *WorkerObjectType                     `xml:"urn:com.workday/bsvc Reported_To_Worker_Reference,omitempty"`
	SupervisedByWorkerReference     *WorkerObjectType                     `xml:"urn:com.workday/bsvc Supervised_By_Worker_Reference,omitempty"`
	SafetyIncidentTypeReference     *SafetyIncidentTypeObjectType         `xml:"urn:com.workday/bsvc Safety_Incident_Type_Reference,omitempty"`
	SafetyIncidentLocationReference *SafetyIncidentLocationObjectType     `xml:"urn:com.workday/bsvc Safety_Incident_Location_Reference,omitempty"`
	IncidentSummary                 string                                `xml:"urn:com.workday/bsvc Incident_Summary,omitempty"`
	NoteData                        []SafetyIncidentNoteDataType          `xml:"urn:com.workday/bsvc Note_Data,omitempty"`
	FileData                        []SafetyIncidentFileDataType          `xml:"urn:com.workday/bsvc File_Data,omitempty"`
	InvolvedPartyData               []SafetyIncidentInvolvedPartyDataType `xml:"urn:com.workday/bsvc Involved_Party_Data,omitempty"`
}

func (t *ReportSafetyIncidentDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ReportSafetyIncidentDataType
	var layout struct {
		*T
		IncidentDateandTime     *xsdDateTime `xml:"urn:com.workday/bsvc Incident_Date_and_Time"`
		NotificationDateandTime *xsdDateTime `xml:"urn:com.workday/bsvc Notification_Date_and_Time,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IncidentDateandTime = (*xsdDateTime)(&layout.T.IncidentDateandTime)
	layout.NotificationDateandTime = (*xsdDateTime)(layout.T.NotificationDateandTime)
	return e.EncodeElement(layout, start)
}
func (t *ReportSafetyIncidentDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ReportSafetyIncidentDataType
	var overlay struct {
		*T
		IncidentDateandTime     *xsdDateTime `xml:"urn:com.workday/bsvc Incident_Date_and_Time"`
		NotificationDateandTime *xsdDateTime `xml:"urn:com.workday/bsvc Notification_Date_and_Time,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IncidentDateandTime = (*xsdDateTime)(&overlay.T.IncidentDateandTime)
	overlay.NotificationDateandTime = (*xsdDateTime)(overlay.T.NotificationDateandTime)
	return d.DecodeElement(&overlay, &start)
}

// The request element containing all necessary information to report a Safety Incident.
type ReportSafetyIncidentRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	ReportSafetyIncidentData  *ReportSafetyIncidentDataType  `xml:"urn:com.workday/bsvc Report_Safety_Incident_Data"`
	Version                   string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response element containing all necessary information to upload a safety incident.
type ReportSafetyIncidentResponseType struct {
	ReportSafetyIncidentEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Report_Safety_Incident_Event_Reference,omitempty"`
	Version                            string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Data about time away for the involved party.
type ReportSafetyIncidentTimeAwayDataType struct {
	SafetyIncidentTimeAwayTypeReference *SafetyIncidentTimeAwayTypeObjectType `xml:"urn:com.workday/bsvc Safety_Incident_Time_Away_Type_Reference"`
	StartDate                           time.Time                             `xml:"urn:com.workday/bsvc Start_Date"`
	ProposedEndDate                     *time.Time                            `xml:"urn:com.workday/bsvc Proposed_End_Date,omitempty"`
	ActualEndDate                       *time.Time                            `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
}

func (t *ReportSafetyIncidentTimeAwayDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ReportSafetyIncidentTimeAwayDataType
	var layout struct {
		*T
		StartDate       *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		ProposedEndDate *xsdDate `xml:"urn:com.workday/bsvc Proposed_End_Date,omitempty"`
		ActualEndDate   *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(&layout.T.StartDate)
	layout.ProposedEndDate = (*xsdDate)(layout.T.ProposedEndDate)
	layout.ActualEndDate = (*xsdDate)(layout.T.ActualEndDate)
	return e.EncodeElement(layout, start)
}
func (t *ReportSafetyIncidentTimeAwayDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ReportSafetyIncidentTimeAwayDataType
	var overlay struct {
		*T
		StartDate       *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		ProposedEndDate *xsdDate `xml:"urn:com.workday/bsvc Proposed_End_Date,omitempty"`
		ActualEndDate   *xsdDate `xml:"urn:com.workday/bsvc Actual_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(&overlay.T.StartDate)
	overlay.ProposedEndDate = (*xsdDate)(overlay.T.ProposedEndDate)
	overlay.ActualEndDate = (*xsdDate)(overlay.T.ActualEndDate)
	return d.DecodeElement(&overlay, &start)
}

// All of the information about the Safety Incident being returned.
type ReportSafetyIncidentType struct {
	SafetyIncidentReference  *SafetyIncidentObjectType      `xml:"urn:com.workday/bsvc Safety_Incident_Reference,omitempty"`
	ReportSafetyIncidentData []ReportSafetyIncidentDataType `xml:"urn:com.workday/bsvc Report_Safety_Incident_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type RequirementOptionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type RequirementOptionObjectType struct {
	ID         []RequirementOptionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Parameters that let you filter the data returned in the response. You can filter returned data by dates and page attributes.
type ResponseFilterType struct {
	AsOfEffectiveDate *time.Time `xml:"urn:com.workday/bsvc As_Of_Effective_Date,omitempty"`
	AsOfEntryDateTime *time.Time `xml:"urn:com.workday/bsvc As_Of_Entry_DateTime,omitempty"`
	Page              float64    `xml:"urn:com.workday/bsvc Page,omitempty"`
	Count             float64    `xml:"urn:com.workday/bsvc Count,omitempty"`
}

func (t *ResponseFilterType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ResponseFilterType
	var layout struct {
		*T
		AsOfEffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Effective_Date,omitempty"`
		AsOfEntryDateTime *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Entry_DateTime,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfEffectiveDate = (*xsdDate)(layout.T.AsOfEffectiveDate)
	layout.AsOfEntryDateTime = (*xsdDateTime)(layout.T.AsOfEntryDateTime)
	return e.EncodeElement(layout, start)
}
func (t *ResponseFilterType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ResponseFilterType
	var overlay struct {
		*T
		AsOfEffectiveDate *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Effective_Date,omitempty"`
		AsOfEntryDateTime *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Entry_DateTime,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfEffectiveDate = (*xsdDate)(overlay.T.AsOfEffectiveDate)
	overlay.AsOfEntryDateTime = (*xsdDateTime)(overlay.T.AsOfEntryDateTime)
	return d.DecodeElement(&overlay, &start)
}

// The "Response_Results" element contains summary information about the data that has been returned from your request including "Total_Results", "Total_Pages", and the current "Page" returned.
type ResponseResultsType struct {
	TotalResults float64 `xml:"urn:com.workday/bsvc Total_Results,omitempty"`
	TotalPages   float64 `xml:"urn:com.workday/bsvc Total_Pages,omitempty"`
	PageResults  float64 `xml:"urn:com.workday/bsvc Page_Results,omitempty"`
	Page         float64 `xml:"urn:com.workday/bsvc Page,omitempty"`
}

// Replacement Element containing Responsibility Qualifications for the Job Profile.
// When updating a Job Profile, all Responsibilities for the Job Profile will be replaced by the data in being submitted. If no data is submitted, then the existing Responsibilities are not changed.
type ResponsibilityQualificationProfileReplacementDataType struct {
	ResponsibilityDescription string `xml:"urn:com.workday/bsvc Responsibility_Description"`
	Required                  *bool  `xml:"urn:com.workday/bsvc Required,omitempty"`
}

// Wrapper element for Responsibility Qualifications. Allows all responsibility qualifications for a Job Profile or Position Restriction to be removed - or to replace all existing qualifications with those sent in the web service.
type ResponsibilityQualificationReplacementType struct {
	ResponsibilityQualificationReplacementData []ResponsibilityQualificationProfileReplacementDataType `xml:"urn:com.workday/bsvc Responsibility_Qualification_Replacement_Data,omitempty"`
	Delete                                     bool                                                    `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type RetentionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type RetentionObjectType struct {
	ID         []RetentionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the retirement savings election information for the benefit plan year period.
type RetirementSavingsDataType struct {
	RetirementSavingsPeriodData []WorkerRetirementSavingsPeriodDataType `xml:"urn:com.workday/bsvc Retirement_Savings_Period_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ReviewRatingObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ReviewRatingObjectType struct {
	ID         []ReviewRatingObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ReviewTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ReviewTypeObjectType struct {
	ID         []ReviewTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type RoleAssignerObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type RoleAssignerObjectType struct {
	ID         []RoleAssignerObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type RoleObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type RoleObjectType struct {
	ID         []RoleObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The file that will be attached to the safety incident.
type SafetyIncidentFileDataType struct {
	SafetyIncidentFileAttachmentReference *SafetyIncidentFileObjectType `xml:"urn:com.workday/bsvc Safety_Incident_File_Attachment_Reference,omitempty"`
	FileAttachmentData                    []AttachmentWWSDataType       `xml:"urn:com.workday/bsvc File_Attachment_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SafetyIncidentFileObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SafetyIncidentFileObjectType struct {
	ID         []SafetyIncidentFileObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// All of the information to add an involved party to the safety incident.
type SafetyIncidentInvolvedPartyDataType struct {
	InvolvedPartyWorkerReference      *WorkerObjectType                              `xml:"urn:com.workday/bsvc Involved_Party_Worker_Reference,omitempty"`
	InvolvedPartyNonWorkerFirstName   string                                         `xml:"urn:com.workday/bsvc Involved_Party_Non-Worker_First_Name,omitempty"`
	InvolvedPartyNonWorkerLastName    string                                         `xml:"urn:com.workday/bsvc Involved_Party_Non-Worker_Last_Name,omitempty"`
	InvolvedPartyNonWorkerPhoneNumber string                                         `xml:"urn:com.workday/bsvc Involved_Party_Non-Worker_Phone_Number,omitempty"`
	OrganizationReference             []OrganizationObjectType                       `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	EmployeeDescriptionofIncident     string                                         `xml:"urn:com.workday/bsvc Employee_Description_of_Incident,omitempty"`
	NatureofInjuryIllnessData         *SafetyIncidentNatureofInjuryorIllnessDataType `xml:"urn:com.workday/bsvc Nature_of_Injury_Illness_Data,omitempty"`
	ReportDetailsData                 *SafetyIncidentReportDetailsDataType           `xml:"urn:com.workday/bsvc Report_Details_Data,omitempty"`
	TimeLostData                      *TimeLostDataType                              `xml:"urn:com.workday/bsvc Time_Lost_Data,omitempty"`
	InvolvedPartyNoteData             []SafetyIncidentNoteDataType                   `xml:"urn:com.workday/bsvc Involved_Party_Note_Data,omitempty"`
	InvolvedPartyFileData             []SafetyIncidentFileDataType                   `xml:"urn:com.workday/bsvc Involved_Party_File_Data,omitempty"`
}

// Safety Incident Location Data
type SafetyIncidentLocationDataType struct {
	SafetyIncidentLocationName         string                               `xml:"urn:com.workday/bsvc Safety_Incident_Location_Name"`
	Code                               string                               `xml:"urn:com.workday/bsvc Code,omitempty"`
	SafetyIncidentLocationDescription  string                               `xml:"urn:com.workday/bsvc Safety_Incident_Location_Description,omitempty"`
	LocationReference                  *LocationObjectType                  `xml:"urn:com.workday/bsvc Location_Reference"`
	GovernmentReportingAgencyReference *GovernmentReportingAgencyObjectType `xml:"urn:com.workday/bsvc Government_Reporting_Agency_Reference"`
	RelatedReportingAgencysGroupingID  string                               `xml:"urn:com.workday/bsvc Related_Reporting_Agency_s_Grouping_ID"`
	Inactive                           *bool                                `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SafetyIncidentLocationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SafetyIncidentLocationObjectType struct {
	ID         []SafetyIncidentLocationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Safety Incident Location Request Criteria
type SafetyIncidentLocationRequestCriteriaType struct {
}

// Safety Incident Location Request Reference
type SafetyIncidentLocationRequestReferenceType struct {
	SafetyIncidentLocationReference []SafetyIncidentLocationObjectType `xml:"urn:com.workday/bsvc Safety_Incident_Location_Reference"`
}

// Safety Incident Location Response Data
type SafetyIncidentLocationResponseDataType struct {
	SafetyIncidentLocation []SafetyIncidentLocationType `xml:"urn:com.workday/bsvc Safety_Incident_Location,omitempty"`
}

// Safety Incident Location Response Group
type SafetyIncidentLocationResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Safety Incident Location
type SafetyIncidentLocationType struct {
	SafetyIncidentLocationReference *SafetyIncidentLocationObjectType `xml:"urn:com.workday/bsvc Safety_Incident_Location_Reference,omitempty"`
	SafetyIncidentLocationData      *SafetyIncidentLocationDataType   `xml:"urn:com.workday/bsvc Safety_Incident_Location_Data,omitempty"`
}

// The nature of the injury illness of the involved party.
type SafetyIncidentNatureofInjuryorIllnessDataType struct {
	TimeArrivedatWork              *time.Time                                   `xml:"urn:com.workday/bsvc Time_Arrived_at_Work,omitempty"`
	InjuryIllnessNatureReference   *InjuryIllnessNatureObjectType               `xml:"urn:com.workday/bsvc Injury_Illness_Nature_Reference,omitempty"`
	InjuryIllnessBodyPartReference *InjuryIllnessBodyPartObjectType             `xml:"urn:com.workday/bsvc Injury_Illness_Body_Part_Reference,omitempty"`
	InjuryIllnessSourceReference   *InjuryIllnessSourceObjectType               `xml:"urn:com.workday/bsvc Injury_Illness_Source_Reference,omitempty"`
	ObjectorSubstance              string                                       `xml:"urn:com.workday/bsvc Object_or_Substance,omitempty"`
	InjuryIllnessWorkRelated       *bool                                        `xml:"urn:com.workday/bsvc Injury_Illness_Work_Related,omitempty"`
	InjuryIllnessPrivacyCase       *bool                                        `xml:"urn:com.workday/bsvc Injury_Illness_Privacy_Case,omitempty"`
	InjuryIllnessSentHome          *bool                                        `xml:"urn:com.workday/bsvc Injury_Illness_Sent_Home,omitempty"`
	InjuryIllnessSeverityReference *InjuryIllnessSeverityObjectType             `xml:"urn:com.workday/bsvc Injury_Illness_Severity_Reference,omitempty"`
	InjuryIllnessTreatmentRequired *bool                                        `xml:"urn:com.workday/bsvc Injury_Illness_Treatment_Required,omitempty"`
	TreatmentDescription           string                                       `xml:"urn:com.workday/bsvc Treatment_Description,omitempty"`
	InjuryIllnessAffectedPartyDied *bool                                        `xml:"urn:com.workday/bsvc Injury_Illness_Affected_Party_Died,omitempty"`
	DateofDeath                    *time.Time                                   `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
	TreatmentDispositionData       []SafetyIncidentTreatmentDispositionDataType `xml:"urn:com.workday/bsvc Treatment_Disposition_Data,omitempty"`
}

func (t *SafetyIncidentNatureofInjuryorIllnessDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T SafetyIncidentNatureofInjuryorIllnessDataType
	var layout struct {
		*T
		TimeArrivedatWork *xsdDateTime `xml:"urn:com.workday/bsvc Time_Arrived_at_Work,omitempty"`
		DateofDeath       *xsdDate     `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
	}
	layout.T = (*T)(t)
	layout.TimeArrivedatWork = (*xsdDateTime)(layout.T.TimeArrivedatWork)
	layout.DateofDeath = (*xsdDate)(layout.T.DateofDeath)
	return e.EncodeElement(layout, start)
}
func (t *SafetyIncidentNatureofInjuryorIllnessDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T SafetyIncidentNatureofInjuryorIllnessDataType
	var overlay struct {
		*T
		TimeArrivedatWork *xsdDateTime `xml:"urn:com.workday/bsvc Time_Arrived_at_Work,omitempty"`
		DateofDeath       *xsdDate     `xml:"urn:com.workday/bsvc Date_of_Death,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.TimeArrivedatWork = (*xsdDateTime)(overlay.T.TimeArrivedatWork)
	overlay.DateofDeath = (*xsdDate)(overlay.T.DateofDeath)
	return d.DecodeElement(&overlay, &start)
}

// The note data for the involved party.
type SafetyIncidentNoteDataType struct {
	NoteDate      *time.Time `xml:"urn:com.workday/bsvc Note_Date,omitempty"`
	NoteSubject   string     `xml:"urn:com.workday/bsvc Note_Subject,omitempty"`
	NoteContent   string     `xml:"urn:com.workday/bsvc Note_Content,omitempty"`
	IsWitnessNote *bool      `xml:"urn:com.workday/bsvc Is_Witness_Note,omitempty"`
}

func (t *SafetyIncidentNoteDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T SafetyIncidentNoteDataType
	var layout struct {
		*T
		NoteDate *xsdDate `xml:"urn:com.workday/bsvc Note_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.NoteDate = (*xsdDate)(layout.T.NoteDate)
	return e.EncodeElement(layout, start)
}
func (t *SafetyIncidentNoteDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T SafetyIncidentNoteDataType
	var overlay struct {
		*T
		NoteDate *xsdDate `xml:"urn:com.workday/bsvc Note_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NoteDate = (*xsdDate)(overlay.T.NoteDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type SafetyIncidentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SafetyIncidentObjectType struct {
	ID         []SafetyIncidentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The report details of the safety incident for the involved party.
type SafetyIncidentReportDetailsDataType struct {
	GovernmentReportable       *bool                                 `xml:"urn:com.workday/bsvc Government_Reportable,omitempty"`
	CaseNumber                 string                                `xml:"urn:com.workday/bsvc Case_Number,omitempty"`
	ClaimRemovedDate           *time.Time                            `xml:"urn:com.workday/bsvc Claim_Removed_Date,omitempty"`
	InjuryIllnessTypeReference *XMLNAMEUSInjuryIllnessTypeObjectType `xml:"urn:com.workday/bsvc Injury_Illness_Type_Reference,omitempty"`
	SpecificWorkArea           string                                `xml:"urn:com.workday/bsvc Specific_Work_Area,omitempty"`
	InvestigationDueDate       *time.Time                            `xml:"urn:com.workday/bsvc Investigation_Due_Date,omitempty"`
	WorkerCompLegalClaimNumber string                                `xml:"urn:com.workday/bsvc Worker_Comp_Legal_Claim_Number,omitempty"`
	ClaimAdministratorCode     string                                `xml:"urn:com.workday/bsvc Claim_Administrator_Code,omitempty"`
	WorkerPriorActivity        string                                `xml:"urn:com.workday/bsvc Worker_Prior_Activity,omitempty"`
	WhatHappened               string                                `xml:"urn:com.workday/bsvc What_Happened,omitempty"`
	PreventativeMeasures       string                                `xml:"urn:com.workday/bsvc Preventative_Measures,omitempty"`
}

func (t *SafetyIncidentReportDetailsDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T SafetyIncidentReportDetailsDataType
	var layout struct {
		*T
		ClaimRemovedDate     *xsdDate `xml:"urn:com.workday/bsvc Claim_Removed_Date,omitempty"`
		InvestigationDueDate *xsdDate `xml:"urn:com.workday/bsvc Investigation_Due_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ClaimRemovedDate = (*xsdDate)(layout.T.ClaimRemovedDate)
	layout.InvestigationDueDate = (*xsdDate)(layout.T.InvestigationDueDate)
	return e.EncodeElement(layout, start)
}
func (t *SafetyIncidentReportDetailsDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T SafetyIncidentReportDetailsDataType
	var overlay struct {
		*T
		ClaimRemovedDate     *xsdDate `xml:"urn:com.workday/bsvc Claim_Removed_Date,omitempty"`
		InvestigationDueDate *xsdDate `xml:"urn:com.workday/bsvc Investigation_Due_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ClaimRemovedDate = (*xsdDate)(overlay.T.ClaimRemovedDate)
	overlay.InvestigationDueDate = (*xsdDate)(overlay.T.InvestigationDueDate)
	return d.DecodeElement(&overlay, &start)
}

// Safety Incident Request Reference
type SafetyIncidentRequestReferencesType struct {
	SafetyIncidentReference []SafetyIncidentObjectType `xml:"urn:com.workday/bsvc Safety_Incident_Reference"`
}

// Safety Incident Response Data
type SafetyIncidentResponseDataType struct {
	ReportSafetyIncident []ReportSafetyIncidentType `xml:"urn:com.workday/bsvc Report_Safety_Incident,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SafetyIncidentStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SafetyIncidentStatusObjectType struct {
	ID         []SafetyIncidentStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SafetyIncidentTimeAwayTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SafetyIncidentTimeAwayTypeObjectType struct {
	ID         []SafetyIncidentTimeAwayTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The treatment documentation for the injury illness.
type SafetyIncidentTreatmentDispositionDataType struct {
	HealthTreatmentTypeReference *HealthTreatmentTypeObjectType `xml:"urn:com.workday/bsvc Health_Treatment_Type_Reference"`
	HealthTreatmentDate          time.Time                      `xml:"urn:com.workday/bsvc Health_Treatment_Date"`
	HealthFacilityReference      *HealthFacilityObjectType      `xml:"urn:com.workday/bsvc Health_Facility_Reference"`
	HealthWorkerReference        *HealthWorkerObjectType        `xml:"urn:com.workday/bsvc Health_Worker_Reference"`
}

func (t *SafetyIncidentTreatmentDispositionDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T SafetyIncidentTreatmentDispositionDataType
	var layout struct {
		*T
		HealthTreatmentDate *xsdDate `xml:"urn:com.workday/bsvc Health_Treatment_Date"`
	}
	layout.T = (*T)(t)
	layout.HealthTreatmentDate = (*xsdDate)(&layout.T.HealthTreatmentDate)
	return e.EncodeElement(layout, start)
}
func (t *SafetyIncidentTreatmentDispositionDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T SafetyIncidentTreatmentDispositionDataType
	var overlay struct {
		*T
		HealthTreatmentDate *xsdDate `xml:"urn:com.workday/bsvc Health_Treatment_Date"`
	}
	overlay.T = (*T)(t)
	overlay.HealthTreatmentDate = (*xsdDate)(&overlay.T.HealthTreatmentDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type SafetyIncidentTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SafetyIncidentTypeObjectType struct {
	ID         []SafetyIncidentTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SalaryPayPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SalaryPayPlanObjectType struct {
	ID         []SalaryPayPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SalaryUnitPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SalaryUnitPlanObjectType struct {
	ID         []SalaryUnitPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ScheduleRequestTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ScheduleRequestTypeObjectType struct {
	ID         []ScheduleRequestTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SchoolObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SchoolObjectType struct {
	ID         []SchoolObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SchoolTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SchoolTypeObjectType struct {
	ID         []SchoolTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Educational Institution Type.
type SchoolTypeReferenceType struct {
	InstitutionTypeName string `xml:"urn:com.workday/bsvc Institution_Type_Name"`
}

// Search Settings Data
type SearchSettingsDataType struct {
	ObjectTypetoSuppressfromSearchReference []UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Object_Type_to_Suppress_from_Search_Reference,omitempty"`
	Synonyms                                []SynonymWebserviceDataType  `xml:"urn:com.workday/bsvc Synonyms,omitempty"`
}

// Wrapper element that includes Search Settings data
type SearchSettingsResponseDataType struct {
	SearchSettings *SearchSettingsType `xml:"urn:com.workday/bsvc Search_Settings,omitempty"`
}

// Wrapper Element that includes Search Settings Data
type SearchSettingsType struct {
	SearchSettingsData *SearchSettingsDataType `xml:"urn:com.workday/bsvc Search_Settings_Data,omitempty"`
}

// The secondary reasons for the worker's most recent termination.
type SecondaryTerminationDataType struct {
	SecondaryTerminationReasonReference         *EventClassificationSubcategoryObjectType `xml:"urn:com.workday/bsvc Secondary_Termination_Reason_Reference,omitempty"`
	SecondaryTerminationReasonCategoryReference *EventClassificationCategoryObjectType    `xml:"urn:com.workday/bsvc Secondary_Termination_Reason_Category_Reference,omitempty"`
}

// Contains the evaluation information that was filled out by the employee.
type SelfEvaluationDetailDataType struct {
	OverallData *OverallEvaluationDetailDataType `xml:"urn:com.workday/bsvc Overall_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SelfIdentificationofDisabilityStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SelfIdentificationofDisabilityStatusObjectType struct {
	ID         []SelfIdentificationofDisabilityStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Utilize the following element to retrieve the current DateTime of the Workday system.
type ServerTimestampGetType struct {
	Version string `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing the current DateTime of the Workday system.
type ServerTimestampType struct {
	ServerTimestampData []time.Time `xml:"urn:com.workday/bsvc Server_Timestamp_Data,omitempty"`
	Version             string      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *ServerTimestampType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ServerTimestampType
	var layout struct {
		*T
		ServerTimestampData []xsdDateTime `xml:"urn:com.workday/bsvc Server_Timestamp_Data,omitempty"`
	}
	layout.T = (*T)(t)

	for _, d := range t.ServerTimestampData {
		layout.ServerTimestampData = append(layout.ServerTimestampData, xsdDateTime(d))
	}

	return e.EncodeElement(layout, start)
}
func (t *ServerTimestampType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ServerTimestampType
	var overlay struct {
		*T
		ServerTimestampData []xsdDateTime `xml:"urn:com.workday/bsvc Server_Timestamp_Data,omitempty"`
	}
	overlay.T = (*T)(t)

	err := d.DecodeElement(&overlay, &start)
	if err != nil {
		return err
	}

	for _, d := range overlay.ServerTimestampData {
		t.ServerTimestampData = append(t.ServerTimestampData, time.Time(d))
	}

	return nil
}

// Contains a unique identifier for an instance of an object.
type ServiceCenterObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ServiceCenterObjectType struct {
	ID         []ServiceCenterObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Service Center Representative Data
type ServiceCenterRepresentativeDataType struct {
	ServiceCenterReference []ServiceCenterObjectType   `xml:"urn:com.workday/bsvc Service_Center_Reference,omitempty"`
	Inactive               *bool                       `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	NameData               *LegalNameDataType          `xml:"urn:com.workday/bsvc Name_Data,omitempty"`
	ContactInformationData *ContactInformationDataType `xml:"urn:com.workday/bsvc Contact_Information_Data,omitempty"`
	ID                     string                      `xml:"urn:com.workday/bsvc ID,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type ServiceCenterRepresentativeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type ServiceCenterRepresentativeObjectType struct {
	ID         []ServiceCenterRepresentativeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request Criteria
type ServiceCenterRepresentativeRequestCriteriaType struct {
}

// Request References
type ServiceCenterRepresentativeRequestReferencesType struct {
	ServiceCenterRepresentativeReference []ServiceCenterRepresentativeObjectType `xml:"urn:com.workday/bsvc Service_Center_Representative_Reference"`
}

// Element containing Service Center Representative response data.
type ServiceCenterRepresentativeResponseDataType struct {
	ServiceCenterRepresentative []ServiceCenterRepresentativeType `xml:"urn:com.workday/bsvc Service_Center_Representative,omitempty"`
}

// Response Group
type ServiceCenterRepresentativeResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Element containing Service Center Representative data.
type ServiceCenterRepresentativeType struct {
	ServiceCenterRepresentativeReference *ServiceCenterRepresentativeObjectType `xml:"urn:com.workday/bsvc Service_Center_Representative_Reference,omitempty"`
	ServiceCenterRepresentativeData      *ServiceCenterRepresentativeDataType   `xml:"urn:com.workday/bsvc Service_Center_Representative_Data,omitempty"`
}

// Element containing Service Center Representative Workday Account data.
type ServiceCenterRepresentativeWorkdayAccountDataType struct {
	WorkdayAccountData []SystemUserDataType `xml:"urn:com.workday/bsvc Workday_Account_Data,omitempty"`
}

// Request Criteria
type ServiceCenterRepresentativeWorkdayAccountRequestCriteriaType struct {
}

// Request References
type ServiceCenterRepresentativeWorkdayAccountRequestReferencesType struct {
	ServiceCenterRepresentativeWorkdayAccountReference []ServiceCenterRepresentativeObjectType `xml:"urn:com.workday/bsvc Service_Center_Representative_Workday_Account_Reference"`
}

// Element containing Service Center Representative Workday Account response data.
type ServiceCenterRepresentativeWorkdayAccountResponseDataType struct {
	ServiceCenterRepresentativeWorkdayAccount []ServiceCenterRepresentativeWorkdayAccountType `xml:"urn:com.workday/bsvc Service_Center_Representative_Workday_Account,omitempty"`
}

// Response Group
type ServiceCenterRepresentativeWorkdayAccountResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Element containing Workday Account information for a Service Center Representative.
type ServiceCenterRepresentativeWorkdayAccountType struct {
	ServiceCenterRepresentativeWorkdayAccountReference *ServiceCenterRepresentativeObjectType              `xml:"urn:com.workday/bsvc Service_Center_Representative_Workday_Account_Reference,omitempty"`
	ServiceCenterRepresentativeWorkdayAccountData      []ServiceCenterRepresentativeWorkdayAccountDataType `xml:"urn:com.workday/bsvc Service_Center_Representative_Workday_Account_Data,omitempty"`
}

// The sexual orientation data for a worker.
type SexualOrientationDataType struct {
	ID                           string `xml:"urn:com.workday/bsvc ID,omitempty"`
	SexualOrientationName        string `xml:"urn:com.workday/bsvc Sexual_Orientation_Name"`
	SexualOrientationCode        string `xml:"urn:com.workday/bsvc Sexual_Orientation_Code,omitempty"`
	SexualOrientationDescription string `xml:"urn:com.workday/bsvc Sexual_Orientation_Description,omitempty"`
	SexualOrientationInactive    *bool  `xml:"urn:com.workday/bsvc Sexual_Orientation_Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SexualOrientationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SexualOrientationObjectType struct {
	ID         []SexualOrientationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The Criteria of the request
type SexualOrientationRequestCriteriaType struct {
}

// Reference to the sexual orientation of the person.
type SexualOrientationRequestReferencesType struct {
	SexualOrientationReference []SexualOrientationObjectType `xml:"urn:com.workday/bsvc Sexual_Orientation_Reference"`
}

// The sexual orientation response data.
type SexualOrientationResponseDataType struct {
	SexualOrientation []SexualOrientationType `xml:"urn:com.workday/bsvc Sexual_Orientation,omitempty"`
}

// The sexual orientation for a worker.
type SexualOrientationType struct {
	SexualOrientationReference *SexualOrientationObjectType `xml:"urn:com.workday/bsvc Sexual_Orientation_Reference,omitempty"`
	SexualOrientationData      []SexualOrientationDataType  `xml:"urn:com.workday/bsvc Sexual_Orientation_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SkillItemCategoryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SkillItemCategoryObjectType struct {
	ID         []SkillItemCategoryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains all the information about the Skill Item.
type SkillItemDataType struct {
	CategoryReference *SkillItemCategoryObjectType `xml:"urn:com.workday/bsvc Category_Reference,omitempty"`
	ID                string                       `xml:"urn:com.workday/bsvc ID,omitempty"`
	Name              string                       `xml:"urn:com.workday/bsvc Name,attr,omitempty"`
	Inactive          bool                         `xml:"urn:com.workday/bsvc Inactive,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SkillItemTenantedObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SkillItemTenantedObjectType struct {
	ID         []SkillItemTenantedObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for Skill Qualifications. Allows all Skill Qualifications for a Job Profile or Position Restriction to be removed - or to replace all existing Skill Qualifications with those sent in the web service.
type SkillQualificationProfileReplacementDataType struct {
	SkillReference *SkillItemTenantedObjectType `xml:"urn:com.workday/bsvc Skill_Reference,omitempty"`
	Name           string                       `xml:"urn:com.workday/bsvc Name,omitempty"`
	Required       *bool                        `xml:"urn:com.workday/bsvc Required,omitempty"`
}

// Wrapper element for Skill Qualifications. Allows all Skill Qualifications for a Job Profile or Position Restriction to be removed - or to replace all existing Skill Qualifications with those sent in the web service.
type SkillQualificationReplacementType struct {
	SkillQualificationReplacementData []SkillQualificationProfileReplacementDataType `xml:"urn:com.workday/bsvc Skill_Qualification_Replacement_Data,omitempty"`
	Delete                            bool                                           `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Wrapper element for Skill Items.
type SkillType struct {
	SkillReference *SkillItemTenantedObjectType `xml:"urn:com.workday/bsvc Skill_Reference,omitempty"`
	SkillData      *SkillItemDataType           `xml:"urn:com.workday/bsvc Skill_Data,omitempty"`
}

// Encapsulating element containing all Social Benefits Locality data.
type SocialBenefitsLocalityDataType struct {
	ID                string                     `xml:"urn:com.workday/bsvc ID,omitempty"`
	Name              string                     `xml:"urn:com.workday/bsvc Name"`
	Code              string                     `xml:"urn:com.workday/bsvc Code,omitempty"`
	Description       string                     `xml:"urn:com.workday/bsvc Description,omitempty"`
	LocationReference *LocationContextObjectType `xml:"urn:com.workday/bsvc Location_Reference"`
	Inactive          *bool                      `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SocialBenefitsLocalityObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SocialBenefitsLocalityObjectType struct {
	ID         []SocialBenefitsLocalityObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Social Benefits Locality and its associated data.
type SocialBenefitsLocalityRequestReferencesType struct {
	SocialBenefitsLocalityReference []SocialBenefitsLocalityObjectType `xml:"urn:com.workday/bsvc Social_Benefits_Locality_Reference"`
}

// Encapsulating element containing all Social Benefits Locality data.
type SocialBenefitsLocalityResponseDataType struct {
	SocialBenefitsLocality []SocialBenefitsLocalityType `xml:"urn:com.workday/bsvc Social_Benefits_Locality,omitempty"`
}

// Reference element representing a unique instance of Social Benefits Locality
type SocialBenefitsLocalityType struct {
	SocialBenefitsLocalityReference *SocialBenefitsLocalityObjectType `xml:"urn:com.workday/bsvc Social_Benefits_Locality_Reference,omitempty"`
	SocialBenefitsLocalityData      *SocialBenefitsLocalityDataType   `xml:"urn:com.workday/bsvc Social_Benefits_Locality_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SortOrderEnabledObjectIDType struct {
	Value      string `xml:",chardata"`
	Type       string `xml:"urn:com.workday/bsvc type,attr"`
	Parentid   string `xml:"urn:com.workday/bsvc parent_id,attr,omitempty"`
	Parenttype string `xml:"urn:com.workday/bsvc parent_type,attr,omitempty"`
}

type SortOrderEnabledObjectType struct {
	ID         []SortOrderEnabledObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element containing information about the Orderable Items and their order.
type SortOrderEnabledOrderDataContainerType struct {
	SortOrderEnabledReference *SortOrderEnabledObjectType     `xml:"urn:com.workday/bsvc Sort_Order_Enabled_Reference"`
	OrderData                 []SortOrderEnabledOrderDataType `xml:"urn:com.workday/bsvc Order_Data,omitempty"`
}

// Element containing information about the Orderable Item and its order.
type SortOrderEnabledOrderDataType struct {
	Order                  string                   `xml:"urn:com.workday/bsvc Order"`
	OrderableItemReference *OrderableItemObjectType `xml:"urn:com.workday/bsvc Orderable_Item_Reference"`
}

// Sort Order Enabled request references.
type SortOrderEnabledRequestReferencesType struct {
	SortOrderEnabledReference []SortOrderEnabledObjectType `xml:"urn:com.workday/bsvc Sort_Order_Enabled_Reference,omitempty"`
}

// Get Sort Order Enableds response element.
type SortOrderEnabledResponseDataType struct {
	SortOrderEnabled []SortOrderEnabledType `xml:"urn:com.workday/bsvc Sort_Order_Enabled,omitempty"`
}

// Sort Order Enabled data.
type SortOrderEnabledType struct {
	SortOrderEnabledData []SortOrderEnabledOrderDataContainerType `xml:"urn:com.workday/bsvc Sort_Order_Enabled_Data,omitempty"`
}

// This element contains data about each Specialty-Subspecialty combination associated with the certification achievement
type SpecialtyAchievementDataType struct {
	SpecialtyReference    *SpecialtyParentObjectType `xml:"urn:com.workday/bsvc Specialty_Reference,omitempty"`
	SubspecialtyReference []SpecialtyChildObjectType `xml:"urn:com.workday/bsvc Subspecialty_Reference,omitempty"`
}

// This element contains data about each Specialty-Subspecialty combination associated with the certification achievement
type SpecialtyAchievementDatawithDatesType struct {
	SpecialtyReference    *SpecialtyParentObjectType `xml:"urn:com.workday/bsvc Specialty_Reference,omitempty"`
	StartDate             *time.Time                 `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
	EndDate               *time.Time                 `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	SubspecialtyReference []SpecialtyChildObjectType `xml:"urn:com.workday/bsvc Subspecialty_Reference,omitempty"`
}

func (t *SpecialtyAchievementDatawithDatesType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T SpecialtyAchievementDatawithDatesType
	var layout struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(layout.T.StartDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *SpecialtyAchievementDatawithDatesType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T SpecialtyAchievementDatawithDatesType
	var overlay struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(overlay.T.StartDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type SpecialtyChildObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SpecialtyChildObjectType struct {
	ID         []SpecialtyChildObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SpecialtyObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SpecialtyObjectType struct {
	ID         []SpecialtyObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SpecialtyParentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SpecialtyParentObjectType struct {
	ID         []SpecialtyParentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the spending account coverage information (elections) for an employee.
type SpendingAccountCoverageDataType struct {
	BenefitElectionData      *WorkerBenefitElectionDataType `xml:"urn:com.workday/bsvc Benefit_Election_Data,omitempty"`
	EmployeeContributionData *EmployeeContributionDataType  `xml:"urn:com.workday/bsvc Employee_Contribution_Data,omitempty"`
	EmployerContributionData *EmployerContributionDataType  `xml:"urn:com.workday/bsvc Employer_Contribution_Data,omitempty"`
}

// Allowed Organization Data
type StaffAllowedDataType struct {
	AllowedOrganizationReference []StaffObjectType `xml:"urn:com.workday/bsvc Allowed_Organization_Reference"`
	Delete                       bool              `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Default Organization Data
type StaffDefaultDataType struct {
	DefaultOrganizationReference *StaffObjectType `xml:"urn:com.workday/bsvc Default_Organization_Reference,omitempty"`
	Delete                       bool             `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type StaffObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type StaffObjectType struct {
	ID         []StaffObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type StaffingInterfaceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type StaffingInterfaceObjectType struct {
	ID         []StaffingInterfaceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element containing date and times for the Calendar Event.
type StartEndDataType struct {
	AllDayEvent        *bool                         `xml:"urn:com.workday/bsvc All_Day_Event,omitempty"`
	StartDate          time.Time                     `xml:"urn:com.workday/bsvc Start_Date"`
	StartTimeReference *TwentyFourHourTimeObjectType `xml:"urn:com.workday/bsvc Start_Time_Reference,omitempty"`
	EndDate            *time.Time                    `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	EndTimeReference   *TwentyFourHourTimeObjectType `xml:"urn:com.workday/bsvc End_Time_Reference,omitempty"`
}

func (t *StartEndDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T StartEndDataType
	var layout struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(&layout.T.StartDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *StartEndDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T StartEndDataType
	var overlay struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(&overlay.T.StartDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper element containing date and times for the Calendar Event.
type StartEndMinuteSupportDataType struct {
	AllDayEvent *bool      `xml:"urn:com.workday/bsvc All_Day_Event,omitempty"`
	StartDate   time.Time  `xml:"urn:com.workday/bsvc Start_Date"`
	StartTime   *time.Time `xml:"urn:com.workday/bsvc Start_Time,omitempty"`
	EndDate     *time.Time `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	EndTime     *time.Time `xml:"urn:com.workday/bsvc End_Time,omitempty"`
}

func (t *StartEndMinuteSupportDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T StartEndMinuteSupportDataType
	var layout struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		StartTime *xsdTime `xml:"urn:com.workday/bsvc Start_Time,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
		EndTime   *xsdTime `xml:"urn:com.workday/bsvc End_Time,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(&layout.T.StartDate)
	layout.StartTime = (*xsdTime)(layout.T.StartTime)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	layout.EndTime = (*xsdTime)(layout.T.EndTime)
	return e.EncodeElement(layout, start)
}
func (t *StartEndMinuteSupportDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T StartEndMinuteSupportDataType
	var overlay struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		StartTime *xsdTime `xml:"urn:com.workday/bsvc Start_Time,omitempty"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
		EndTime   *xsdTime `xml:"urn:com.workday/bsvc End_Time,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(&overlay.T.StartDate)
	overlay.StartTime = (*xsdTime)(overlay.T.StartTime)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	overlay.EndTime = (*xsdTime)(overlay.T.EndTime)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type StockPlanObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type StockPlanObjectType struct {
	ID         []StockPlanObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type StockVestingScheduleObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type StockVestingScheduleObjectType struct {
	ID         []StockVestingScheduleObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type StudentAwardSourceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type StudentAwardSourceObjectType struct {
	ID         []StudentAwardSourceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type StudentCourseTagObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type StudentCourseTagObjectType struct {
	ID         []StudentCourseTagObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The submunicipality of the address.
type SubmunicipalityInformationDataType struct {
	Value                string `xml:",chardata"`
	AddressComponentName string `xml:"urn:com.workday/bsvc Address_Component_Name,attr,omitempty"`
	Type                 string `xml:"urn:com.workday/bsvc Type,attr,omitempty"`
}

// Encapsulating element for all Subregion data.
type SubregionDataType struct {
	Value      string `xml:",chardata"`
	Descriptor string `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
	Type       string `xml:"urn:com.workday/bsvc Type,attr,omitempty"`
}

// The subregion part of the address.
type SubregionInformationDataType struct {
	Value      string `xml:",chardata"`
	Descriptor string `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
	Type       string `xml:"urn:com.workday/bsvc Type,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SubscriberObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SubscriberObjectType struct {
	ID         []SubscriberObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains information about the succession plan candidacy for the employee.
type SuccessionPlanCandidateDataType struct {
	PositionElementReference     *PositionElementObjectType     `xml:"urn:com.workday/bsvc Position_Element_Reference,omitempty"`
	SuccessionReadinessReference *SuccessionReadinessObjectType `xml:"urn:com.workday/bsvc Succession_Readiness_Reference,omitempty"`
	TopCandidate                 *bool                          `xml:"urn:com.workday/bsvc Top_Candidate,omitempty"`
	Notes                        string                         `xml:"urn:com.workday/bsvc Notes,omitempty"`
	LastUpdated                  string                         `xml:"urn:com.workday/bsvc Last_Updated,omitempty"`
}

// Contains information about all the succession plans that this employee is on.
type SuccessionProfileDataType struct {
	CandidateData []SuccessionPlanCandidateDataType `xml:"urn:com.workday/bsvc Candidate_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SuccessionReadinessObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SuccessionReadinessObjectType struct {
	ID         []SuccessionReadinessObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element for all Suffix Name data.
type SuffixNameDataType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc Type,attr,omitempty"`
}

// Reference element representing a unique instance of Organization.
type SuperiorOrganizationReferenceDataType struct {
	OrganizationReference *OrganizationReferenceType `xml:"urn:com.workday/bsvc Organization_Reference"`
}

// Reference element representing a unique instance of Worker (e.g. Employee or Contingent Worker).
type SupervisorReferenceType struct {
	EmployeeReference         *EmployeeReferenceType             `xml:"urn:com.workday/bsvc Employee_Reference,omitempty"`
	ContingentWorkerReference *ContingentWorkerReferenceDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Reference,omitempty"`
}

// Contains details specific to a Supervisory Organization.
type SupervisoryOrgDataType struct {
	StaffingModel               string                                   `xml:"urn:com.workday/bsvc Staffing_Model,omitempty"`
	LocationReference           *LocationObjectType                      `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	OrganizationAssignmentsData []OrganizationAssignmentsDataType        `xml:"urn:com.workday/bsvc Organization_Assignments_Data,omitempty"`
	StaffingRestrictionsData    *PositionGroupRestrictionSummaryDataType `xml:"urn:com.workday/bsvc Staffing_Restrictions_Data,omitempty"`
	AvailableForHire            *bool                                    `xml:"urn:com.workday/bsvc Available_For_Hire,omitempty"`
	HiringFreeze                *bool                                    `xml:"urn:com.workday/bsvc Hiring_Freeze,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SupervisoryOrganizationObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SupervisoryOrganizationObjectType struct {
	ID         []SupervisoryOrganizationObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type SupplierObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SupplierObjectType struct {
	ID         []SupplierObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// A synonym which maps a single workday term to one or more custom terms
type SynonymWebserviceDataType struct {
	WorkdayTerm string `xml:"urn:com.workday/bsvc Workday_Term"`
	CustomTerms string `xml:"urn:com.workday/bsvc Custom_Terms"`
}

// The data necessary to create or update a user's account in the Workday system.
type SystemUserDataType struct {
	UserName                                          string                                              `xml:"urn:com.workday/bsvc User_Name"`
	SessionTimeoutMinutes                             float64                                             `xml:"urn:com.workday/bsvc Session_Timeout_Minutes,omitempty"`
	AccountDisabled                                   *bool                                               `xml:"urn:com.workday/bsvc Account_Disabled,omitempty"`
	AccountExpirationDate                             *time.Time                                          `xml:"urn:com.workday/bsvc Account_Expiration_Date,omitempty"`
	AccountLocked                                     *bool                                               `xml:"urn:com.workday/bsvc Account_Locked,omitempty"`
	RequiredNewPasswordAtNextLogin                    *bool                                               `xml:"urn:com.workday/bsvc Required_New_Password_At_Next_Login,omitempty"`
	ShowUserNameinBrowserWindow                       *bool                                               `xml:"urn:com.workday/bsvc Show_User_Name_in_Browser_Window,omitempty"`
	DisplayXMLIcononReports                           *bool                                               `xml:"urn:com.workday/bsvc Display_XML_Icon_on_Reports,omitempty"`
	EnableWorkbox                                     *bool                                               `xml:"urn:com.workday/bsvc Enable_Workbox,omitempty"`
	LocaleReference                                   *LocaleObjectType                                   `xml:"urn:com.workday/bsvc Locale_Reference,omitempty"`
	UserLanguageReference                             *UserLanguageObjectType                             `xml:"urn:com.workday/bsvc User_Language_Reference,omitempty"`
	PreferredSearchScopeReference                     *UniqueIdentifierObjectType                         `xml:"urn:com.workday/bsvc Preferred_Search_Scope_Reference,omitempty"`
	DelegatedAuthenticationIntegrationSystemReference *IntegrationSystemAuditedObjectType                 `xml:"urn:com.workday/bsvc Delegated_Authentication_Integration_System_Reference,omitempty"`
	AllowMixedLanguageTransactions                    *bool                                               `xml:"urn:com.workday/bsvc Allow_Mixed-Language_Transactions,omitempty"`
	NotificationSubTypeConfigurations                 []NotificationSubCategoryConfigurationsforUsersType `xml:"urn:com.workday/bsvc Notification_Sub_Type_Configurations,omitempty"`
	Password                                          string                                              `xml:"urn:com.workday/bsvc Password,omitempty"`
	GenerateRandomPassword                            *bool                                               `xml:"urn:com.workday/bsvc Generate_Random_Password,omitempty"`
	ExemptfromDelegatedAuthentication                 *bool                                               `xml:"urn:com.workday/bsvc Exempt_from_Delegated_Authentication,omitempty"`
	PasscodeExempt                                    *bool                                               `xml:"urn:com.workday/bsvc Passcode_Exempt,omitempty"`
	PasscodeGracePeriodEnabled                        *bool                                               `xml:"urn:com.workday/bsvc Passcode_Grace_Period_Enabled,omitempty"`
	PasscodeGracePeriodLoginRemainingCount            float64                                             `xml:"urn:com.workday/bsvc Passcode_Grace_Period_Login_Remaining_Count,omitempty"`
	OpenIDIdentifier                                  string                                              `xml:"urn:com.workday/bsvc OpenID_Identifier,omitempty"`
	OpenIDInternalIdentifier                          string                                              `xml:"urn:com.workday/bsvc OpenID_Internal_Identifier,omitempty"`
	OpenIDConnectInternalIdentifier                   string                                              `xml:"urn:com.workday/bsvc OpenID_Connect_Internal_Identifier,omitempty"`
	SimplifiedView                                    *bool                                               `xml:"urn:com.workday/bsvc Simplified_View,omitempty"`
}

func (t *SystemUserDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T SystemUserDataType
	var layout struct {
		*T
		AccountExpirationDate *xsdDateTime `xml:"urn:com.workday/bsvc Account_Expiration_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AccountExpirationDate = (*xsdDateTime)(layout.T.AccountExpirationDate)
	return e.EncodeElement(layout, start)
}
func (t *SystemUserDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T SystemUserDataType
	var overlay struct {
		*T
		AccountExpirationDate *xsdDateTime `xml:"urn:com.workday/bsvc Account_Expiration_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AccountExpirationDate = (*xsdDateTime)(overlay.T.AccountExpirationDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type SystemUserObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type SystemUserObjectType struct {
	ID         []SystemUserObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the worker's user account information (user name, preferred language).
type SystemUserforWorkerDataType struct {
	UserName                                string                  `xml:"urn:com.workday/bsvc User_Name"`
	UserLanguageReference                   *UserLanguageObjectType `xml:"urn:com.workday/bsvc User_Language__Reference,omitempty"`
	PreferredCommunicationLanguageReference *UserLanguageObjectType `xml:"urn:com.workday/bsvc Preferred_Communication_Language_Reference,omitempty"`
	LocaleReference                         *LocaleObjectType       `xml:"urn:com.workday/bsvc Locale__Reference,omitempty"`
	CurrencyReference                       *CurrencyObjectType     `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	TimeZoneReference                       *TimeZoneObjectType     `xml:"urn:com.workday/bsvc Time_Zone_Reference,omitempty"`
	DefaultDisplayLanguageReference         *UserLanguageObjectType `xml:"urn:com.workday/bsvc Default_Display_Language_Reference,omitempty"`
	SimplifiedView                          *bool                   `xml:"urn:com.workday/bsvc Simplified_View,omitempty"`
}

// Contains the potential assessment for the employee.
type TalentAssessmentDataType struct {
	EmployeePotentialData *EmployeeTalentAssessmentDataType `xml:"urn:com.workday/bsvc Employee_Potential_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type TalentTagObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TalentTagObjectType struct {
	ID         []TalentTagObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type TaxAuthorityFormTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TaxAuthorityFormTypeObjectType struct {
	ID         []TaxAuthorityFormTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element containing all Termination Status data for a Worker.
type TerminationStatusDataType struct {
	Terminated                 *bool                  `xml:"urn:com.workday/bsvc Terminated,omitempty"`
	TerminationDate            *time.Time             `xml:"urn:com.workday/bsvc Termination_Date,omitempty"`
	TerminationCategory        string                 `xml:"urn:com.workday/bsvc Termination_Category,omitempty"`
	TerminationReason          string                 `xml:"urn:com.workday/bsvc Termination_Reason,omitempty"`
	InvoluntaryTermination     *bool                  `xml:"urn:com.workday/bsvc Involuntary_Termination,omitempty"`
	EligibleForRehireReference *CommonYesNoObjectType `xml:"urn:com.workday/bsvc Eligible_For_Rehire_Reference,omitempty"`
}

func (t *TerminationStatusDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T TerminationStatusDataType
	var layout struct {
		*T
		TerminationDate *xsdDate `xml:"urn:com.workday/bsvc Termination_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.TerminationDate = (*xsdDate)(layout.T.TerminationDate)
	return e.EncodeElement(layout, start)
}
func (t *TerminationStatusDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T TerminationStatusDataType
	var overlay struct {
		*T
		TerminationDate *xsdDate `xml:"urn:com.workday/bsvc Termination_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.TerminationDate = (*xsdDate)(overlay.T.TerminationDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type TerminationSubcategoryObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TerminationSubcategoryObjectType struct {
	ID         []TerminationSubcategoryObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// The data for the time lost that occurred.
type TimeLostDataType struct {
	FullDayLost     *bool                                  `xml:"urn:com.workday/bsvc Full_Day_Lost,omitempty"`
	JobRestrictions *bool                                  `xml:"urn:com.workday/bsvc Job_Restrictions,omitempty"`
	TimeAwayData    []ReportSafetyIncidentTimeAwayDataType `xml:"urn:com.workday/bsvc Time_Away_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type TimeProfileObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TimeProfileObjectType struct {
	ID         []TimeProfileObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                    `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Time Profile.
type TimeProfileReferenceDataType struct {
	TimeProfileDescription string `xml:"urn:com.workday/bsvc Time_Profile_Description"`
}

// Contains a unique identifier for an instance of an object.
type TimeZoneObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TimeZoneObjectType struct {
	ID         []TimeZoneObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for Training information.
type TrainingAchievementDataType struct {
	TrainingID            string                  `xml:"urn:com.workday/bsvc Training_ID,omitempty"`
	RemoveTraining        *bool                   `xml:"urn:com.workday/bsvc Remove_Training,omitempty"`
	Training              string                  `xml:"urn:com.workday/bsvc Training,omitempty"`
	Description           string                  `xml:"urn:com.workday/bsvc Description,omitempty"`
	TrainingTypeReference *TrainingTypeObjectType `xml:"urn:com.workday/bsvc Training_Type_Reference,omitempty"`
	CompletionDate        *time.Time              `xml:"urn:com.workday/bsvc Completion_Date,omitempty"`
	TrainingDuration      string                  `xml:"urn:com.workday/bsvc Training_Duration,omitempty"`
}

func (t *TrainingAchievementDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T TrainingAchievementDataType
	var layout struct {
		*T
		CompletionDate *xsdDate `xml:"urn:com.workday/bsvc Completion_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.CompletionDate = (*xsdDate)(layout.T.CompletionDate)
	return e.EncodeElement(layout, start)
}
func (t *TrainingAchievementDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T TrainingAchievementDataType
	var overlay struct {
		*T
		CompletionDate *xsdDate `xml:"urn:com.workday/bsvc Completion_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CompletionDate = (*xsdDate)(overlay.T.CompletionDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type TrainingObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TrainingObjectType struct {
	ID         []TrainingObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Replacement element containing Training Qualifications for the Job Profile
// When updating a Job Profile, all Training Qualifications for the Job Profile will be replaced by the submitted data. If no data is submitted, then the existing Training Qualifications are not changed.
type TrainingQualificationProfileReplacementDataType struct {
	TrainingName          string                  `xml:"urn:com.workday/bsvc Training_Name,omitempty"`
	Description           string                  `xml:"urn:com.workday/bsvc Description,omitempty"`
	TrainingTypeReference *TrainingTypeObjectType `xml:"urn:com.workday/bsvc Training_Type_Reference,omitempty"`
	Required              *bool                   `xml:"urn:com.workday/bsvc Required,omitempty"`
}

// Wrapper element for Training Qualifications. Allows all training qualifications for a Job Profile or Position Restriction to be removed - or to replace all existing training qualifications with those sent in the web service.
type TrainingQualificationReplacementType struct {
	TrainingQualificationReplacementData []TrainingQualificationProfileReplacementDataType `xml:"urn:com.workday/bsvc Training_Qualification_Replacement_Data,omitempty"`
	Delete                               bool                                              `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Wrapper element for Training information.
type TrainingType struct {
	TrainingReference *TrainingObjectType           `xml:"urn:com.workday/bsvc Training_Reference,omitempty"`
	TrainingData      []TrainingAchievementDataType `xml:"urn:com.workday/bsvc Training_Data,omitempty"`
}

// Request element for Put Training
type TrainingTypeDataType struct {
	ID               string `xml:"urn:com.workday/bsvc ID,omitempty"`
	TrainingTypeName string `xml:"urn:com.workday/bsvc Training_Type_Name,omitempty"`
	Inactive         *bool  `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type TrainingTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TrainingTypeObjectType struct {
	ID         []TrainingTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Training Type and its associated data.
type TrainingTypeRequestReferencesType struct {
	TrainingTypeReference []TrainingTypeObjectType `xml:"urn:com.workday/bsvc Training_Type_Reference"`
}

// Response element for Get Training Types
type TrainingTypeResponseDataType struct {
	TrainingType []TrainingTypeType `xml:"urn:com.workday/bsvc Training_Type,omitempty"`
}

// Training Type Response Data
type TrainingTypeType struct {
	TrainingTypeReference *TrainingTypeObjectType `xml:"urn:com.workday/bsvc Training_Type_Reference,omitempty"`
	TrainingTypeData      []TrainingTypeDataType  `xml:"urn:com.workday/bsvc Training_Type_Data,omitempty"`
}

// Searches the transaction log for business processes and event lites to find specific events that occurred during a period of time.
type TransactionLogCriteriaType struct {
	TransactionDateRangeData  *EffectiveAndUpdatedDateTimeDataType `xml:"urn:com.workday/bsvc Transaction_Date_Range_Data,omitempty"`
	TransactionTypeReferences *TransactionTypeReferencesType       `xml:"urn:com.workday/bsvc Transaction_Type_References,omitempty"`
	SubscriberReference       *SubscriberObjectType                `xml:"urn:com.workday/bsvc Subscriber_Reference,omitempty"`
}

// Encapsulating element containing the data of the transaction log entry.
type TransactionLogDataType struct {
	TransactionLogDescription   string                         `xml:"urn:com.workday/bsvc Transaction_Log_Description,omitempty"`
	TransactionEffectiveMoment  *time.Time                     `xml:"urn:com.workday/bsvc Transaction_Effective_Moment,omitempty"`
	TransactionEntryMoment      *time.Time                     `xml:"urn:com.workday/bsvc Transaction_Entry_Moment,omitempty"`
	TransactionLogTypeReference []TransactionLogTypeObjectType `xml:"urn:com.workday/bsvc Transaction_Log_Type_Reference,omitempty"`
	TransactionTargetReference  []EventTargetObjectType        `xml:"urn:com.workday/bsvc Transaction_Target_Reference,omitempty"`
	IsRescindOrRescinded        *bool                          `xml:"urn:com.workday/bsvc Is_Rescind_Or_Rescinded,omitempty"`
	IsCorrectionOrCorrected     *bool                          `xml:"urn:com.workday/bsvc Is_Correction_Or_Corrected,omitempty"`
}

func (t *TransactionLogDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T TransactionLogDataType
	var layout struct {
		*T
		TransactionEffectiveMoment *xsdDateTime `xml:"urn:com.workday/bsvc Transaction_Effective_Moment,omitempty"`
		TransactionEntryMoment     *xsdDateTime `xml:"urn:com.workday/bsvc Transaction_Entry_Moment,omitempty"`
	}
	layout.T = (*T)(t)
	layout.TransactionEffectiveMoment = (*xsdDateTime)(layout.T.TransactionEffectiveMoment)
	layout.TransactionEntryMoment = (*xsdDateTime)(layout.T.TransactionEntryMoment)
	return e.EncodeElement(layout, start)
}
func (t *TransactionLogDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T TransactionLogDataType
	var overlay struct {
		*T
		TransactionEffectiveMoment *xsdDateTime `xml:"urn:com.workday/bsvc Transaction_Effective_Moment,omitempty"`
		TransactionEntryMoment     *xsdDateTime `xml:"urn:com.workday/bsvc Transaction_Entry_Moment,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.TransactionEffectiveMoment = (*xsdDateTime)(overlay.T.TransactionEffectiveMoment)
	overlay.TransactionEntryMoment = (*xsdDateTime)(overlay.T.TransactionEntryMoment)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing the transaction log entry.
type TransactionLogEntryType struct {
	TransactionLogReference *TransactionLogObjectType `xml:"urn:com.workday/bsvc Transaction_Log_Reference,omitempty"`
	TransactionLogData      *TransactionLogDataType   `xml:"urn:com.workday/bsvc Transaction_Log_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type TransactionLogObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TransactionLogObjectType struct {
	ID         []TransactionLogObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Details on the rescind or correct of the event described in the main transaction data section.
type TransactionLogRescindAndCorrectEventDataType struct {
	TransactionLogReference   *TransactionLogObjectType `xml:"urn:com.workday/bsvc Transaction_Log_Reference,omitempty"`
	TransactionLogDescription string                    `xml:"urn:com.workday/bsvc Transaction_Log_Description,omitempty"`
	IsCorrection              *bool                     `xml:"urn:com.workday/bsvc Is_Correction,omitempty"`
	IsRescind                 *bool                     `xml:"urn:com.workday/bsvc Is_Rescind,omitempty"`
	PriorEffectiveMoment      *time.Time                `xml:"urn:com.workday/bsvc Prior_Effective_Moment,omitempty"`
	TransactionEntryMoment    *time.Time                `xml:"urn:com.workday/bsvc Transaction_Entry_Moment,omitempty"`
}

func (t *TransactionLogRescindAndCorrectEventDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T TransactionLogRescindAndCorrectEventDataType
	var layout struct {
		*T
		PriorEffectiveMoment   *xsdDate     `xml:"urn:com.workday/bsvc Prior_Effective_Moment,omitempty"`
		TransactionEntryMoment *xsdDateTime `xml:"urn:com.workday/bsvc Transaction_Entry_Moment,omitempty"`
	}
	layout.T = (*T)(t)
	layout.PriorEffectiveMoment = (*xsdDate)(layout.T.PriorEffectiveMoment)
	layout.TransactionEntryMoment = (*xsdDateTime)(layout.T.TransactionEntryMoment)
	return e.EncodeElement(layout, start)
}
func (t *TransactionLogRescindAndCorrectEventDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T TransactionLogRescindAndCorrectEventDataType
	var overlay struct {
		*T
		PriorEffectiveMoment   *xsdDate     `xml:"urn:com.workday/bsvc Prior_Effective_Moment,omitempty"`
		TransactionEntryMoment *xsdDateTime `xml:"urn:com.workday/bsvc Transaction_Entry_Moment,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.PriorEffectiveMoment = (*xsdDate)(overlay.T.PriorEffectiveMoment)
	overlay.TransactionEntryMoment = (*xsdDateTime)(overlay.T.TransactionEntryMoment)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type TransactionLogTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TransactionLogTypeObjectType struct {
	ID         []TransactionLogTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element containing Transaction Types.
type TransactionTypeReferencesType struct {
	TransactionTypeReference []TransactionLogTypeObjectType `xml:"urn:com.workday/bsvc Transaction_Type_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type TravelAmountObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TravelAmountObjectType struct {
	ID         []TravelAmountObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the information about the employees willingness to travel as part of their job.
type TravelPreferenceDataType struct {
	WillingtoTravelReference    *MobilityChoiceObjectType `xml:"urn:com.workday/bsvc Willing_to_Travel_Reference,omitempty"`
	TravelAmountReference       *TravelAmountObjectType   `xml:"urn:com.workday/bsvc Travel_Amount_Reference,omitempty"`
	TravelAdditionalInformation string                    `xml:"urn:com.workday/bsvc Travel_Additional_Information,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type TwentyFourHourTimeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type TwentyFourHourTimeObjectType struct {
	ID         []TwentyFourHourTimeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type USProtectedVeteranStatusTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type USProtectedVeteranStatusTypeObjectType struct {
	ID         []USProtectedVeteranStatusTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type USVeteranStatusTenantedObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type USVeteranStatusTenantedObjectType struct {
	ID         []USVeteranStatusTenantedObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element  containing a single union member with associated membership details.
type UnionMemberDataType struct {
	WorkerReference     *WorkerObjectType         `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	UnionReference      *UnionObjectType          `xml:"urn:com.workday/bsvc Union_Reference"`
	SeniorityDate       *time.Time                `xml:"urn:com.workday/bsvc Seniority_Date,omitempty"`
	UnionMembershipData []UnionMembershipDataType `xml:"urn:com.workday/bsvc Union_Membership_Data"`
}

func (t *UnionMemberDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T UnionMemberDataType
	var layout struct {
		*T
		SeniorityDate *xsdDate `xml:"urn:com.workday/bsvc Seniority_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.SeniorityDate = (*xsdDate)(layout.T.SeniorityDate)
	return e.EncodeElement(layout, start)
}
func (t *UnionMemberDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UnionMemberDataType
	var overlay struct {
		*T
		SeniorityDate *xsdDate `xml:"urn:com.workday/bsvc Seniority_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.SeniorityDate = (*xsdDate)(overlay.T.SeniorityDate)
	return d.DecodeElement(&overlay, &start)
}

// Element containing specific union membership dates and details.
type UnionMembershipDataType struct {
	StartDate                time.Time                      `xml:"urn:com.workday/bsvc Start_Date"`
	EndDate                  *time.Time                     `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	MembershipTypeReference  *UnionMembershipTypeObjectType `xml:"urn:com.workday/bsvc Membership_Type_Reference"`
	RelatedPositionReference *StaffingInterfaceObjectType   `xml:"urn:com.workday/bsvc Related_Position_Reference,omitempty"`
	Notes                    string                         `xml:"urn:com.workday/bsvc Notes,omitempty"`
}

func (t *UnionMembershipDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T UnionMembershipDataType
	var layout struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.StartDate = (*xsdDate)(&layout.T.StartDate)
	layout.EndDate = (*xsdDate)(layout.T.EndDate)
	return e.EncodeElement(layout, start)
}
func (t *UnionMembershipDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UnionMembershipDataType
	var overlay struct {
		*T
		StartDate *xsdDate `xml:"urn:com.workday/bsvc Start_Date"`
		EndDate   *xsdDate `xml:"urn:com.workday/bsvc End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDate = (*xsdDate)(&overlay.T.StartDate)
	overlay.EndDate = (*xsdDate)(overlay.T.EndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type UnionMembershipTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type UnionMembershipTypeObjectType struct {
	ID         []UnionMembershipTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type UnionObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type UnionObjectType struct {
	ID         []UnionObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string              `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type UniqueIdentifierObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type UniqueIdentifierObjectType struct {
	ID         []UniqueIdentifierObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type UnitofMeasureObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type UnitofMeasureObjectType struct {
	ID         []UnitofMeasureObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                      `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Unit of Measure.
type UnitofMeasureReferenceType struct {
	UnitofMeasureName string `xml:"urn:com.workday/bsvc Unit_of_Measure_Name,omitempty"`
}

// Universal Identifier High Volume
type UniversalIdentifierDataHVType struct {
	UniversalIdentifierData *UniversalIdentifierDataType `xml:"urn:com.workday/bsvc Universal_Identifier_Data"`
}

// Universal Identifier Data
type UniversalIdentifierDataType struct {
	PersonReference []RoleObjectType `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalID     string           `xml:"urn:com.workday/bsvc Universal_ID,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type UniversalIdentifierObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type UniversalIdentifierObjectType struct {
	ID         []UniversalIdentifierObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request Criteria
type UniversalIdentifierRequestCriteriaType struct {
}

// Request References
type UniversalIdentifierRequestReferencesType struct {
	PersonReference []RoleObjectType `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
}

// Response Data
type UniversalIdentifierResponseDataType struct {
	UniversalIdentifier []UniversalIdentifierType `xml:"urn:com.workday/bsvc Universal_Identifier,omitempty"`
}

// Universal Identifier
type UniversalIdentifierType struct {
	PersonReference         *RoleObjectType               `xml:"urn:com.workday/bsvc Person_Reference,omitempty"`
	UniversalIdentifierData []UniversalIdentifierDataType `xml:"urn:com.workday/bsvc Universal_Identifier_Data,omitempty"`
}

// Wrapper element for the Update Academic Appointment business process.
type UpdateAcademicAppointmentDataType struct {
	ReasonReference            *GeneralEventSubcategoryObjectType   `xml:"urn:com.workday/bsvc Reason_Reference"`
	AcademicAppointeeReference *AcademicAppointeeEnabledObjectType  `xml:"urn:com.workday/bsvc Academic_Appointee_Reference"`
	AcademicAppointmentData    *AcademicAppointmentSnapshotDataType `xml:"urn:com.workday/bsvc Academic_Appointment_Data"`
}

// Top-level request element to update an academic appointment
type UpdateAcademicAppointmentRequestType struct {
	BusinessProcessParameters     *BusinessProcessParametersType     `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	UpdateAcademicAppointmentData *UpdateAcademicAppointmentDataType `xml:"urn:com.workday/bsvc Update_Academic_Appointment_Data"`
	Version                       string                             `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The data required to update a Safety Incident.
type UpdateSafetyIncidentDataType struct {
	SafetyIncidentReference *SafetyIncidentObjectType     `xml:"urn:com.workday/bsvc Safety_Incident_Reference"`
	SafetyIncidentData      *ReportSafetyIncidentDataType `xml:"urn:com.workday/bsvc Safety_Incident_Data"`
}

// The request element containing all necessary information to update a Safety Incident.
type UpdateSafetyIncidentRequestType struct {
	BusinessProcessParameters *BusinessProcessParametersType `xml:"urn:com.workday/bsvc Business_Process_Parameters,omitempty"`
	UpdateSafetyIncidentData  *UpdateSafetyIncidentDataType  `xml:"urn:com.workday/bsvc Update_Safety_Incident_Data"`
	Version                   string                         `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// The response element containing all necessary information to update a safety incident.
type UpdateSafetyIncidentResponseType struct {
	EditSafetyIncidentEventReference *UniqueIdentifierObjectType `xml:"urn:com.workday/bsvc Edit_Safety_Incident_Event_Reference,omitempty"`
	Version                          string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type UserBasedSecurityGroupObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type UserBasedSecurityGroupObjectType struct {
	ID         []UserBasedSecurityGroupObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Include User-Based Security Group Reference in the Response
type UserBasedSecurityGroupReferenceOnlyResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// User-Based Security Group Request by Name
type UserBasedSecurityGroupRequestCriteriaType struct {
	Name string `xml:"urn:com.workday/bsvc Name,omitempty"`
}

// Request References element for retrieving specific User-Based Security Groups and their member Workday Accounts
type UserBasedSecurityGroupRequestReferencesType struct {
	UserBasedSecurityGroupReference []UserBasedSecurityGroupObjectType `xml:"urn:com.workday/bsvc User-Based_Security_Group_Reference,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type UserLanguageObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type UserLanguageObjectType struct {
	ID         []UserLanguageObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                     `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// User Language Setting Request Criteria
type UserLanguageSettingRequestCriteriaType struct {
}

// User Language Setting Response Group
type UserLanguageSettingResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// User Preferred Communication Language References
type UserPreferredCommunicationLanguageReferencesType struct {
	CountryReference []CountryObjectType `xml:"urn:com.workday/bsvc Country_Reference"`
}

type ValidationErrorType struct {
	Message       string `xml:"urn:com.workday/bsvc Message,omitempty"`
	DetailMessage string `xml:"urn:com.workday/bsvc Detail_Message,omitempty"`
	Xpath         string `xml:"urn:com.workday/bsvc Xpath,omitempty"`
}

type ValidationFaultType struct {
	ValidationError []ValidationErrorType `xml:"urn:com.workday/bsvc Validation_Error,omitempty"`
}

// Reference element representing a unique instance of Vendor.
type VendorReferenceType struct {
	VendorName string `xml:"urn:com.workday/bsvc Vendor_Name,omitempty"`
}

// The request element containing all necessary information to assign a Veteran Status Identification for a Worker.
type VeteranStatusIdentificationDataType struct {
	WorkerReference                       *WorkerObjectType                        `xml:"urn:com.workday/bsvc Worker_Reference"`
	USVeteranTenantedReference            *USVeteranStatusTenantedObjectType       `xml:"urn:com.workday/bsvc US_Veteran_Tenanted_Reference"`
	USProtectedVeteranStatusTypeReference []USProtectedVeteranStatusTypeObjectType `xml:"urn:com.workday/bsvc US_Protected_Veteran_Status_Type_Reference,omitempty"`
	DischargeDate                         *time.Time                               `xml:"urn:com.workday/bsvc Discharge_Date,omitempty"`
}

func (t *VeteranStatusIdentificationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T VeteranStatusIdentificationDataType
	var layout struct {
		*T
		DischargeDate *xsdDate `xml:"urn:com.workday/bsvc Discharge_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.DischargeDate = (*xsdDate)(layout.T.DischargeDate)
	return e.EncodeElement(layout, start)
}
func (t *VeteranStatusIdentificationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T VeteranStatusIdentificationDataType
	var overlay struct {
		*T
		DischargeDate *xsdDate `xml:"urn:com.workday/bsvc Discharge_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DischargeDate = (*xsdDate)(overlay.T.DischargeDate)
	return d.DecodeElement(&overlay, &start)
}

// Wrapper element for Visa identifier data.
type VisaIDDataType struct {
	ID                  string                `xml:"urn:com.workday/bsvc ID,omitempty"`
	IDTypeReference     *VisaIDTypeObjectType `xml:"urn:com.workday/bsvc ID_Type_Reference,omitempty"`
	CountryReference    *CountryObjectType    `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	IssuedDate          *time.Time            `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate      *time.Time            `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	VerificationDate    *time.Time            `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	VerifiedByReference *WorkerObjectType     `xml:"urn:com.workday/bsvc Verified_By_Reference,omitempty"`
}

func (t *VisaIDDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T VisaIDDataType
	var layout struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.VerificationDate = (*xsdDate)(layout.T.VerificationDate)
	return e.EncodeElement(layout, start)
}
func (t *VisaIDDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T VisaIDDataType
	var overlay struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.VerificationDate = (*xsdDate)(overlay.T.VerificationDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element for all Visa Identifier data.
type VisaIDType struct {
	VisaIDReference       *UniqueIdentifierObjectType        `xml:"urn:com.workday/bsvc Visa_ID_Reference,omitempty"`
	VisaIDData            *VisaIDDataType                    `xml:"urn:com.workday/bsvc Visa_ID_Data,omitempty"`
	VisaIDSharedReference *VisaIdentifierReferenceObjectType `xml:"urn:com.workday/bsvc Visa_ID_Shared_Reference,omitempty"`
	Delete                bool                               `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type VisaIDTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type VisaIDTypeObjectType struct {
	ID         []VisaIDTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Encapsulating element for all Visa Identifier data.
type VisaIdentifierDataType struct {
	VisaID            string                 `xml:"urn:com.workday/bsvc Visa_ID"`
	VisaTypeReference *VisaTypeReferenceType `xml:"urn:com.workday/bsvc Visa_Type_Reference"`
	CountryReference  *CountryReferenceType  `xml:"urn:com.workday/bsvc Country_Reference"`
	IssuedDate        *time.Time             `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
	ExpirationDate    *time.Time             `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
	VerificationDate  *time.Time             `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
}

func (t *VisaIdentifierDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T VisaIdentifierDataType
	var layout struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.IssuedDate = (*xsdDate)(layout.T.IssuedDate)
	layout.ExpirationDate = (*xsdDate)(layout.T.ExpirationDate)
	layout.VerificationDate = (*xsdDate)(layout.T.VerificationDate)
	return e.EncodeElement(layout, start)
}
func (t *VisaIdentifierDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T VisaIdentifierDataType
	var overlay struct {
		*T
		IssuedDate       *xsdDate `xml:"urn:com.workday/bsvc Issued_Date,omitempty"`
		ExpirationDate   *xsdDate `xml:"urn:com.workday/bsvc Expiration_Date,omitempty"`
		VerificationDate *xsdDate `xml:"urn:com.workday/bsvc Verification_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IssuedDate = (*xsdDate)(overlay.T.IssuedDate)
	overlay.ExpirationDate = (*xsdDate)(overlay.T.ExpirationDate)
	overlay.VerificationDate = (*xsdDate)(overlay.T.VerificationDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type VisaIdentifierReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type VisaIdentifierReferenceObjectType struct {
	ID         []VisaIdentifierReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Reference element representing a unique instance of Visa Type.
type VisaTypeReferenceType struct {
	VisaTypeName string `xml:"urn:com.workday/bsvc Visa_Type_Name"`
}

// The volume information for the coverage level selected.
type VolumeDataType struct {
	Volume            float64             `xml:"urn:com.workday/bsvc Volume"`
	CurrencyReference *CurrencyObjectType `xml:"urn:com.workday/bsvc Currency_Reference"`
}

// Web Address core data.
type WebAddressCoreDataType struct {
	WebAddress        string `xml:"urn:com.workday/bsvc Web_Address"`
	WebAddressComment string `xml:"urn:com.workday/bsvc Web_Address_Comment,omitempty"`
}

// Encapsulating element for all Web Address data.
type WebAddressDataType struct {
	WebAddress        string                            `xml:"urn:com.workday/bsvc Web_Address"`
	WebAddressComment string                            `xml:"urn:com.workday/bsvc Web_Address_Comment,omitempty"`
	UsageData         *CommunicationMethodUsageDataType `xml:"urn:com.workday/bsvc Usage_Data"`
}

// Web Address Information
type WebAddressInformationDataType struct {
	WebAddress          string                                        `xml:"urn:com.workday/bsvc Web_Address,omitempty"`
	WebAddressComment   string                                        `xml:"urn:com.workday/bsvc Web_Address_Comment,omitempty"`
	UsageData           []CommunicationMethodUsageInformationDataType `xml:"urn:com.workday/bsvc Usage_Data,omitempty"`
	WebAddressReference *WebAddressReferenceObjectType                `xml:"urn:com.workday/bsvc Web_Address_Reference,omitempty"`
	ID                  string                                        `xml:"urn:com.workday/bsvc ID,omitempty"`
	Delete              bool                                          `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
	DoNotReplaceAll     bool                                          `xml:"urn:com.workday/bsvc Do_Not_Replace_All,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WebAddressReferenceObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WebAddressReferenceObjectType struct {
	ID         []WebAddressReferenceObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WebServiceBackgroundProcessRuntimeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WebServiceBackgroundProcessRuntimeObjectType struct {
	ID         []WebServiceBackgroundProcessRuntimeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                           `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WeekoftheMonthObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WeekoftheMonthObjectType struct {
	ID         []WeekoftheMonthObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for the work experience.
type WorkExperienceDataType struct {
	ExperienceReference       *WorkExperienceSkillObjectType  `xml:"urn:com.workday/bsvc Experience_Reference,omitempty"`
	RemoveExperience          *bool                           `xml:"urn:com.workday/bsvc Remove_Experience,omitempty"`
	ExperienceRatingReference *WorkExperienceRatingObjectType `xml:"urn:com.workday/bsvc Experience_Rating_Reference,omitempty"`
	ExperienceComment         string                          `xml:"urn:com.workday/bsvc Experience_Comment,omitempty"`
}

// Replacement element containing Work Experience Qualifications for the Job Profile
// When updating a Job Profile, all Work Experiences for the Job Profile will be replaced by the submitted data. If no data is submitted, then the existing Work Experiences are not changed.
type WorkExperienceQualificationProfileReplacementDataType struct {
	WorkerExperienceReference     *WorkExperienceSkillObjectType  `xml:"urn:com.workday/bsvc Worker_Experience_Reference"`
	WorkExperienceRatingReference *WorkExperienceRatingObjectType `xml:"urn:com.workday/bsvc Work_Experience_Rating_Reference,omitempty"`
	Required                      *bool                           `xml:"urn:com.workday/bsvc Required,omitempty"`
}

// Wrapper element for Work Experience Qualifications. Allows all work experience qualifications for a Job Profile or Position Restriction to be removed - or to replace all existing work experience qualifications with those sent in the web service.
type WorkExperienceQualificationReplacementType struct {
	WorkExperienceQualificationReplacementData []WorkExperienceQualificationProfileReplacementDataType `xml:"urn:com.workday/bsvc Work_Experience_Qualification_Replacement_Data,omitempty"`
	Delete                                     bool                                                    `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkExperienceRatingObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkExperienceRatingObjectType struct {
	ID         []WorkExperienceRatingObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkExperienceSkillObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkExperienceSkillObjectType struct {
	ID         []WorkExperienceSkillObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                            `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkHoursProfileObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkHoursProfileObjectType struct {
	ID         []WorkHoursProfileObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                         `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Instance data for Work Schedule Calendar.
type WorkScheduleCalendarDataType struct {
	Name                          string                              `xml:"urn:com.workday/bsvc Name"`
	ScheduleSummary               string                              `xml:"urn:com.workday/bsvc Schedule_Summary,omitempty"`
	Description                   string                              `xml:"urn:com.workday/bsvc Description,omitempty"`
	ConditionRuleReference        *ConditionRuleObjectType            `xml:"urn:com.workday/bsvc Condition_Rule_Reference,omitempty"`
	DayBreakerReference           *TwentyFourHourTimeObjectType       `xml:"urn:com.workday/bsvc Day_Breaker_Reference"`
	DayBreakerDividesReference    *DayBreakerDividerObjectType        `xml:"urn:com.workday/bsvc Day_Breaker_Divides_Reference,omitempty"`
	WorkWeekStartDayReference     *DayoftheWeekObjectType             `xml:"urn:com.workday/bsvc Work_Week_Start_Day_Reference"`
	BiweeklyCalculationStartDate  *time.Time                          `xml:"urn:com.workday/bsvc Biweekly_Calculation_Start_Date,omitempty"`
	PatternStartDate              *time.Time                          `xml:"urn:com.workday/bsvc Pattern_Start_Date,omitempty"`
	NumberofWeeks                 float64                             `xml:"urn:com.workday/bsvc Number_of_Weeks,omitempty"`
	WorkScheduleCalendarEventData []WorkScheduleCalendarEventDataType `xml:"urn:com.workday/bsvc Work_Schedule_Calendar_Event_Data,omitempty"`
	WorkerEditOptionsData         *WorkerEditingOptionsDataType       `xml:"urn:com.workday/bsvc Worker_Edit_Options_Data,omitempty"`
	PatternScheduleEventData      []PatternScheduleEventDataType      `xml:"urn:com.workday/bsvc Pattern_Schedule_Event_Data,omitempty"`
	ID                            string                              `xml:"urn:com.workday/bsvc ID,attr,omitempty"`
}

func (t *WorkScheduleCalendarDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkScheduleCalendarDataType
	var layout struct {
		*T
		BiweeklyCalculationStartDate *xsdDate `xml:"urn:com.workday/bsvc Biweekly_Calculation_Start_Date,omitempty"`
		PatternStartDate             *xsdDate `xml:"urn:com.workday/bsvc Pattern_Start_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.BiweeklyCalculationStartDate = (*xsdDate)(layout.T.BiweeklyCalculationStartDate)
	layout.PatternStartDate = (*xsdDate)(layout.T.PatternStartDate)
	return e.EncodeElement(layout, start)
}
func (t *WorkScheduleCalendarDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkScheduleCalendarDataType
	var overlay struct {
		*T
		BiweeklyCalculationStartDate *xsdDate `xml:"urn:com.workday/bsvc Biweekly_Calculation_Start_Date,omitempty"`
		PatternStartDate             *xsdDate `xml:"urn:com.workday/bsvc Pattern_Start_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.BiweeklyCalculationStartDate = (*xsdDate)(overlay.T.BiweeklyCalculationStartDate)
	overlay.PatternStartDate = (*xsdDate)(overlay.T.PatternStartDate)
	return d.DecodeElement(&overlay, &start)
}

// Work Schedule Calendar Event data.
type WorkScheduleCalendarEventDataType struct {
	Name           string                         `xml:"urn:com.workday/bsvc Name"`
	DisplayName    string                         `xml:"urn:com.workday/bsvc Display_Name,omitempty"`
	StartEndData   *StartEndMinuteSupportDataType `xml:"urn:com.workday/bsvc Start_End_Data"`
	MealData       []CalendarEventNonWorkDataType `xml:"urn:com.workday/bsvc Meal_Data,omitempty"`
	RecurrenceData *RecurrenceDataType            `xml:"urn:com.workday/bsvc Recurrence_Data,omitempty"`
	ID             string                         `xml:"urn:com.workday/bsvc ID,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkScheduleCalendarObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkScheduleCalendarObjectType struct {
	ID         []WorkScheduleCalendarObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                             `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request criteria for Work Schedule Calendar response.
type WorkScheduleCalendarRequestCriteriaType struct {
}

// Wrapper for Work Schedule Calendar references.
type WorkScheduleCalendarRequestReferencesType struct {
	WorkScheduleCalendarRequestReference []WorkScheduleCalendarObjectType `xml:"urn:com.workday/bsvc Work_Schedule_Calendar_Request_Reference"`
}

// Retrieved Work Schedule Calendar.
type WorkScheduleCalendarResponseDataType struct {
	WorkScheduleCalendar []WorkScheduleCalendarType `xml:"urn:com.workday/bsvc Work_Schedule_Calendar,omitempty"`
}

// Options for responded Work Schedule Calendar.
type WorkScheduleCalendarResponseGroupType struct {
	IncludeReference                *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludeWorkScheduleCalendarData *bool `xml:"urn:com.workday/bsvc Include_Work_Schedule_Calendar_Data,omitempty"`
}

// Requested Work Schedule Calendar data.
type WorkScheduleCalendarType struct {
	WorkScheduleCalendarReference *WorkScheduleCalendarObjectType `xml:"urn:com.workday/bsvc Work_Schedule_Calendar_Reference,omitempty"`
	WorkScheduleCalendarData      *WorkScheduleCalendarDataType   `xml:"urn:com.workday/bsvc Work_Schedule_Calendar_Data,omitempty"`
}

// Element containing all Work Shift data.
type WorkShiftDataType struct {
	WorkShiftID          string                     `xml:"urn:com.workday/bsvc Work_Shift_ID,omitempty"`
	WorkShiftName        string                     `xml:"urn:com.workday/bsvc Work_Shift_Name,omitempty"`
	WorkShiftDescription string                     `xml:"urn:com.workday/bsvc Work_Shift_Description,omitempty"`
	LocationReference    *LocationContextObjectType `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	Inactive             *bool                      `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkShiftObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkShiftObjectType struct {
	ID         []WorkShiftObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                  `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element containing reference instance for a Work Shift.
type WorkShiftRequestReferencesType struct {
	WorkShiftReference []WorkShiftObjectType `xml:"urn:com.workday/bsvc Work_Shift_Reference,omitempty"`
}

// Wrapper element that includes Work Shift reference instance and Work Shift data.
type WorkShiftResponseDataType struct {
	WorkShift []WorkShiftType `xml:"urn:com.workday/bsvc Work_Shift,omitempty"`
}

// Element containing work shift reference and data.
type WorkShiftType struct {
	WorkShiftReference *WorkShiftObjectType `xml:"urn:com.workday/bsvc Work_Shift_Reference,omitempty"`
	WorkShiftData      []WorkShiftDataType  `xml:"urn:com.workday/bsvc Work_Shift_Data,omitempty"`
}

// Sub element used to change work space on a Position.
type WorkSpaceChangeEventDataType struct {
	PositionReference  *PositionElementObjectType `xml:"urn:com.workday/bsvc Position_Reference"`
	EffectiveDate      time.Time                  `xml:"urn:com.workday/bsvc Effective_Date"`
	WorkSpaceReference *LocationObjectType        `xml:"urn:com.workday/bsvc Work_Space_Reference"`
}

func (t *WorkSpaceChangeEventDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkSpaceChangeEventDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *WorkSpaceChangeEventDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkSpaceChangeEventDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type WorkStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkStatusObjectType struct {
	ID         []WorkStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkStatusRuleObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkStatusRuleObjectType struct {
	ID         []WorkStatusRuleObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Container Element for all Attributes and Relationships associated to the Work Status Rule Row
type WorkStatusRuleRowSubdataType struct {
	WorkStatusRuleRowID     string                    `xml:"urn:com.workday/bsvc Work_Status_Rule_Row_ID,omitempty"`
	Order                   string                    `xml:"urn:com.workday/bsvc Order"`
	WorkStatusRuleName      string                    `xml:"urn:com.workday/bsvc Work_Status_Rule_Name"`
	WorkStatusReference     *WorkStatusObjectType     `xml:"urn:com.workday/bsvc Work_Status_Reference"`
	WorkStatusRuleReference *WorkStatusRuleObjectType `xml:"urn:com.workday/bsvc Work_Status_Rule_Reference"`
	Delete                  bool                      `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
	AddOnly                 bool                      `xml:"urn:com.workday/bsvc Add_Only,attr,omitempty"`
}

// Container Element containing all Attributes and Relationship for a Work Status Rule Set
type WorkStatusRuleSetDataType struct {
	ID                                   string                         `xml:"urn:com.workday/bsvc ID,omitempty"`
	WorkStatusRuleSetName                string                         `xml:"urn:com.workday/bsvc Work_Status_Rule_Set_Name"`
	WorkStatusRuleSetDescription         string                         `xml:"urn:com.workday/bsvc Work_Status_Rule_Set_Description,omitempty"`
	RestrictedtoAcademicUnitReference    []AcademicUnitObjectType       `xml:"urn:com.workday/bsvc Restricted_to_Academic_Unit_Reference,omitempty"`
	DefaultWorkStatusRuleSet             *bool                          `xml:"urn:com.workday/bsvc Default_Work_Status_Rule_Set,omitempty"`
	Inactive                             *bool                          `xml:"urn:com.workday/bsvc Inactive,omitempty"`
	AppliestoLeaveTypesReference         []LeaveofAbsenceTypeObjectType `xml:"urn:com.workday/bsvc Applies_to_Leave_Types_Reference,omitempty"`
	ActivePeriodsRequiredforEligibility  float64                        `xml:"urn:com.workday/bsvc Active_Periods_Required_for_Eligibility,omitempty"`
	MinimumYearsSinceLastApplicableLeave float64                        `xml:"urn:com.workday/bsvc Minimum_Years_Since_Last_Applicable_Leave,omitempty"`
	WorkStatusRuleRowSubdata             []WorkStatusRuleRowSubdataType `xml:"urn:com.workday/bsvc Work_Status_Rule_Row_Subdata,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkStatusRuleSetObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkStatusRuleSetObjectType struct {
	ID         []WorkStatusRuleSetObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                          `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Criteria for filtering which Work Status Rule Sets are returned
type WorkStatusRuleSetRequestCriteriaType struct {
}

// References Provided to be returned by Get Work Status Rule Set
type WorkStatusRuleSetRequestReferencesType struct {
	WorkStatusRuleSetReference []WorkStatusRuleSetObjectType `xml:"urn:com.workday/bsvc Work_Status_Rule_Set_Reference"`
}

// Contains the Response of the Web Service Get Request
type WorkStatusRuleSetResponseDataType struct {
	WorkStatusRuleSet []WorkStatusRuleSetType `xml:"urn:com.workday/bsvc Work_Status_Rule_Set,omitempty"`
}

// Response Group for Work Status Rule Set
type WorkStatusRuleSetResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Contains the Data and Reference to the Work Status Rule Sets
type WorkStatusRuleSetType struct {
	WorkStatusRuleSetReference *WorkStatusRuleSetObjectType `xml:"urn:com.workday/bsvc Work_Status_Rule_Set_Reference,omitempty"`
	WorkStatusRuleSetData      []WorkStatusRuleSetDataType  `xml:"urn:com.workday/bsvc Work_Status_Rule_Set_Data,omitempty"`
}

// Response Group
type WorkdayAccountResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Utilize the following data element to add a new User Account into the Workday system.
type WorkdayAccountforWorkerAddType struct {
	WorkerReference             *WorkerReferenceType             `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	NonWorkerReference          *RoleObjectType                  `xml:"urn:com.workday/bsvc Non_Worker_Reference,omitempty"`
	WorkdayAccountforWorkerData *WorkdayAccountforWorkerDataType `xml:"urn:com.workday/bsvc Workday_Account_for_Worker_Data"`
	Version                     string                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Encapsulating element containing all Workday Account data.
type WorkdayAccountforWorkerDataType struct {
	UserName                                          string                                              `xml:"urn:com.workday/bsvc User_Name"`
	Password                                          string                                              `xml:"urn:com.workday/bsvc Password,omitempty"`
	GenerateRandomPassword                            *bool                                               `xml:"urn:com.workday/bsvc Generate_Random_Password,omitempty"`
	RequireNewPasswordatNextSignIn                    *bool                                               `xml:"urn:com.workday/bsvc Require_New_Password_at_Next_Sign_In,omitempty"`
	OneTimePasscodeExempt                             *bool                                               `xml:"urn:com.workday/bsvc One-Time_Passcode_Exempt,omitempty"`
	OneTimePasscodeGracePeriodEnabled                 *bool                                               `xml:"urn:com.workday/bsvc One-Time_Passcode_Grace_Period_Enabled,omitempty"`
	OneTimePasscodeGracePeriodLoginRemainingCount     float64                                             `xml:"urn:com.workday/bsvc One-Time_Passcode_Grace_Period_Login_Remaining_Count,omitempty"`
	AccountDisabled                                   *bool                                               `xml:"urn:com.workday/bsvc Account_Disabled,omitempty"`
	AccountExpirationDate                             *time.Time                                          `xml:"urn:com.workday/bsvc Account_Expiration_Date,omitempty"`
	OpenIDIdentifier                                  string                                              `xml:"urn:com.workday/bsvc OpenID_Identifier,omitempty"`
	OpenIDInternalIdentifier                          string                                              `xml:"urn:com.workday/bsvc OpenID_Internal_Identifier,omitempty"`
	OpenIDConnectInternalIdentifier                   string                                              `xml:"urn:com.workday/bsvc OpenID_Connect_Internal_Identifier,omitempty"`
	DelegatedAuthenticationIntegrationSystemReference *IntegrationSystemAuditedObjectType                 `xml:"urn:com.workday/bsvc Delegated_Authentication_Integration_System_Reference,omitempty"`
	SessionTimeoutMinutes                             float64                                             `xml:"urn:com.workday/bsvc Session_Timeout_Minutes,omitempty"`
	ShowUserNameinBrowserWindow                       *bool                                               `xml:"urn:com.workday/bsvc Show_User_Name_in_Browser_Window,omitempty"`
	DisplayXMLIcononReports                           *bool                                               `xml:"urn:com.workday/bsvc Display_XML_Icon_on_Reports,omitempty"`
	EnableWorkbox                                     *bool                                               `xml:"urn:com.workday/bsvc Enable_Workbox,omitempty"`
	LocaleReference                                   *LocaleObjectType                                   `xml:"urn:com.workday/bsvc Locale_Reference,omitempty"`
	UserLanguageReference                             *UserLanguageObjectType                             `xml:"urn:com.workday/bsvc User_Language_Reference,omitempty"`
	PreferredCommunicationLanguageReference           *UserLanguageObjectType                             `xml:"urn:com.workday/bsvc Preferred_Communication_Language_Reference,omitempty"`
	PreferredSearchScopeReference                     *UniqueIdentifierObjectType                         `xml:"urn:com.workday/bsvc Preferred_Search_Scope_Reference,omitempty"`
	AllowMixedLanguageTransactions                    *bool                                               `xml:"urn:com.workday/bsvc Allow_Mixed-Language_Transactions,omitempty"`
	NotificationSubTypeConfigurations                 []NotificationSubCategoryConfigurationsforUsersType `xml:"urn:com.workday/bsvc Notification_Sub_Type_Configurations,omitempty"`
	ExemptfromDelegatedAuthentication                 *bool                                               `xml:"urn:com.workday/bsvc Exempt_from_Delegated_Authentication,omitempty"`
}

func (t *WorkdayAccountforWorkerDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkdayAccountforWorkerDataType
	var layout struct {
		*T
		AccountExpirationDate *xsdDateTime `xml:"urn:com.workday/bsvc Account_Expiration_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AccountExpirationDate = (*xsdDateTime)(layout.T.AccountExpirationDate)
	return e.EncodeElement(layout, start)
}
func (t *WorkdayAccountforWorkerDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkdayAccountforWorkerDataType
	var overlay struct {
		*T
		AccountExpirationDate *xsdDateTime `xml:"urn:com.workday/bsvc Account_Expiration_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AccountExpirationDate = (*xsdDateTime)(overlay.T.AccountExpirationDate)
	return d.DecodeElement(&overlay, &start)
}

// Utilize the following elements to update an existing Workday Account into the Workday system.
type WorkdayAccountforWorkerUpdateType struct {
	WorkerReference             *WorkerReferenceType             `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	NonWorkerReference          *RoleObjectType                  `xml:"urn:com.workday/bsvc Non_Worker_Reference,omitempty"`
	WorkdayAccountforWorkerData *WorkdayAccountforWorkerDataType `xml:"urn:com.workday/bsvc Workday_Account_for_Worker_Data"`
	Version                     string                           `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

type WorkdayCommonHeaderType struct {
	IncludeReferenceDescriptorsInResponse *bool `xml:"urn:com.workday/bsvc Include_Reference_Descriptors_In_Response,omitempty"`
}

// Contains the additional benefits coverage information (elections) for an employee.
type WorkerAdditionalBenefitsCoverageDataType struct {
	AdditionalBenefitsCoverageTargetReference  *AdditionalBenefitsCoverageTargetObjectType `xml:"urn:com.workday/bsvc Additional_Benefits_Coverage_Target_Reference,omitempty"`
	OriginalCoverageBeginDateforCoverageTarget *time.Time                                  `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Coverage_Target,omitempty"`
	BenefitElectionData                        *WorkerBenefitElectionDataType              `xml:"urn:com.workday/bsvc Benefit_Election_Data,omitempty"`
	PercentContributionData                    *EmployeeContributionPercentageDataType     `xml:"urn:com.workday/bsvc Percent_Contribution_Data,omitempty"`
	AmountContributionData                     []EmployeeContributionAmountDataType        `xml:"urn:com.workday/bsvc Amount_Contribution_Data,omitempty"`
}

func (t *WorkerAdditionalBenefitsCoverageDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerAdditionalBenefitsCoverageDataType
	var layout struct {
		*T
		OriginalCoverageBeginDateforCoverageTarget *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Coverage_Target,omitempty"`
	}
	layout.T = (*T)(t)
	layout.OriginalCoverageBeginDateforCoverageTarget = (*xsdDate)(layout.T.OriginalCoverageBeginDateforCoverageTarget)
	return e.EncodeElement(layout, start)
}
func (t *WorkerAdditionalBenefitsCoverageDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerAdditionalBenefitsCoverageDataType
	var overlay struct {
		*T
		OriginalCoverageBeginDateforCoverageTarget *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Coverage_Target,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.OriginalCoverageBeginDateforCoverageTarget = (*xsdDate)(overlay.T.OriginalCoverageBeginDateforCoverageTarget)
	return d.DecodeElement(&overlay, &start)
}

// Contains the additional benefits data for an employee.
type WorkerAdditionalBenefitsDataType struct {
	AdditionalBenefitsPeriodData []WorkerAdditionalBenefitsPeriodDataType `xml:"urn:com.workday/bsvc Additional_Benefits_Period_Data,omitempty"`
}

// Contains the additional benefits period data for an employee based on the benefit plan year.
type WorkerAdditionalBenefitsPeriodDataType struct {
	EnrollmentPeriodData           *EnrollmentPeriodDataType                  `xml:"urn:com.workday/bsvc Enrollment_Period_Data,omitempty"`
	AdditionalBenefitsCoverageData []WorkerAdditionalBenefitsCoverageDataType `xml:"urn:com.workday/bsvc Additional_Benefits_Coverage_Data,omitempty"`
}

// Worker Reference and Name of the Worker
type WorkerBasicDataType struct {
	WorkerReference  *WorkerObjectType `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	WorkerDescriptor string            `xml:"urn:com.workday/bsvc Worker_Descriptor,omitempty"`
}

// The election information for the coverage.
type WorkerBenefitElectionDataType struct {
	CoverageBeginDate                               *time.Time                  `xml:"urn:com.workday/bsvc Coverage_Begin_Date,omitempty"`
	CoverageEndDate                                 *time.Time                  `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
	ElectionCoverageBeginDate                       *time.Time                  `xml:"urn:com.workday/bsvc Election_Coverage_Begin_Date,omitempty"`
	OriginalCoverageBeginDate                       *time.Time                  `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date,omitempty"`
	OriginalCoverageBeginDateforBenefitCoverageType *time.Time                  `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Benefit_Coverage_Type,omitempty"`
	DeductionBeginDate                              *time.Time                  `xml:"urn:com.workday/bsvc Deduction_Begin_Date,omitempty"`
	DeductionEndDate                                *time.Time                  `xml:"urn:com.workday/bsvc Deduction_End_Date,omitempty"`
	ElectionStatus                                  string                      `xml:"urn:com.workday/bsvc Election_Status,omitempty"`
	EnrollmentSignatureDate                         *time.Time                  `xml:"urn:com.workday/bsvc Enrollment_Signature_Date,omitempty"`
	LatestEnrollmentSignatureDate                   *time.Time                  `xml:"urn:com.workday/bsvc Latest_Enrollment_Signature_Date,omitempty"`
	PassiveEnrollment                               *bool                       `xml:"urn:com.workday/bsvc Passive_Enrollment,omitempty"`
	BenefitPlanSummaryData                          *BenefitPlanSummaryDataType `xml:"urn:com.workday/bsvc Benefit_Plan_Summary_Data,omitempty"`
	OriginalPlanEnrollmentDate                      *time.Time                  `xml:"urn:com.workday/bsvc Original_Plan_Enrollment_Date,omitempty"`
	OriginalBenefitProviderEnrollmentDate           *time.Time                  `xml:"urn:com.workday/bsvc Original_Benefit_Provider_Enrollment_Date,omitempty"`
	IsCorrectedorRescinded                          bool                        `xml:"urn:com.workday/bsvc Is_Corrected_or_Rescinded,attr,omitempty"`
}

func (t *WorkerBenefitElectionDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerBenefitElectionDataType
	var layout struct {
		*T
		CoverageBeginDate                               *xsdDate `xml:"urn:com.workday/bsvc Coverage_Begin_Date,omitempty"`
		CoverageEndDate                                 *xsdDate `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
		ElectionCoverageBeginDate                       *xsdDate `xml:"urn:com.workday/bsvc Election_Coverage_Begin_Date,omitempty"`
		OriginalCoverageBeginDate                       *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date,omitempty"`
		OriginalCoverageBeginDateforBenefitCoverageType *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Benefit_Coverage_Type,omitempty"`
		DeductionBeginDate                              *xsdDate `xml:"urn:com.workday/bsvc Deduction_Begin_Date,omitempty"`
		DeductionEndDate                                *xsdDate `xml:"urn:com.workday/bsvc Deduction_End_Date,omitempty"`
		EnrollmentSignatureDate                         *xsdDate `xml:"urn:com.workday/bsvc Enrollment_Signature_Date,omitempty"`
		LatestEnrollmentSignatureDate                   *xsdDate `xml:"urn:com.workday/bsvc Latest_Enrollment_Signature_Date,omitempty"`
		OriginalPlanEnrollmentDate                      *xsdDate `xml:"urn:com.workday/bsvc Original_Plan_Enrollment_Date,omitempty"`
		OriginalBenefitProviderEnrollmentDate           *xsdDate `xml:"urn:com.workday/bsvc Original_Benefit_Provider_Enrollment_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.CoverageBeginDate = (*xsdDate)(layout.T.CoverageBeginDate)
	layout.CoverageEndDate = (*xsdDate)(layout.T.CoverageEndDate)
	layout.ElectionCoverageBeginDate = (*xsdDate)(layout.T.ElectionCoverageBeginDate)
	layout.OriginalCoverageBeginDate = (*xsdDate)(layout.T.OriginalCoverageBeginDate)
	layout.OriginalCoverageBeginDateforBenefitCoverageType = (*xsdDate)(layout.T.OriginalCoverageBeginDateforBenefitCoverageType)
	layout.DeductionBeginDate = (*xsdDate)(layout.T.DeductionBeginDate)
	layout.DeductionEndDate = (*xsdDate)(layout.T.DeductionEndDate)
	layout.EnrollmentSignatureDate = (*xsdDate)(layout.T.EnrollmentSignatureDate)
	layout.LatestEnrollmentSignatureDate = (*xsdDate)(layout.T.LatestEnrollmentSignatureDate)
	layout.OriginalPlanEnrollmentDate = (*xsdDate)(layout.T.OriginalPlanEnrollmentDate)
	layout.OriginalBenefitProviderEnrollmentDate = (*xsdDate)(layout.T.OriginalBenefitProviderEnrollmentDate)
	return e.EncodeElement(layout, start)
}
func (t *WorkerBenefitElectionDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerBenefitElectionDataType
	var overlay struct {
		*T
		CoverageBeginDate                               *xsdDate `xml:"urn:com.workday/bsvc Coverage_Begin_Date,omitempty"`
		CoverageEndDate                                 *xsdDate `xml:"urn:com.workday/bsvc Coverage_End_Date,omitempty"`
		ElectionCoverageBeginDate                       *xsdDate `xml:"urn:com.workday/bsvc Election_Coverage_Begin_Date,omitempty"`
		OriginalCoverageBeginDate                       *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date,omitempty"`
		OriginalCoverageBeginDateforBenefitCoverageType *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Benefit_Coverage_Type,omitempty"`
		DeductionBeginDate                              *xsdDate `xml:"urn:com.workday/bsvc Deduction_Begin_Date,omitempty"`
		DeductionEndDate                                *xsdDate `xml:"urn:com.workday/bsvc Deduction_End_Date,omitempty"`
		EnrollmentSignatureDate                         *xsdDate `xml:"urn:com.workday/bsvc Enrollment_Signature_Date,omitempty"`
		LatestEnrollmentSignatureDate                   *xsdDate `xml:"urn:com.workday/bsvc Latest_Enrollment_Signature_Date,omitempty"`
		OriginalPlanEnrollmentDate                      *xsdDate `xml:"urn:com.workday/bsvc Original_Plan_Enrollment_Date,omitempty"`
		OriginalBenefitProviderEnrollmentDate           *xsdDate `xml:"urn:com.workday/bsvc Original_Benefit_Provider_Enrollment_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CoverageBeginDate = (*xsdDate)(overlay.T.CoverageBeginDate)
	overlay.CoverageEndDate = (*xsdDate)(overlay.T.CoverageEndDate)
	overlay.ElectionCoverageBeginDate = (*xsdDate)(overlay.T.ElectionCoverageBeginDate)
	overlay.OriginalCoverageBeginDate = (*xsdDate)(overlay.T.OriginalCoverageBeginDate)
	overlay.OriginalCoverageBeginDateforBenefitCoverageType = (*xsdDate)(overlay.T.OriginalCoverageBeginDateforBenefitCoverageType)
	overlay.DeductionBeginDate = (*xsdDate)(overlay.T.DeductionBeginDate)
	overlay.DeductionEndDate = (*xsdDate)(overlay.T.DeductionEndDate)
	overlay.EnrollmentSignatureDate = (*xsdDate)(overlay.T.EnrollmentSignatureDate)
	overlay.LatestEnrollmentSignatureDate = (*xsdDate)(overlay.T.LatestEnrollmentSignatureDate)
	overlay.OriginalPlanEnrollmentDate = (*xsdDate)(overlay.T.OriginalPlanEnrollmentDate)
	overlay.OriginalBenefitProviderEnrollmentDate = (*xsdDate)(overlay.T.OriginalBenefitProviderEnrollmentDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains the plans that the worker is eligible for
type WorkerBenefitEligibilityDataType struct {
	BenefitPlanReference     []BenefitPlanObjectType       `xml:"urn:com.workday/bsvc Benefit_Plan_Reference,omitempty"`
	PlanEligibilityDatesData []PlanEligiblityDatesDataType `xml:"urn:com.workday/bsvc Plan_Eligibility_Dates_Data,omitempty"`
}

// Contains the worker's benefits information.
//
// Security Note: This element is secured to the following domains:  Self Service: Benefit Elections; Worker Data: Benefit Elections
type WorkerBenefitEnrollmentDataType struct {
	HealthCareData           *WorkerHealthCareDataType           `xml:"urn:com.workday/bsvc Health_Care_Data,omitempty"`
	HealthSavingsAccountData *WorkerHealthSavingsAccountDataType `xml:"urn:com.workday/bsvc Health_Savings_Account_Data,omitempty"`
	SpendingAccountData      *WorkerSpendingAccountDataType      `xml:"urn:com.workday/bsvc Spending_Account_Data,omitempty"`
	InsuranceData            *WorkerInsuranceDataType            `xml:"urn:com.workday/bsvc Insurance_Data,omitempty"`
	RetirementSavingsData    *RetirementSavingsDataType          `xml:"urn:com.workday/bsvc Retirement_Savings_Data,omitempty"`
	AdditionalBenefitsData   *WorkerAdditionalBenefitsDataType   `xml:"urn:com.workday/bsvc Additional_Benefits_Data,omitempty"`
	COBRAEligibilityData     []COBRAEligibilityDataType          `xml:"urn:com.workday/bsvc COBRA_Eligibility_Data,omitempty"`
}

// Contains the current career information for an employee. This includes the travel and relocation preferences, job profiles the employee is interested in, and their career interests
type WorkerCareerDataType struct {
	RelocationData      *RelocationPreferenceDataType `xml:"urn:com.workday/bsvc Relocation_Data,omitempty"`
	TravelData          *TravelPreferenceDataType     `xml:"urn:com.workday/bsvc Travel_Data,omitempty"`
	JobInterestsData    *JobInterestsDataType         `xml:"urn:com.workday/bsvc Job_Interests_Data,omitempty"`
	CareerInterestsData *CareerPreferencesDataType    `xml:"urn:com.workday/bsvc Career_Interests_Data,omitempty"`
}

// Wrapper element for the worker compensation code. Contains the reference id and the worker comp code.
type WorkerCompensationCodeDataType struct {
	WorkersCompensationCodeReference *WorkersCompensationCodeObjectType `xml:"urn:com.workday/bsvc Workers_Compensation_Code_Reference,omitempty"`
	WorkersCompensationCode          string                             `xml:"urn:com.workday/bsvc Workers_Compensation_Code,omitempty"`
}

// Contains the worker's compensation information.
//
// Security Note: This element is secured to the following domains:  Self Service: Compensation; Worker Data: Compensation by Organization
type WorkerCompensationDataType struct {
	CompensationEffectiveDate       *time.Time                                    `xml:"urn:com.workday/bsvc Compensation_Effective_Date,omitempty"`
	ReasonReference                 *EventClassificationSubcategoryObjectType     `xml:"urn:com.workday/bsvc Reason_Reference,omitempty"`
	CompensationGuidelinesData      []CompensatableGuidelinesDataType             `xml:"urn:com.workday/bsvc Compensation_Guidelines_Data,omitempty"`
	SalaryandHourlyData             []EmployeeBasePayPlanAssignmentDataType       `xml:"urn:com.workday/bsvc Salary_and_Hourly_Data,omitempty"`
	UnitSalaryPlanData              []EmployeeSalaryUnitPlanAssignmentDataType    `xml:"urn:com.workday/bsvc Unit_Salary_Plan_Data,omitempty"`
	AllowancePlanData               []EmployeeAllowancePlanAssignmentDataType     `xml:"urn:com.workday/bsvc Allowance_Plan_Data,omitempty"`
	UnitAllowancePlanData           []EmployeeAllowanceUnitPlanAssignmentDataType `xml:"urn:com.workday/bsvc Unit_Allowance_Plan_Data,omitempty"`
	BonusPlanData                   []EmployeeBonusPlanAssignmentDataType         `xml:"urn:com.workday/bsvc Bonus_Plan_Data,omitempty"`
	MeritPlanData                   []EmployeeMeritPlanAssignmentDataType         `xml:"urn:com.workday/bsvc Merit_Plan_Data,omitempty"`
	CommissionPlanData              []EmployeeCommissionPlanAssignmentDataType    `xml:"urn:com.workday/bsvc Commission_Plan_Data,omitempty"`
	StockPlanData                   []EmployeeStockPlanAssignmentDataType         `xml:"urn:com.workday/bsvc Stock_Plan_Data,omitempty"`
	FuturePaymentPlanData           []FuturePaymentPlanAssignmentDataType         `xml:"urn:com.workday/bsvc Future_Payment_Plan_Data,omitempty"`
	PeriodSalaryPlanData            []EmployeePeriodSalaryPlanAssignmentDataType  `xml:"urn:com.workday/bsvc Period_Salary_Plan_Data,omitempty"`
	EmployeeCompensationSummaryData *CompensatableSummaryDataType                 `xml:"urn:com.workday/bsvc Employee_Compensation_Summary_Data,omitempty"`
}

func (t *WorkerCompensationDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerCompensationDataType
	var layout struct {
		*T
		CompensationEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Compensation_Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.CompensationEffectiveDate = (*xsdDate)(layout.T.CompensationEffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *WorkerCompensationDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerCompensationDataType
	var overlay struct {
		*T
		CompensationEffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Compensation_Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CompensationEffectiveDate = (*xsdDate)(overlay.T.CompensationEffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Contract data for a Worker.
type WorkerContractDetailDataType struct {
	ContractPayRate           float64              `xml:"urn:com.workday/bsvc Contract_Pay_Rate,omitempty"`
	CurrencyReference         *CurrencyObjectType  `xml:"urn:com.workday/bsvc Currency_Reference,omitempty"`
	FrequencyReference        *FrequencyObjectType `xml:"urn:com.workday/bsvc Frequency_Reference,omitempty"`
	ContractAssignmentDetails string               `xml:"urn:com.workday/bsvc Contract_Assignment_Details,omitempty"`
	ContractEndDate           *time.Time           `xml:"urn:com.workday/bsvc Contract_End_Date,omitempty"`
	SupplierReference         *SupplierObjectType  `xml:"urn:com.workday/bsvc Supplier_Reference,omitempty"`
}

func (t *WorkerContractDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerContractDetailDataType
	var layout struct {
		*T
		ContractEndDate *xsdDate `xml:"urn:com.workday/bsvc Contract_End_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ContractEndDate = (*xsdDate)(layout.T.ContractEndDate)
	return e.EncodeElement(layout, start)
}
func (t *WorkerContractDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerContractDetailDataType
	var overlay struct {
		*T
		ContractEndDate *xsdDate `xml:"urn:com.workday/bsvc Contract_End_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ContractEndDate = (*xsdDate)(overlay.T.ContractEndDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains the detailed information about a worker.
type WorkerDataType struct {
	WorkerID                                 string                                                `xml:"urn:com.workday/bsvc Worker_ID,omitempty"`
	UserID                                   string                                                `xml:"urn:com.workday/bsvc User_ID,omitempty"`
	UniversalID                              string                                                `xml:"urn:com.workday/bsvc Universal_ID,omitempty"`
	PersonalData                             *PersonalInformationDataType                          `xml:"urn:com.workday/bsvc Personal_Data,omitempty"`
	EmploymentData                           *WorkerEmploymentInformationDataType                  `xml:"urn:com.workday/bsvc Employment_Data,omitempty"`
	CompensationData                         *WorkerCompensationDataType                           `xml:"urn:com.workday/bsvc Compensation_Data,omitempty"`
	OrganizationData                         *WorkerOrganizationDataType                           `xml:"urn:com.workday/bsvc Organization_Data,omitempty"`
	RoleData                                 *WorkerRoleDataType                                   `xml:"urn:com.workday/bsvc Role_Data,omitempty"`
	ManagementChainData                      *WorkerManagementChainDataType                        `xml:"urn:com.workday/bsvc Management_Chain_Data,omitempty"`
	BenefitEnrollmentData                    *WorkerBenefitEnrollmentDataType                      `xml:"urn:com.workday/bsvc Benefit_Enrollment_Data,omitempty"`
	BenefitEligibilityData                   *WorkerBenefitEligibilityDataType                     `xml:"urn:com.workday/bsvc Benefit_Eligibility_Data,omitempty"`
	RelatedPersonData                        *WorkerRelatedPersonsDataType                         `xml:"urn:com.workday/bsvc Related_Person_Data,omitempty"`
	QualificationData                        *PersonQualificationDataType                          `xml:"urn:com.workday/bsvc Qualification_Data,omitempty"`
	EmployeeReviewData                       *EmployeeReviewDataType                               `xml:"urn:com.workday/bsvc Employee_Review_Data,omitempty"`
	PhotoData                                *EmployeeImageDataType                                `xml:"urn:com.workday/bsvc Photo_Data,omitempty"`
	WorkerDocumentData                       *WorkerDocumentDataWWSType                            `xml:"urn:com.workday/bsvc Worker_Document_Data,omitempty"`
	IntegrationFieldOverrideData             []DocumentFieldResultDataType                         `xml:"urn:com.workday/bsvc Integration_Field_Override_Data,omitempty"`
	TransactionLogEntryData                  *EventTargetTransactionLogEntryDataType               `xml:"urn:com.workday/bsvc Transaction_Log_Entry_Data,omitempty"`
	TransactionLogCorrectedAndRescindedData  []EventTargetTransactionLogRescindAndCorrectDataType  `xml:"urn:com.workday/bsvc Transaction_Log_Corrected_And_Rescinded_Data,omitempty"`
	SuccessionProfileData                    *SuccessionProfileDataType                            `xml:"urn:com.workday/bsvc Succession_Profile_Data,omitempty"`
	TalentAssessmentData                     *TalentAssessmentDataType                             `xml:"urn:com.workday/bsvc Talent_Assessment_Data,omitempty"`
	WorkerGoalData                           *WorkerGoalDataType                                   `xml:"urn:com.workday/bsvc Worker_Goal_Data,omitempty"`
	DevelopmentItemData                      *WorkerDevelopmentItemDataType                        `xml:"urn:com.workday/bsvc Development_Item_Data,omitempty"`
	SkillData                                *WorkerSkillItemDataType                              `xml:"urn:com.workday/bsvc Skill_Data,omitempty"`
	EmployeeContractsData                    *EmployeeContractsDataType                            `xml:"urn:com.workday/bsvc Employee_Contracts_Data,omitempty"`
	ExtendedEmployeeContractsData            *ExtendedEmployeeContractsDataType                    `xml:"urn:com.workday/bsvc Extended_Employee_Contracts_Data,omitempty"`
	FeedbackReceivedData                     *FeedbackReceivedDataType                             `xml:"urn:com.workday/bsvc Feedback_Received_Data,omitempty"`
	UserAccountData                          *SystemUserforWorkerDataType                          `xml:"urn:com.workday/bsvc User_Account_Data,omitempty"`
	CareerData                               *WorkerCareerDataType                                 `xml:"urn:com.workday/bsvc Career_Data,omitempty"`
	AccountProvisioningData                  *PersonAccountProvisioningDataType                    `xml:"urn:com.workday/bsvc Account_Provisioning_Data,omitempty"`
	BackgroundCheckData                      []BackgroundCheckOverallStatusDataType                `xml:"urn:com.workday/bsvc Background_Check_Data,omitempty"`
	ContingentWorkerTaxAuthorityFormTypeData []ContingentWorkerTaxAuthorityFormInformationDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Tax_Authority_Form_Type_Data,omitempty"`
}

// Contains all Development Items for the referenced Worker
type WorkerDevelopmentItemDataType struct {
	WorkerDevelopmentItem []WorkerDevelopmentItemType `xml:"urn:com.workday/bsvc Worker_Development_Item,omitempty"`
}

// Contains the reference to the Development Item and the Development Item details
type WorkerDevelopmentItemType struct {
	DevelopmentItemReference *DevelopmentItemObjectType      `xml:"urn:com.workday/bsvc Development_Item_Reference,omitempty"`
	DevelopmentItemData      *DevelopmentItemVersionDataType `xml:"urn:com.workday/bsvc Development_Item_Data,omitempty"`
}

// Wrapper element for documents associated with a worker.
type WorkerDocumentDataWWSType struct {
	WorkerDocument []WorkerDocumentWWSType `xml:"urn:com.workday/bsvc Worker_Document,omitempty"`
}

// Wrapper element for the details of a worker document.
type WorkerDocumentDetailsDataType struct {
	DocumentCategoryReference *DocumentCategoryAllObjectType `xml:"urn:com.workday/bsvc Document_Category_Reference"`
	Filename                  string                         `xml:"urn:com.workday/bsvc Filename"`
	Comment                   string                         `xml:"urn:com.workday/bsvc Comment,omitempty"`
	File                      *[]byte                        `xml:"urn:com.workday/bsvc File,omitempty"`
}

func (t *WorkerDocumentDetailsDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerDocumentDetailsDataType
	var layout struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	layout.T = (*T)(t)
	layout.File = (*xsdBase64Binary)(layout.T.File)
	return e.EncodeElement(layout, start)
}
func (t *WorkerDocumentDetailsDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerDocumentDetailsDataType
	var overlay struct {
		*T
		File *xsdBase64Binary `xml:"urn:com.workday/bsvc File,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.File = (*xsdBase64Binary)(overlay.T.File)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type WorkerDocumentObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkerDocumentObjectType struct {
	ID         []WorkerDocumentObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                       `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Wrapper element for documents associated with a worker.
type WorkerDocumentWWSType struct {
	WorkerDocumentReference  *WorkerDocumentObjectType      `xml:"urn:com.workday/bsvc Worker_Document_Reference"`
	WorkerDocumentDetailData *WorkerDocumentDetailsDataType `xml:"urn:com.workday/bsvc Worker_Document_Detail_Data"`
}

// Instance data for Worker Editing Options for Work Schedule Calendar.
type WorkerEditingOptionsDataType struct {
	EnableWorkerEditingOptions         *bool      `xml:"urn:com.workday/bsvc Enable_Worker_Editing_Options,omitempty"`
	ChangeScheduledandNonScheduledDays *bool      `xml:"urn:com.workday/bsvc Change_Scheduled_and_Non_Scheduled_Days,omitempty"`
	ChangeNumberofScheduledDays        *bool      `xml:"urn:com.workday/bsvc Change_Number_of_Scheduled_Days,omitempty"`
	EnableHoursRestrictions            *bool      `xml:"urn:com.workday/bsvc Enable_Hours_Restrictions,omitempty"`
	MinimumNumberofHoursperDay         float64    `xml:"urn:com.workday/bsvc Minimum_Number_of_Hours_per_Day,omitempty"`
	MaximumNumberofHoursperDay         float64    `xml:"urn:com.workday/bsvc Maximum_Number_of_Hours_per_Day,omitempty"`
	MinimumNumberofHoursperWeek        float64    `xml:"urn:com.workday/bsvc Minimum_Number_of_Hours_per_Week,omitempty"`
	MaximumNumberofHoursperWeek        float64    `xml:"urn:com.workday/bsvc Maximum_Number_of_Hours_per_Week,omitempty"`
	ChangeDailyStartandEndTimes        *bool      `xml:"urn:com.workday/bsvc Change_Daily_Start_and_End_Times,omitempty"`
	UniformStartandEndTimes            *bool      `xml:"urn:com.workday/bsvc Uniform_Start_and_End_Times,omitempty"`
	FlexibleStartTime                  *time.Time `xml:"urn:com.workday/bsvc Flexible_Start_Time,omitempty"`
	FlexibleEndTime                    *time.Time `xml:"urn:com.workday/bsvc Flexible_End_Time,omitempty"`
	AllowMeals                         *bool      `xml:"urn:com.workday/bsvc Allow_Meals,omitempty"`
	ChangeMealStartandEndTimes         *bool      `xml:"urn:com.workday/bsvc Change_Meal_Start_and_End_Times,omitempty"`
	MinimumMealDuration                float64    `xml:"urn:com.workday/bsvc Minimum_Meal_Duration,omitempty"`
	MaximumMealDuration                float64    `xml:"urn:com.workday/bsvc Maximum_Meal_Duration,omitempty"`
}

func (t *WorkerEditingOptionsDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerEditingOptionsDataType
	var layout struct {
		*T
		FlexibleStartTime *xsdTime `xml:"urn:com.workday/bsvc Flexible_Start_Time,omitempty"`
		FlexibleEndTime   *xsdTime `xml:"urn:com.workday/bsvc Flexible_End_Time,omitempty"`
	}
	layout.T = (*T)(t)
	layout.FlexibleStartTime = (*xsdTime)(layout.T.FlexibleStartTime)
	layout.FlexibleEndTime = (*xsdTime)(layout.T.FlexibleEndTime)
	return e.EncodeElement(layout, start)
}
func (t *WorkerEditingOptionsDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerEditingOptionsDataType
	var overlay struct {
		*T
		FlexibleStartTime *xsdTime `xml:"urn:com.workday/bsvc Flexible_Start_Time,omitempty"`
		FlexibleEndTime   *xsdTime `xml:"urn:com.workday/bsvc Flexible_End_Time,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.FlexibleStartTime = (*xsdTime)(overlay.T.FlexibleStartTime)
	overlay.FlexibleEndTime = (*xsdTime)(overlay.T.FlexibleEndTime)
	return d.DecodeElement(&overlay, &start)
}

// Contains the worker's employment information, such as their position and job information.
//
// Security Note: This element is secured to the following domains:  Self-Service: Current Staffing Information, Worker Data: Current Staffing Information
type WorkerEmploymentInformationDataType struct {
	WorkerJobData                      []WorkerJobDataType                     `xml:"urn:com.workday/bsvc Worker_Job_Data,omitempty"`
	WorkerStatusData                   *WorkerStatusDetailDataType             `xml:"urn:com.workday/bsvc Worker_Status_Data,omitempty"`
	WorkerContractData                 *WorkerContractDetailDataType           `xml:"urn:com.workday/bsvc Worker_Contract_Data,omitempty"`
	InternationalAssignmentSummaryData *InternationalAssignmentSummaryDataType `xml:"urn:com.workday/bsvc International_Assignment_Summary_Data,omitempty"`
}

// Encapsulating element containing Worker Event History data.
type WorkerEventHistoryDataType struct {
	EventDateRangeData *EffectiveAndUpdatedDateTimeDataType `xml:"urn:com.workday/bsvc Event_Date_Range_Data,omitempty"`
	EventData          []EventHistoryDataType               `xml:"urn:com.workday/bsvc Event_Data,omitempty"`
}

// Utilize the following Reference element (and other optional attributes) to retrieve instances of Worker Events and their associated data.
type WorkerEventHistoryGetType struct {
	WorkerReference    *WorkerReferenceType                 `xml:"urn:com.workday/bsvc Worker_Reference"`
	EventDateRangeData *EffectiveAndUpdatedDateTimeDataType `xml:"urn:com.workday/bsvc Event_Date_Range_Data,omitempty"`
	Version            string                               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Response element containing an instance of Worker and his/her Worker Event History.
type WorkerEventHistoryType struct {
	WorkerReference        *WorkerReferenceType        `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	WorkerEventHistoryData *WorkerEventHistoryDataType `xml:"urn:com.workday/bsvc Worker_Event_History_Data,omitempty"`
	Version                string                      `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

// Contains all the Goal Details (Review Goals and Worker Goal Details) for a Worker.
type WorkerGoalDataType struct {
	Goal []WorkerGoalType `xml:"urn:com.workday/bsvc Goal,omitempty"`
}

// Contains the reference to the Goal Detail and all the Goal Data payload.
type WorkerGoalType struct {
	GoalReference *GoalObjectType      `xml:"urn:com.workday/bsvc Goal_Reference,omitempty"`
	GoalData      []GoalDetailDataType `xml:"urn:com.workday/bsvc Goal_Data,omitempty"`
}

// Contains the health care coverage information (elections) for an employee.
type WorkerHealthCareCoverageDataType struct {
	HealthCareCoverageTargetReference          *HealthCareCoverageTargetObjectType `xml:"urn:com.workday/bsvc Health_Care_Coverage_Target_Reference,omitempty"`
	OriginalCoverageBeginDateforCoverageTarget *time.Time                          `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Coverage_Target,omitempty"`
	ProviderID                                 string                              `xml:"urn:com.workday/bsvc Provider_ID,omitempty"`
	BenefitElectionData                        *WorkerBenefitElectionDataType      `xml:"urn:com.workday/bsvc Benefit_Election_Data,omitempty"`
	DependentCoverageData                      []DependentCoverageDataType         `xml:"urn:com.workday/bsvc Dependent_Coverage_Data,omitempty"`
}

func (t *WorkerHealthCareCoverageDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerHealthCareCoverageDataType
	var layout struct {
		*T
		OriginalCoverageBeginDateforCoverageTarget *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Coverage_Target,omitempty"`
	}
	layout.T = (*T)(t)
	layout.OriginalCoverageBeginDateforCoverageTarget = (*xsdDate)(layout.T.OriginalCoverageBeginDateforCoverageTarget)
	return e.EncodeElement(layout, start)
}
func (t *WorkerHealthCareCoverageDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerHealthCareCoverageDataType
	var overlay struct {
		*T
		OriginalCoverageBeginDateforCoverageTarget *xsdDate `xml:"urn:com.workday/bsvc Original_Coverage_Begin_Date_for_Coverage_Target,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.OriginalCoverageBeginDateforCoverageTarget = (*xsdDate)(overlay.T.OriginalCoverageBeginDateforCoverageTarget)
	return d.DecodeElement(&overlay, &start)
}

// Contains the health care data for an employee.
type WorkerHealthCareDataType struct {
	HealthCarePeriodData []WorkerHealthCarePeriodDataType `xml:"urn:com.workday/bsvc Health_Care_Period_Data,omitempty"`
}

// Contains the health care period data for an employee based on the benefit plan year.
type WorkerHealthCarePeriodDataType struct {
	EnrollmentPeriodData   *EnrollmentPeriodDataType          `xml:"urn:com.workday/bsvc Enrollment_Period_Data,omitempty"`
	HealthCareCoverageData []WorkerHealthCareCoverageDataType `xml:"urn:com.workday/bsvc Health_Care_Coverage_Data,omitempty"`
}

// Contains the health savings account information for an employee.
type WorkerHealthSavingsAccountDataType struct {
	HealthSavingsAccountPeriodData []WorkerHealthSavingsAccountPeriodDataType `xml:"urn:com.workday/bsvc Health_Savings_Account_Period_Data,omitempty"`
}

// Contains the health saving account period data for an employee based on the benefit plan year.
type WorkerHealthSavingsAccountPeriodDataType struct {
	EnrollmentPeriodData             *EnrollmentPeriodDataType              `xml:"urn:com.workday/bsvc Enrollment_Period_Data,omitempty"`
	HealthSavingsAccountCoverageData []HealthSavingsAccountCoverageDataType `xml:"urn:com.workday/bsvc Health_Savings_Account_Coverage_Data,omitempty"`
}

// Contains the insurance election information for the employee.
type WorkerInsuranceCoverageDataType struct {
	InsuranceCoverageLevelData *InsuranceCoverageLevelDataType  `xml:"urn:com.workday/bsvc Insurance_Coverage_Level_Data"`
	BenefitElectionData        *WorkerBenefitElectionDataType   `xml:"urn:com.workday/bsvc Benefit_Election_Data"`
	DependentCoverageData      []DependentCoverageDataType      `xml:"urn:com.workday/bsvc Dependent_Coverage_Data,omitempty"`
	BeneficiaryDesignationData []BeneficiaryDesignationDataType `xml:"urn:com.workday/bsvc Beneficiary_Designation_Data,omitempty"`
}

// Contains the insurance information for an employee.
type WorkerInsuranceDataType struct {
	InsurancePeriodData []WorkerInsurancePeriodDataType `xml:"urn:com.workday/bsvc Insurance_Period_Data,omitempty"`
}

// Contains the insurance period data for an employee based on the benefit plan year.
type WorkerInsurancePeriodDataType struct {
	EnrollmentPeriodData  *EnrollmentPeriodDataType         `xml:"urn:com.workday/bsvc Enrollment_Period_Data,omitempty"`
	InsuranceCoverageData []WorkerInsuranceCoverageDataType `xml:"urn:com.workday/bsvc Insurance_Coverage_Data,omitempty"`
}

// Contains the Position-level data for a Worker.  The primary position is always the first element.
type WorkerJobDataType struct {
	PositionData                 *PositionDetailDataType           `xml:"urn:com.workday/bsvc Position_Data,omitempty"`
	PositionOrganizationsData    *PositionOrganizationDataType     `xml:"urn:com.workday/bsvc Position_Organizations_Data,omitempty"`
	PositionManagementChainsData *PositionManagementChainsDataType `xml:"urn:com.workday/bsvc Position_Management_Chains_Data,omitempty"`
	PrimaryJob                   bool                              `xml:"urn:com.workday/bsvc Primary_Job,attr,omitempty"`
}

// Contains the worker's management chain for supervisory and matrix organizations.
type WorkerManagementChainDataType struct {
	WorkerSupervisoryManagementChainData *WorkerSupervisoryManagementChainDataType `xml:"urn:com.workday/bsvc Worker_Supervisory_Management_Chain_Data,omitempty"`
	WorkerMatrixManagementChainData      *WorkerMatrixManagementChainDataType      `xml:"urn:com.workday/bsvc Worker_Matrix_Management_Chain_Data,omitempty"`
}

// Contains the worker's matrix management chain.
type WorkerMatrixManagementChainDataType struct {
	ManagementChainData []ManagementChainDataType `xml:"urn:com.workday/bsvc Management_Chain_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkerObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkerObjectType struct {
	ID         []WorkerObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string               `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains the worker's organizations that they are a member of.
type WorkerOrganizationDataType struct {
	WorkerOrganizationData []WorkerOrganizationMembershipDataType `xml:"urn:com.workday/bsvc Worker_Organization_Data,omitempty"`
}

// Contains the organization reference and details about an organization.
type WorkerOrganizationMembershipDataType struct {
	OrganizationReference *PositionSetObjectType       `xml:"urn:com.workday/bsvc Organization_Reference"`
	OrganizationData      *OrganizationSummaryDataType `xml:"urn:com.workday/bsvc Organization_Data"`
}

// Contains the workers that fill the organization role.
type WorkerOrganizationRoleAssignmentDataType struct {
	WorkerReference *WorkerObjectType `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	AssignmentFrom  string            `xml:"urn:com.workday/bsvc Assignment_From,omitempty"`
}

// Contains the organization role and the organizations that the worker supports that role for.
type WorkerOrganizationRoleDataType struct {
	OrganizationRole []OrganizationRoleforWorkerDataType `xml:"urn:com.workday/bsvc Organization_Role,omitempty"`
}

// Encapsulating element containing all Worker Personal data.
type WorkerPersonalDataType struct {
	NameData        []NameDataType        `xml:"urn:com.workday/bsvc Name_Data,omitempty"`
	ContactData     *ContactDataType      `xml:"urn:com.workday/bsvc Contact_Data,omitempty"`
	BiographicData  []BiographicDataType  `xml:"urn:com.workday/bsvc Biographic_Data,omitempty"`
	DemographicData []DemographicDataType `xml:"urn:com.workday/bsvc Demographic_Data,omitempty"`
}

// Encapsulating element containing all Personal Information for an Employee.
type WorkerPersonalInfoDataType struct {
	ExternalIntegrationIDData *ExternalIntegrationIDDataType `xml:"urn:com.workday/bsvc External_Integration_ID_Data,omitempty"`
	PersonalInfoData          *PersonalInfoDataType          `xml:"urn:com.workday/bsvc Personal_Info_Data,omitempty"`
}

// Element Containing Worker Reference and Photo Data.
type WorkerPhotoType struct {
	WorkerReference *WorkerObjectType       `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	WorkerPhotoData []EmployeePhotoDataType `xml:"urn:com.workday/bsvc Worker_Photo_Data,omitempty"`
}

// Wrapper Element that Contains Worker References and Worker Photo Data
type WorkerPhotosResponseDataType struct {
	WorkerPhoto []WorkerPhotoType `xml:"urn:com.workday/bsvc Worker_Photo,omitempty"`
}

// Encapsulating element containg all Position data.
type WorkerPositionDataType struct {
	PositionReference            *PositionReferenceType                `xml:"urn:com.workday/bsvc Position_Reference,omitempty"`
	PositionID                   string                                `xml:"urn:com.workday/bsvc Position_ID,omitempty"`
	PositionTitle                string                                `xml:"urn:com.workday/bsvc Position_Title,omitempty"`
	BusinessTitle                string                                `xml:"urn:com.workday/bsvc Business_Title,omitempty"`
	EmployeeTypeReference        []EmployeeTypeReferenceType           `xml:"urn:com.workday/bsvc Employee_Type_Reference,omitempty"`
	PositionTimeTypeReference    []PositionTimeTypeReferenceType       `xml:"urn:com.workday/bsvc Position_Time_Type_Reference,omitempty"`
	JobExempt                    *bool                                 `xml:"urn:com.workday/bsvc Job_Exempt,omitempty"`
	ScheduledWeeklyHours         float64                               `xml:"urn:com.workday/bsvc Scheduled_Weekly_Hours,omitempty"`
	DefaultWeeklyHours           float64                               `xml:"urn:com.workday/bsvc Default_Weekly_Hours,omitempty"`
	FullTimeEquivalentPercentage float64                               `xml:"urn:com.workday/bsvc Full_Time_Equivalent_Percentage,omitempty"`
	PayRateTypeReference         []PayRateTypeReferenceType            `xml:"urn:com.workday/bsvc Pay_Rate_Type_Reference,omitempty"`
	JobClassificationReference   []JobClassificationReferenceType      `xml:"urn:com.workday/bsvc Job_Classification_Reference,omitempty"`
	CompanyInsiderReference      []CompanyInsiderTypeReferenceType     `xml:"urn:com.workday/bsvc Company_Insider_Reference,omitempty"`
	JobProfileSummaryData        []JobProfileinPositionSummaryDataType `xml:"urn:com.workday/bsvc Job_Profile_Summary_Data,omitempty"`
	OrganizationContentData      []OrganizationContentDataType         `xml:"urn:com.workday/bsvc Organization_Content_Data,omitempty"`
	BusinessSiteContentData      []LocationContentDataType             `xml:"urn:com.workday/bsvc Business_Site_Content_Data,omitempty"`
	PayrollProcessingData        []PayrollInterfaceProcessingDataType  `xml:"urn:com.workday/bsvc Payroll_Processing_Data,omitempty"`
	SupervisorReference          []SupervisorReferenceType             `xml:"urn:com.workday/bsvc Supervisor_Reference,omitempty"`
	WorkShiftReference           *WorkShiftObjectType                  `xml:"urn:com.workday/bsvc Work_Shift_Reference,omitempty"`
	WorkHoursProfileReference    *WorkHoursProfileObjectType           `xml:"urn:com.workday/bsvc Work_Hours_Profile_Reference,omitempty"`
	EffectiveDate                time.Time                             `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
}

func (t *WorkerPositionDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerPositionDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(&layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *WorkerPositionDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerPositionDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(&overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Worker Profile data.
type WorkerProfileDataType struct {
	EmployeeID         string                         `xml:"urn:com.workday/bsvc Employee_ID,omitempty"`
	ContingentWorkerID string                         `xml:"urn:com.workday/bsvc Contingent_Worker_ID,omitempty"`
	BusinessTitle      string                         `xml:"urn:com.workday/bsvc Business_Title,omitempty"`
	IntegrationIDData  *ExternalIntegrationIDDataType `xml:"urn:com.workday/bsvc Integration_ID_Data,omitempty"`
	WorkerStatusData   []WorkerStatusDataType         `xml:"urn:com.workday/bsvc Worker_Status_Data,omitempty"`
	WorkerPersonalData []WorkerPersonalDataType       `xml:"urn:com.workday/bsvc Worker_Personal_Data,omitempty"`
	WorkerPositionData []WorkerPositionDataType       `xml:"urn:com.workday/bsvc Worker_Position_Data,omitempty"`
}

// Utilize the following Reference element (and other optional attributes) to retrieve an instance of Worker and his/her summarized Personal and Employment/Contract information.
type WorkerProfileGetType struct {
	WorkerReference *WorkerReferenceType `xml:"urn:com.workday/bsvc Worker_Reference"`
	AsOfDate        time.Time            `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment      time.Time            `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version         string               `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *WorkerProfileGetType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerProfileGetType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *WorkerProfileGetType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerProfileGetType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Response element containing an instance of Worker and his/her summarized Personal and Employment/Contract information.
type WorkerProfileType struct {
	WorkerReference   *WorkerReferenceType   `xml:"urn:com.workday/bsvc Worker_Reference"`
	WorkerProfileData *WorkerProfileDataType `xml:"urn:com.workday/bsvc Worker_Profile_Data"`
	AsOfDate          time.Time              `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
	AsOfMoment        time.Time              `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	Version           string                 `xml:"urn:com.workday/bsvc version,attr,omitempty"`
}

func (t *WorkerProfileType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerProfileType
	var layout struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	layout.T = (*T)(t)
	layout.AsOfDate = (*xsdDate)(&layout.T.AsOfDate)
	layout.AsOfMoment = (*xsdDateTime)(&layout.T.AsOfMoment)
	return e.EncodeElement(layout, start)
}
func (t *WorkerProfileType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerProfileType
	var overlay struct {
		*T
		AsOfDate   *xsdDate     `xml:"urn:com.workday/bsvc As_Of_Date,attr,omitempty"`
		AsOfMoment *xsdDateTime `xml:"urn:com.workday/bsvc As_Of_Moment,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AsOfDate = (*xsdDate)(&overlay.T.AsOfDate)
	overlay.AsOfMoment = (*xsdDateTime)(&overlay.T.AsOfMoment)
	return d.DecodeElement(&overlay, &start)
}

// Reference element representing a unique instance of Worker (e.g. Employee or Contingent Worker).
type WorkerReferenceType struct {
	EmployeeReference         *EmployeeReferenceType             `xml:"urn:com.workday/bsvc Employee_Reference"`
	ContingentWorkerReference *ContingentWorkerReferenceDataType `xml:"urn:com.workday/bsvc Contingent_Worker_Reference"`
}

// Contains the person's that are related to the worker as a dependent, beneficiary or emergency contact.
//
// Security Note: This element is secured to the following domains:  Self Service: Benefit Elections; Worker Data: Benefit Elections
type WorkerRelatedPersonsDataType struct {
	NumberofPayrollDependents float64             `xml:"urn:com.workday/bsvc Number_of_Payroll_Dependents,omitempty"`
	RelatedPerson             []RelatedPersonType `xml:"urn:com.workday/bsvc Related_Person,omitempty"`
}

// The Request Criteria element lets you apply additional criteria to identify the specific instance(s) of a Worker.
type WorkerRequestCriteriaType struct {
	TransactionLogCriteriaData      []TransactionLogCriteriaType            `xml:"urn:com.workday/bsvc Transaction_Log_Criteria_Data,omitempty"`
	OrganizationReference           []OrganizationObjectType                `xml:"urn:com.workday/bsvc Organization_Reference,omitempty"`
	CountryReference                []CountryObjectType                     `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	IncludeSubordinateOrganizations *bool                                   `xml:"urn:com.workday/bsvc Include_Subordinate_Organizations,omitempty"`
	PositionReference               []PositionElementObjectType             `xml:"urn:com.workday/bsvc Position_Reference,omitempty"`
	EventReference                  *TransactionLogObjectType               `xml:"urn:com.workday/bsvc Event_Reference,omitempty"`
	BenefitPlanReference            []BenefitPlanObjectType                 `xml:"urn:com.workday/bsvc Benefit_Plan_Reference,omitempty"`
	FieldAndParameterCriteriaData   *FieldAndParameterCriteriaDataType      `xml:"urn:com.workday/bsvc Field_And_Parameter_Criteria_Data,omitempty"`
	NationalIDCriteriaData          []WorkerbyNationalIDRequestCriteriaType `xml:"urn:com.workday/bsvc National_ID_Criteria_Data,omitempty"`
	ExcludeInactiveWorkers          *bool                                   `xml:"urn:com.workday/bsvc Exclude_Inactive_Workers,omitempty"`
	ExcludeEmployees                *bool                                   `xml:"urn:com.workday/bsvc Exclude_Employees,omitempty"`
	ExcludeContingentWorkers        *bool                                   `xml:"urn:com.workday/bsvc Exclude_Contingent_Workers,omitempty"`
	EligibilityCriteriaData         []EligibilityCriteriaDataType           `xml:"urn:com.workday/bsvc Eligibility_Criteria_Data,omitempty"`
	UniversalIDReference            []UniversalIdentifierObjectType         `xml:"urn:com.workday/bsvc Universal_ID_Reference,omitempty"`
}

// Utilize the Request References element to retrieve a specific instance(s) of Worker and its associated data.
type WorkerRequestReferencesType struct {
	WorkerReference          []WorkerObjectType `xml:"urn:com.workday/bsvc Worker_Reference"`
	SkipNonExistingInstances bool               `xml:"urn:com.workday/bsvc Skip_Non_Existing_Instances,attr,omitempty"`
	IgnoreInvalidReferences  bool               `xml:"urn:com.workday/bsvc Ignore_Invalid_References,attr,omitempty"`
}

// Use the response group to limit the response to the data you are interested in. If the request does not set any values for the response group, then the response by default returns the following elements: Reference, Personal Data, Employment Data, Compensation Data, Organization Data, and Role Data.
type WorkerResponseGroupType struct {
	IncludeReference                                   *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
	IncludePersonalInformation                         *bool `xml:"urn:com.workday/bsvc Include_Personal_Information,omitempty"`
	IncludeAdditionalJobs                              *bool `xml:"urn:com.workday/bsvc Include_Additional_Jobs,omitempty"`
	IncludeEmploymentInformation                       *bool `xml:"urn:com.workday/bsvc Include_Employment_Information,omitempty"`
	IncludeCompensation                                *bool `xml:"urn:com.workday/bsvc Include_Compensation,omitempty"`
	IncludeOrganizations                               *bool `xml:"urn:com.workday/bsvc Include_Organizations,omitempty"`
	ExcludeOrganizationSupportRoleData                 *bool `xml:"urn:com.workday/bsvc Exclude_Organization_Support_Role_Data,omitempty"`
	ExcludeLocationHierarchies                         *bool `xml:"urn:com.workday/bsvc Exclude_Location_Hierarchies,omitempty"`
	ExcludeCostCenters                                 *bool `xml:"urn:com.workday/bsvc Exclude_Cost_Centers,omitempty"`
	ExcludeCostCenterHierarchies                       *bool `xml:"urn:com.workday/bsvc Exclude_Cost_Center_Hierarchies,omitempty"`
	ExcludeCompanies                                   *bool `xml:"urn:com.workday/bsvc Exclude_Companies,omitempty"`
	ExcludeCompanyHierarchies                          *bool `xml:"urn:com.workday/bsvc Exclude_Company_Hierarchies,omitempty"`
	ExcludeMatrixOrganizations                         *bool `xml:"urn:com.workday/bsvc Exclude_Matrix_Organizations,omitempty"`
	ExcludePayGroups                                   *bool `xml:"urn:com.workday/bsvc Exclude_Pay_Groups,omitempty"`
	ExcludeRegions                                     *bool `xml:"urn:com.workday/bsvc Exclude_Regions,omitempty"`
	ExcludeRegionHierarchies                           *bool `xml:"urn:com.workday/bsvc Exclude_Region_Hierarchies,omitempty"`
	ExcludeSupervisoryOrganizations                    *bool `xml:"urn:com.workday/bsvc Exclude_Supervisory_Organizations,omitempty"`
	ExcludeTeams                                       *bool `xml:"urn:com.workday/bsvc Exclude_Teams,omitempty"`
	ExcludeCustomOrganizations                         *bool `xml:"urn:com.workday/bsvc Exclude_Custom_Organizations,omitempty"`
	IncludeRoles                                       *bool `xml:"urn:com.workday/bsvc Include_Roles,omitempty"`
	IncludeManagementChainData                         *bool `xml:"urn:com.workday/bsvc Include_Management_Chain_Data,omitempty"`
	IncludeMultipleManagersinManagementChainData       *bool `xml:"urn:com.workday/bsvc Include_Multiple_Managers_in_Management_Chain_Data,omitempty"`
	IncludeBenefitEnrollments                          *bool `xml:"urn:com.workday/bsvc Include_Benefit_Enrollments,omitempty"`
	IncludeBenefitEligibility                          *bool `xml:"urn:com.workday/bsvc Include_Benefit_Eligibility,omitempty"`
	IncludeRelatedPersons                              *bool `xml:"urn:com.workday/bsvc Include_Related_Persons,omitempty"`
	IncludeQualifications                              *bool `xml:"urn:com.workday/bsvc Include_Qualifications,omitempty"`
	IncludeEmployeeReview                              *bool `xml:"urn:com.workday/bsvc Include_Employee_Review,omitempty"`
	IncludeGoals                                       *bool `xml:"urn:com.workday/bsvc Include_Goals,omitempty"`
	IncludeDevelopmentItems                            *bool `xml:"urn:com.workday/bsvc Include_Development_Items,omitempty"`
	IncludeSkills                                      *bool `xml:"urn:com.workday/bsvc Include_Skills,omitempty"`
	IncludePhoto                                       *bool `xml:"urn:com.workday/bsvc Include_Photo,omitempty"`
	IncludeWorkerDocuments                             *bool `xml:"urn:com.workday/bsvc Include_Worker_Documents,omitempty"`
	IncludeTransactionLogData                          *bool `xml:"urn:com.workday/bsvc Include_Transaction_Log_Data,omitempty"`
	IncludeSubeventsforCorrectedTransaction            *bool `xml:"urn:com.workday/bsvc Include_Subevents_for_Corrected_Transaction,omitempty"`
	IncludeSubeventsforRescindedTransaction            *bool `xml:"urn:com.workday/bsvc Include_Subevents_for_Rescinded_Transaction,omitempty"`
	IncludeSuccessionProfile                           *bool `xml:"urn:com.workday/bsvc Include_Succession_Profile,omitempty"`
	IncludeTalentAssessment                            *bool `xml:"urn:com.workday/bsvc Include_Talent_Assessment,omitempty"`
	IncludeEmployeeContractData                        *bool `xml:"urn:com.workday/bsvc Include_Employee_Contract_Data,omitempty"`
	IncludeContractsforTerminatedWorkers               *bool `xml:"urn:com.workday/bsvc Include_Contracts_for_Terminated_Workers,omitempty"`
	IncludeCollectiveAgreementData                     *bool `xml:"urn:com.workday/bsvc Include_Collective_Agreement_Data,omitempty"`
	IncludeProbationPeriodData                         *bool `xml:"urn:com.workday/bsvc Include_Probation_Period_Data,omitempty"`
	IncludeExtendedEmployeeContractDetails             *bool `xml:"urn:com.workday/bsvc Include_Extended_Employee_Contract_Details,omitempty"`
	IncludeFeedbackReceived                            *bool `xml:"urn:com.workday/bsvc Include_Feedback_Received,omitempty"`
	IncludeUserAccount                                 *bool `xml:"urn:com.workday/bsvc Include_User_Account,omitempty"`
	IncludeCareer                                      *bool `xml:"urn:com.workday/bsvc Include_Career,omitempty"`
	IncludeAccountProvisioning                         *bool `xml:"urn:com.workday/bsvc Include_Account_Provisioning,omitempty"`
	IncludeBackgroundCheckData                         *bool `xml:"urn:com.workday/bsvc Include_Background_Check_Data,omitempty"`
	IncludeContingentWorkerTaxAuthorityFormInformation *bool `xml:"urn:com.workday/bsvc Include_Contingent_Worker_Tax_Authority_Form_Information,omitempty"`
	ExcludeFunds                                       *bool `xml:"urn:com.workday/bsvc Exclude_Funds,omitempty"`
	ExcludeFundHierarchies                             *bool `xml:"urn:com.workday/bsvc Exclude_Fund_Hierarchies,omitempty"`
	ExcludeGrants                                      *bool `xml:"urn:com.workday/bsvc Exclude_Grants,omitempty"`
	ExcludeGrantHierarchies                            *bool `xml:"urn:com.workday/bsvc Exclude_Grant_Hierarchies,omitempty"`
	ExcludeBusinessUnits                               *bool `xml:"urn:com.workday/bsvc Exclude_Business_Units,omitempty"`
	ExcludeBusinessUnitHierarchies                     *bool `xml:"urn:com.workday/bsvc Exclude_Business_Unit_Hierarchies,omitempty"`
	ExcludePrograms                                    *bool `xml:"urn:com.workday/bsvc Exclude_Programs,omitempty"`
	ExcludeProgramHierarchies                          *bool `xml:"urn:com.workday/bsvc Exclude_Program_Hierarchies,omitempty"`
	ExcludeGifts                                       *bool `xml:"urn:com.workday/bsvc Exclude_Gifts,omitempty"`
	ExcludeGiftHierarchies                             *bool `xml:"urn:com.workday/bsvc Exclude_Gift_Hierarchies,omitempty"`
}

// The response group allows for the response data to be tailored to only included elements that the user is looking for.  If no response group is provided in the request, then all groups will be returned. If the Response Group element is returned, you can select which sections of data to include in the response.
type WorkerResponseGroupforReferenceType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Contains the retirement savings election information for the employee.
type WorkerRetirementSavingsDataType struct {
	BenefitElectionData                *WorkerBenefitElectionDataType          `xml:"urn:com.workday/bsvc Benefit_Election_Data"`
	EmployeeContributionPercentageData *EmployeeContributionPercentageDataType `xml:"urn:com.workday/bsvc Employee_Contribution_Percentage_Data,omitempty"`
	EmployeeContributionAmountData     *EmployeeContributionAmountDataType     `xml:"urn:com.workday/bsvc Employee_Contribution_Amount_Data,omitempty"`
	EmployerContributionPercentageData *EmployerContributionPercentageDataType `xml:"urn:com.workday/bsvc Employer_Contribution_Percentage_Data,omitempty"`
	EmployerContributionAmountData     *EmployerContributionAmountDataType     `xml:"urn:com.workday/bsvc Employer_Contribution_Amount_Data,omitempty"`
	BeneficiaryDesignationData         []BeneficiaryDesignationDataType        `xml:"urn:com.workday/bsvc Beneficiary_Designation_Data,omitempty"`
}

// Contains the retirement savings election information for the benefit plan year period.
type WorkerRetirementSavingsPeriodDataType struct {
	EnrollmentPeriodData          *EnrollmentPeriodDataType         `xml:"urn:com.workday/bsvc Enrollment_Period_Data,omitempty"`
	RetirementSavingsCoverageData []WorkerRetirementSavingsDataType `xml:"urn:com.workday/bsvc Retirement_Savings_Coverage_Data,omitempty"`
}

// Contains the roles that a worker holds.
type WorkerRoleDataType struct {
	OrganizationRoleData *WorkerOrganizationRoleDataType `xml:"urn:com.workday/bsvc Organization_Role_Data,omitempty"`
}

// Creates all Skills for the referenced Worker
type WorkerSkillItemDataType struct {
	WorkerSkillItem []SkillType `xml:"urn:com.workday/bsvc Worker_Skill_Item,omitempty"`
}

// Contains the spending account information for an employee.
type WorkerSpendingAccountDataType struct {
	SpendingAccountPeriodData []WorkerSpendingAccountPeriodDataType `xml:"urn:com.workday/bsvc Spending_Account_Period_Data,omitempty"`
}

// Contains the spending account period data for an employee based on the benefit plan year.
type WorkerSpendingAccountPeriodDataType struct {
	EnrollmentPeriodData        *EnrollmentPeriodDataType         `xml:"urn:com.workday/bsvc Enrollment_Period_Data,omitempty"`
	SpendingAccountCoverageData []SpendingAccountCoverageDataType `xml:"urn:com.workday/bsvc Spending_Account_Coverage_Data,omitempty"`
}

// Encapsulating element containing all Status data for a Worker.
type WorkerStatusDataType struct {
	Active                          *bool                       `xml:"urn:com.workday/bsvc Active,omitempty"`
	HireDate                        *time.Time                  `xml:"urn:com.workday/bsvc Hire_Date,omitempty"`
	OriginalHireDate                *time.Time                  `xml:"urn:com.workday/bsvc Original_Hire_Date,omitempty"`
	EndEmploymentDate               *time.Time                  `xml:"urn:com.workday/bsvc End_Employment_Date,omitempty"`
	HireReason                      string                      `xml:"urn:com.workday/bsvc Hire_Reason,omitempty"`
	ContinuousServiceDate           *time.Time                  `xml:"urn:com.workday/bsvc Continuous_Service_Date,omitempty"`
	FirstDayofWork                  *time.Time                  `xml:"urn:com.workday/bsvc First_Day_of_Work,omitempty"`
	ExpectedRetirementDate          *time.Time                  `xml:"urn:com.workday/bsvc Expected_Retirement_Date,omitempty"`
	RetirementEligibilityDate       *time.Time                  `xml:"urn:com.workday/bsvc Retirement_Eligibility_Date,omitempty"`
	Retired                         *bool                       `xml:"urn:com.workday/bsvc Retired,omitempty"`
	RetirementDate                  *time.Time                  `xml:"urn:com.workday/bsvc Retirement_Date,omitempty"`
	SeniorityDate                   *time.Time                  `xml:"urn:com.workday/bsvc Seniority_Date,omitempty"`
	SeveranceDate                   *time.Time                  `xml:"urn:com.workday/bsvc Severance_Date,omitempty"`
	BenefitsServiceDate             *time.Time                  `xml:"urn:com.workday/bsvc Benefits_Service_Date,omitempty"`
	CompanyServiceDate              *time.Time                  `xml:"urn:com.workday/bsvc Company_Service_Date,omitempty"`
	TimeOffServiceDate              *time.Time                  `xml:"urn:com.workday/bsvc Time_Off_Service_Date,omitempty"`
	VestingDate                     *time.Time                  `xml:"urn:com.workday/bsvc Vesting_Date,omitempty"`
	DateEnteredWorkforce            *time.Time                  `xml:"urn:com.workday/bsvc Date_Entered_Workforce,omitempty"`
	DaysUnemployed                  float64                     `xml:"urn:com.workday/bsvc Days_Unemployed,omitempty"`
	MonthsContinuousPriorEmployment float64                     `xml:"urn:com.workday/bsvc Months_Continuous_Prior_Employment,omitempty"`
	LeaveStatusData                 []LeaveStatusDataType       `xml:"urn:com.workday/bsvc Leave_Status_Data,omitempty"`
	TerminationStatusData           []TerminationStatusDataType `xml:"urn:com.workday/bsvc Termination_Status_Data,omitempty"`
	ProbationStatusData             []ProbationStatusDataType   `xml:"urn:com.workday/bsvc Probation_Status_Data,omitempty"`
}

func (t *WorkerStatusDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerStatusDataType
	var layout struct {
		*T
		HireDate                  *xsdDate `xml:"urn:com.workday/bsvc Hire_Date,omitempty"`
		OriginalHireDate          *xsdDate `xml:"urn:com.workday/bsvc Original_Hire_Date,omitempty"`
		EndEmploymentDate         *xsdDate `xml:"urn:com.workday/bsvc End_Employment_Date,omitempty"`
		ContinuousServiceDate     *xsdDate `xml:"urn:com.workday/bsvc Continuous_Service_Date,omitempty"`
		FirstDayofWork            *xsdDate `xml:"urn:com.workday/bsvc First_Day_of_Work,omitempty"`
		ExpectedRetirementDate    *xsdDate `xml:"urn:com.workday/bsvc Expected_Retirement_Date,omitempty"`
		RetirementEligibilityDate *xsdDate `xml:"urn:com.workday/bsvc Retirement_Eligibility_Date,omitempty"`
		RetirementDate            *xsdDate `xml:"urn:com.workday/bsvc Retirement_Date,omitempty"`
		SeniorityDate             *xsdDate `xml:"urn:com.workday/bsvc Seniority_Date,omitempty"`
		SeveranceDate             *xsdDate `xml:"urn:com.workday/bsvc Severance_Date,omitempty"`
		BenefitsServiceDate       *xsdDate `xml:"urn:com.workday/bsvc Benefits_Service_Date,omitempty"`
		CompanyServiceDate        *xsdDate `xml:"urn:com.workday/bsvc Company_Service_Date,omitempty"`
		TimeOffServiceDate        *xsdDate `xml:"urn:com.workday/bsvc Time_Off_Service_Date,omitempty"`
		VestingDate               *xsdDate `xml:"urn:com.workday/bsvc Vesting_Date,omitempty"`
		DateEnteredWorkforce      *xsdDate `xml:"urn:com.workday/bsvc Date_Entered_Workforce,omitempty"`
	}
	layout.T = (*T)(t)
	layout.HireDate = (*xsdDate)(layout.T.HireDate)
	layout.OriginalHireDate = (*xsdDate)(layout.T.OriginalHireDate)
	layout.EndEmploymentDate = (*xsdDate)(layout.T.EndEmploymentDate)
	layout.ContinuousServiceDate = (*xsdDate)(layout.T.ContinuousServiceDate)
	layout.FirstDayofWork = (*xsdDate)(layout.T.FirstDayofWork)
	layout.ExpectedRetirementDate = (*xsdDate)(layout.T.ExpectedRetirementDate)
	layout.RetirementEligibilityDate = (*xsdDate)(layout.T.RetirementEligibilityDate)
	layout.RetirementDate = (*xsdDate)(layout.T.RetirementDate)
	layout.SeniorityDate = (*xsdDate)(layout.T.SeniorityDate)
	layout.SeveranceDate = (*xsdDate)(layout.T.SeveranceDate)
	layout.BenefitsServiceDate = (*xsdDate)(layout.T.BenefitsServiceDate)
	layout.CompanyServiceDate = (*xsdDate)(layout.T.CompanyServiceDate)
	layout.TimeOffServiceDate = (*xsdDate)(layout.T.TimeOffServiceDate)
	layout.VestingDate = (*xsdDate)(layout.T.VestingDate)
	layout.DateEnteredWorkforce = (*xsdDate)(layout.T.DateEnteredWorkforce)
	return e.EncodeElement(layout, start)
}
func (t *WorkerStatusDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerStatusDataType
	var overlay struct {
		*T
		HireDate                  *xsdDate `xml:"urn:com.workday/bsvc Hire_Date,omitempty"`
		OriginalHireDate          *xsdDate `xml:"urn:com.workday/bsvc Original_Hire_Date,omitempty"`
		EndEmploymentDate         *xsdDate `xml:"urn:com.workday/bsvc End_Employment_Date,omitempty"`
		ContinuousServiceDate     *xsdDate `xml:"urn:com.workday/bsvc Continuous_Service_Date,omitempty"`
		FirstDayofWork            *xsdDate `xml:"urn:com.workday/bsvc First_Day_of_Work,omitempty"`
		ExpectedRetirementDate    *xsdDate `xml:"urn:com.workday/bsvc Expected_Retirement_Date,omitempty"`
		RetirementEligibilityDate *xsdDate `xml:"urn:com.workday/bsvc Retirement_Eligibility_Date,omitempty"`
		RetirementDate            *xsdDate `xml:"urn:com.workday/bsvc Retirement_Date,omitempty"`
		SeniorityDate             *xsdDate `xml:"urn:com.workday/bsvc Seniority_Date,omitempty"`
		SeveranceDate             *xsdDate `xml:"urn:com.workday/bsvc Severance_Date,omitempty"`
		BenefitsServiceDate       *xsdDate `xml:"urn:com.workday/bsvc Benefits_Service_Date,omitempty"`
		CompanyServiceDate        *xsdDate `xml:"urn:com.workday/bsvc Company_Service_Date,omitempty"`
		TimeOffServiceDate        *xsdDate `xml:"urn:com.workday/bsvc Time_Off_Service_Date,omitempty"`
		VestingDate               *xsdDate `xml:"urn:com.workday/bsvc Vesting_Date,omitempty"`
		DateEnteredWorkforce      *xsdDate `xml:"urn:com.workday/bsvc Date_Entered_Workforce,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.HireDate = (*xsdDate)(overlay.T.HireDate)
	overlay.OriginalHireDate = (*xsdDate)(overlay.T.OriginalHireDate)
	overlay.EndEmploymentDate = (*xsdDate)(overlay.T.EndEmploymentDate)
	overlay.ContinuousServiceDate = (*xsdDate)(overlay.T.ContinuousServiceDate)
	overlay.FirstDayofWork = (*xsdDate)(overlay.T.FirstDayofWork)
	overlay.ExpectedRetirementDate = (*xsdDate)(overlay.T.ExpectedRetirementDate)
	overlay.RetirementEligibilityDate = (*xsdDate)(overlay.T.RetirementEligibilityDate)
	overlay.RetirementDate = (*xsdDate)(overlay.T.RetirementDate)
	overlay.SeniorityDate = (*xsdDate)(overlay.T.SeniorityDate)
	overlay.SeveranceDate = (*xsdDate)(overlay.T.SeveranceDate)
	overlay.BenefitsServiceDate = (*xsdDate)(overlay.T.BenefitsServiceDate)
	overlay.CompanyServiceDate = (*xsdDate)(overlay.T.CompanyServiceDate)
	overlay.TimeOffServiceDate = (*xsdDate)(overlay.T.TimeOffServiceDate)
	overlay.VestingDate = (*xsdDate)(overlay.T.VestingDate)
	overlay.DateEnteredWorkforce = (*xsdDate)(overlay.T.DateEnteredWorkforce)
	return d.DecodeElement(&overlay, &start)
}

// Encapsulating element containing all Status data for a Worker.
type WorkerStatusDetailDataType struct {
	Active                                        *bool                                  `xml:"urn:com.workday/bsvc Active,omitempty"`
	ActiveStatusDate                              *time.Time                             `xml:"urn:com.workday/bsvc Active_Status_Date,omitempty"`
	HireDate                                      *time.Time                             `xml:"urn:com.workday/bsvc Hire_Date,omitempty"`
	OriginalHireDate                              *time.Time                             `xml:"urn:com.workday/bsvc Original_Hire_Date,omitempty"`
	HireReasonReference                           *GeneralEventSubcategoryObjectType     `xml:"urn:com.workday/bsvc Hire_Reason_Reference,omitempty"`
	EndEmploymentDate                             *time.Time                             `xml:"urn:com.workday/bsvc End_Employment_Date,omitempty"`
	ContinuousServiceDate                         *time.Time                             `xml:"urn:com.workday/bsvc Continuous_Service_Date,omitempty"`
	FirstDayofWork                                *time.Time                             `xml:"urn:com.workday/bsvc First_Day_of_Work,omitempty"`
	ExpectedRetirementDate                        *time.Time                             `xml:"urn:com.workday/bsvc Expected_Retirement_Date,omitempty"`
	RetirementEligibilityDate                     *time.Time                             `xml:"urn:com.workday/bsvc Retirement_Eligibility_Date,omitempty"`
	Retired                                       *bool                                  `xml:"urn:com.workday/bsvc Retired,omitempty"`
	RetirementDate                                *time.Time                             `xml:"urn:com.workday/bsvc Retirement_Date,omitempty"`
	SeniorityDate                                 *time.Time                             `xml:"urn:com.workday/bsvc Seniority_Date,omitempty"`
	SeveranceDate                                 *time.Time                             `xml:"urn:com.workday/bsvc Severance_Date,omitempty"`
	BenefitsServiceDate                           *time.Time                             `xml:"urn:com.workday/bsvc Benefits_Service_Date,omitempty"`
	CompanyServiceDate                            *time.Time                             `xml:"urn:com.workday/bsvc Company_Service_Date,omitempty"`
	TimeOffServiceDate                            *time.Time                             `xml:"urn:com.workday/bsvc Time_Off_Service_Date,omitempty"`
	VestingDate                                   *time.Time                             `xml:"urn:com.workday/bsvc Vesting_Date,omitempty"`
	DateEnteredWorkforce                          *time.Time                             `xml:"urn:com.workday/bsvc Date_Entered_Workforce,omitempty"`
	DaysUnemployed                                float64                                `xml:"urn:com.workday/bsvc Days_Unemployed,omitempty"`
	MonthsContinuousPriorEmployment               float64                                `xml:"urn:com.workday/bsvc Months_Continuous_Prior_Employment,omitempty"`
	Terminated                                    *bool                                  `xml:"urn:com.workday/bsvc Terminated,omitempty"`
	TerminationDate                               *time.Time                             `xml:"urn:com.workday/bsvc Termination_Date,omitempty"`
	PayThroughDate                                *time.Time                             `xml:"urn:com.workday/bsvc Pay_Through_Date,omitempty"`
	PrimaryTerminationReasonReference             *TerminationSubcategoryObjectType      `xml:"urn:com.workday/bsvc Primary_Termination_Reason_Reference,omitempty"`
	PrimaryTerminationCategoryReference           *EventClassificationCategoryObjectType `xml:"urn:com.workday/bsvc Primary_Termination_Category_Reference,omitempty"`
	TerminationInvoluntary                        *bool                                  `xml:"urn:com.workday/bsvc Termination_Involuntary,omitempty"`
	SecondaryTerminationReasonsData               []SecondaryTerminationDataType         `xml:"urn:com.workday/bsvc Secondary_Termination_Reasons_Data,omitempty"`
	LocalTerminationReasonReference               *LocalTerminationReasonObjectType      `xml:"urn:com.workday/bsvc Local_Termination_Reason_Reference,omitempty"`
	EligibleforHireReference                      *CommonYesNoObjectType                 `xml:"urn:com.workday/bsvc Eligible_for_Hire_Reference,omitempty"`
	RegrettableTermination                        *bool                                  `xml:"urn:com.workday/bsvc Regrettable_Termination,omitempty"`
	EligibleforRehireonLatestTerminationReference *CommonYesNoObjectType                 `xml:"urn:com.workday/bsvc Eligible_for_Rehire_on_Latest_Termination_Reference,omitempty"`
	HireRescinded                                 *bool                                  `xml:"urn:com.workday/bsvc Hire_Rescinded,omitempty"`
	TerminationLastDayofWork                      *time.Time                             `xml:"urn:com.workday/bsvc Termination_Last_Day_of_Work,omitempty"`
	ResignationDate                               *time.Time                             `xml:"urn:com.workday/bsvc Resignation_Date,omitempty"`
	LastDateforWhichPaid                          *time.Time                             `xml:"urn:com.workday/bsvc Last_Date_for_Which_Paid,omitempty"`
	ExpectedDateofReturn                          *time.Time                             `xml:"urn:com.workday/bsvc Expected_Date_of_Return,omitempty"`
	NotReturning                                  *bool                                  `xml:"urn:com.workday/bsvc Not_Returning,omitempty"`
	ReturnUnknown                                 *bool                                  `xml:"urn:com.workday/bsvc Return_Unknown,omitempty"`
	ProbationStartDate                            *time.Time                             `xml:"urn:com.workday/bsvc Probation_Start_Date,omitempty"`
	ProbationEndDate                              *time.Time                             `xml:"urn:com.workday/bsvc Probation_End_Date,omitempty"`
	LeaveStatusData                               []LeaveStatusDetailDataType            `xml:"urn:com.workday/bsvc Leave_Status_Data,omitempty"`
	LeaveRequestsCorrectedData                    []LeaveRequestsCorrectedDetailDataType `xml:"urn:com.workday/bsvc Leave_Requests_Corrected_Data,omitempty"`
	AcademicTenureDate                            *time.Time                             `xml:"urn:com.workday/bsvc Academic_Tenure_Date,omitempty"`
	Rehire                                        *bool                                  `xml:"urn:com.workday/bsvc Rehire,omitempty"`
}

func (t *WorkerStatusDetailDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkerStatusDetailDataType
	var layout struct {
		*T
		ActiveStatusDate          *xsdDate `xml:"urn:com.workday/bsvc Active_Status_Date,omitempty"`
		HireDate                  *xsdDate `xml:"urn:com.workday/bsvc Hire_Date,omitempty"`
		OriginalHireDate          *xsdDate `xml:"urn:com.workday/bsvc Original_Hire_Date,omitempty"`
		EndEmploymentDate         *xsdDate `xml:"urn:com.workday/bsvc End_Employment_Date,omitempty"`
		ContinuousServiceDate     *xsdDate `xml:"urn:com.workday/bsvc Continuous_Service_Date,omitempty"`
		FirstDayofWork            *xsdDate `xml:"urn:com.workday/bsvc First_Day_of_Work,omitempty"`
		ExpectedRetirementDate    *xsdDate `xml:"urn:com.workday/bsvc Expected_Retirement_Date,omitempty"`
		RetirementEligibilityDate *xsdDate `xml:"urn:com.workday/bsvc Retirement_Eligibility_Date,omitempty"`
		RetirementDate            *xsdDate `xml:"urn:com.workday/bsvc Retirement_Date,omitempty"`
		SeniorityDate             *xsdDate `xml:"urn:com.workday/bsvc Seniority_Date,omitempty"`
		SeveranceDate             *xsdDate `xml:"urn:com.workday/bsvc Severance_Date,omitempty"`
		BenefitsServiceDate       *xsdDate `xml:"urn:com.workday/bsvc Benefits_Service_Date,omitempty"`
		CompanyServiceDate        *xsdDate `xml:"urn:com.workday/bsvc Company_Service_Date,omitempty"`
		TimeOffServiceDate        *xsdDate `xml:"urn:com.workday/bsvc Time_Off_Service_Date,omitempty"`
		VestingDate               *xsdDate `xml:"urn:com.workday/bsvc Vesting_Date,omitempty"`
		DateEnteredWorkforce      *xsdDate `xml:"urn:com.workday/bsvc Date_Entered_Workforce,omitempty"`
		TerminationDate           *xsdDate `xml:"urn:com.workday/bsvc Termination_Date,omitempty"`
		PayThroughDate            *xsdDate `xml:"urn:com.workday/bsvc Pay_Through_Date,omitempty"`
		TerminationLastDayofWork  *xsdDate `xml:"urn:com.workday/bsvc Termination_Last_Day_of_Work,omitempty"`
		ResignationDate           *xsdDate `xml:"urn:com.workday/bsvc Resignation_Date,omitempty"`
		LastDateforWhichPaid      *xsdDate `xml:"urn:com.workday/bsvc Last_Date_for_Which_Paid,omitempty"`
		ExpectedDateofReturn      *xsdDate `xml:"urn:com.workday/bsvc Expected_Date_of_Return,omitempty"`
		ProbationStartDate        *xsdDate `xml:"urn:com.workday/bsvc Probation_Start_Date,omitempty"`
		ProbationEndDate          *xsdDate `xml:"urn:com.workday/bsvc Probation_End_Date,omitempty"`
		AcademicTenureDate        *xsdDate `xml:"urn:com.workday/bsvc Academic_Tenure_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.ActiveStatusDate = (*xsdDate)(layout.T.ActiveStatusDate)
	layout.HireDate = (*xsdDate)(layout.T.HireDate)
	layout.OriginalHireDate = (*xsdDate)(layout.T.OriginalHireDate)
	layout.EndEmploymentDate = (*xsdDate)(layout.T.EndEmploymentDate)
	layout.ContinuousServiceDate = (*xsdDate)(layout.T.ContinuousServiceDate)
	layout.FirstDayofWork = (*xsdDate)(layout.T.FirstDayofWork)
	layout.ExpectedRetirementDate = (*xsdDate)(layout.T.ExpectedRetirementDate)
	layout.RetirementEligibilityDate = (*xsdDate)(layout.T.RetirementEligibilityDate)
	layout.RetirementDate = (*xsdDate)(layout.T.RetirementDate)
	layout.SeniorityDate = (*xsdDate)(layout.T.SeniorityDate)
	layout.SeveranceDate = (*xsdDate)(layout.T.SeveranceDate)
	layout.BenefitsServiceDate = (*xsdDate)(layout.T.BenefitsServiceDate)
	layout.CompanyServiceDate = (*xsdDate)(layout.T.CompanyServiceDate)
	layout.TimeOffServiceDate = (*xsdDate)(layout.T.TimeOffServiceDate)
	layout.VestingDate = (*xsdDate)(layout.T.VestingDate)
	layout.DateEnteredWorkforce = (*xsdDate)(layout.T.DateEnteredWorkforce)
	layout.TerminationDate = (*xsdDate)(layout.T.TerminationDate)
	layout.PayThroughDate = (*xsdDate)(layout.T.PayThroughDate)
	layout.TerminationLastDayofWork = (*xsdDate)(layout.T.TerminationLastDayofWork)
	layout.ResignationDate = (*xsdDate)(layout.T.ResignationDate)
	layout.LastDateforWhichPaid = (*xsdDate)(layout.T.LastDateforWhichPaid)
	layout.ExpectedDateofReturn = (*xsdDate)(layout.T.ExpectedDateofReturn)
	layout.ProbationStartDate = (*xsdDate)(layout.T.ProbationStartDate)
	layout.ProbationEndDate = (*xsdDate)(layout.T.ProbationEndDate)
	layout.AcademicTenureDate = (*xsdDate)(layout.T.AcademicTenureDate)
	return e.EncodeElement(layout, start)
}
func (t *WorkerStatusDetailDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkerStatusDetailDataType
	var overlay struct {
		*T
		ActiveStatusDate          *xsdDate `xml:"urn:com.workday/bsvc Active_Status_Date,omitempty"`
		HireDate                  *xsdDate `xml:"urn:com.workday/bsvc Hire_Date,omitempty"`
		OriginalHireDate          *xsdDate `xml:"urn:com.workday/bsvc Original_Hire_Date,omitempty"`
		EndEmploymentDate         *xsdDate `xml:"urn:com.workday/bsvc End_Employment_Date,omitempty"`
		ContinuousServiceDate     *xsdDate `xml:"urn:com.workday/bsvc Continuous_Service_Date,omitempty"`
		FirstDayofWork            *xsdDate `xml:"urn:com.workday/bsvc First_Day_of_Work,omitempty"`
		ExpectedRetirementDate    *xsdDate `xml:"urn:com.workday/bsvc Expected_Retirement_Date,omitempty"`
		RetirementEligibilityDate *xsdDate `xml:"urn:com.workday/bsvc Retirement_Eligibility_Date,omitempty"`
		RetirementDate            *xsdDate `xml:"urn:com.workday/bsvc Retirement_Date,omitempty"`
		SeniorityDate             *xsdDate `xml:"urn:com.workday/bsvc Seniority_Date,omitempty"`
		SeveranceDate             *xsdDate `xml:"urn:com.workday/bsvc Severance_Date,omitempty"`
		BenefitsServiceDate       *xsdDate `xml:"urn:com.workday/bsvc Benefits_Service_Date,omitempty"`
		CompanyServiceDate        *xsdDate `xml:"urn:com.workday/bsvc Company_Service_Date,omitempty"`
		TimeOffServiceDate        *xsdDate `xml:"urn:com.workday/bsvc Time_Off_Service_Date,omitempty"`
		VestingDate               *xsdDate `xml:"urn:com.workday/bsvc Vesting_Date,omitempty"`
		DateEnteredWorkforce      *xsdDate `xml:"urn:com.workday/bsvc Date_Entered_Workforce,omitempty"`
		TerminationDate           *xsdDate `xml:"urn:com.workday/bsvc Termination_Date,omitempty"`
		PayThroughDate            *xsdDate `xml:"urn:com.workday/bsvc Pay_Through_Date,omitempty"`
		TerminationLastDayofWork  *xsdDate `xml:"urn:com.workday/bsvc Termination_Last_Day_of_Work,omitempty"`
		ResignationDate           *xsdDate `xml:"urn:com.workday/bsvc Resignation_Date,omitempty"`
		LastDateforWhichPaid      *xsdDate `xml:"urn:com.workday/bsvc Last_Date_for_Which_Paid,omitempty"`
		ExpectedDateofReturn      *xsdDate `xml:"urn:com.workday/bsvc Expected_Date_of_Return,omitempty"`
		ProbationStartDate        *xsdDate `xml:"urn:com.workday/bsvc Probation_Start_Date,omitempty"`
		ProbationEndDate          *xsdDate `xml:"urn:com.workday/bsvc Probation_End_Date,omitempty"`
		AcademicTenureDate        *xsdDate `xml:"urn:com.workday/bsvc Academic_Tenure_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ActiveStatusDate = (*xsdDate)(overlay.T.ActiveStatusDate)
	overlay.HireDate = (*xsdDate)(overlay.T.HireDate)
	overlay.OriginalHireDate = (*xsdDate)(overlay.T.OriginalHireDate)
	overlay.EndEmploymentDate = (*xsdDate)(overlay.T.EndEmploymentDate)
	overlay.ContinuousServiceDate = (*xsdDate)(overlay.T.ContinuousServiceDate)
	overlay.FirstDayofWork = (*xsdDate)(overlay.T.FirstDayofWork)
	overlay.ExpectedRetirementDate = (*xsdDate)(overlay.T.ExpectedRetirementDate)
	overlay.RetirementEligibilityDate = (*xsdDate)(overlay.T.RetirementEligibilityDate)
	overlay.RetirementDate = (*xsdDate)(overlay.T.RetirementDate)
	overlay.SeniorityDate = (*xsdDate)(overlay.T.SeniorityDate)
	overlay.SeveranceDate = (*xsdDate)(overlay.T.SeveranceDate)
	overlay.BenefitsServiceDate = (*xsdDate)(overlay.T.BenefitsServiceDate)
	overlay.CompanyServiceDate = (*xsdDate)(overlay.T.CompanyServiceDate)
	overlay.TimeOffServiceDate = (*xsdDate)(overlay.T.TimeOffServiceDate)
	overlay.VestingDate = (*xsdDate)(overlay.T.VestingDate)
	overlay.DateEnteredWorkforce = (*xsdDate)(overlay.T.DateEnteredWorkforce)
	overlay.TerminationDate = (*xsdDate)(overlay.T.TerminationDate)
	overlay.PayThroughDate = (*xsdDate)(overlay.T.PayThroughDate)
	overlay.TerminationLastDayofWork = (*xsdDate)(overlay.T.TerminationLastDayofWork)
	overlay.ResignationDate = (*xsdDate)(overlay.T.ResignationDate)
	overlay.LastDateforWhichPaid = (*xsdDate)(overlay.T.LastDateforWhichPaid)
	overlay.ExpectedDateofReturn = (*xsdDate)(overlay.T.ExpectedDateofReturn)
	overlay.ProbationStartDate = (*xsdDate)(overlay.T.ProbationStartDate)
	overlay.ProbationEndDate = (*xsdDate)(overlay.T.ProbationEndDate)
	overlay.AcademicTenureDate = (*xsdDate)(overlay.T.AcademicTenureDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains the worker's supervisory management chain.
type WorkerSupervisoryManagementChainDataType struct {
	ManagementChainData []ManagementChainDataType `xml:"urn:com.workday/bsvc Management_Chain_Data,omitempty"`
}

// Encapsulating element containing all Worker Profile data.
type WorkerType struct {
	WorkerReference              *WorkerObjectType              `xml:"urn:com.workday/bsvc Worker_Reference,omitempty"`
	WorkerDescriptor             string                         `xml:"urn:com.workday/bsvc Worker_Descriptor,omitempty"`
	UniversalIdentifierReference *UniversalIdentifierObjectType `xml:"urn:com.workday/bsvc Universal_Identifier_Reference,omitempty"`
	WorkerData                   *WorkerDataType                `xml:"urn:com.workday/bsvc Worker_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkerTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkerTypeObjectType struct {
	ID         []WorkerTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// National Id request criteria.
type WorkerbyNationalIDRequestCriteriaType struct {
	IdentifierID            string                    `xml:"urn:com.workday/bsvc Identifier_ID"`
	NationalIDTypeReference *NationalIDTypeObjectType `xml:"urn:com.workday/bsvc National_ID_Type_Reference"`
	CountryReference        *CountryObjectType        `xml:"urn:com.workday/bsvc Country_Reference"`
}

// Element containing Workers' Compensation Code data
type WorkersCompensationCodeDataType struct {
	WorkersCompensationID   string                    `xml:"urn:com.workday/bsvc Workers_Compensation_ID,omitempty"`
	WorkersCompensationCode string                    `xml:"urn:com.workday/bsvc Workers_Compensation_Code"`
	WorkersCompensationName string                    `xml:"urn:com.workday/bsvc Workers_Compensation_Name"`
	CountryReference        *CountryObjectType        `xml:"urn:com.workday/bsvc Country_Reference"`
	CountryRegionReference  []CountryRegionObjectType `xml:"urn:com.workday/bsvc Country_Region_Reference,omitempty"`
	LocationReference       []LocationObjectType      `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
	Inactive                *bool                     `xml:"urn:com.workday/bsvc Inactive,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkersCompensationCodeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkersCompensationCodeObjectType struct {
	ID         []WorkersCompensationCodeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Utilize the Request Criteria to search for a specific instance(s) of a Workers' Compensation Code
type WorkersCompensationCodeRequestCriteriaType struct {
	CountryReference          []CountryObjectType       `xml:"urn:com.workday/bsvc Country_Reference,omitempty"`
	CountrySubregionReference []CountryRegionObjectType `xml:"urn:com.workday/bsvc Country_Subregion_Reference,omitempty"`
	LocationReference         []LocationObjectType      `xml:"urn:com.workday/bsvc Location_Reference,omitempty"`
}

// Element containing reference instance for a Workers' Compensation Code
type WorkersCompensationCodeRequestReferencesType struct {
	WorkersCompensationCodeReference []WorkersCompensationCodeObjectType `xml:"urn:com.workday/bsvc Workers_Compensation_Code_Reference,omitempty"`
}

// Wrapper Element for Worker Compensation Code Data
type WorkersCompensationCodeResponseDataType struct {
	WorkersCompensationCode []WorkersCompensationCodeType `xml:"urn:com.workday/bsvc Workers_Compensation_Code,omitempty"`
}

// Element containing Worker Compensation Code response group options
type WorkersCompensationCodeResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Wrapper element that includes the Workers' Compensation Code instance set and data.
type WorkersCompensationCodeType struct {
	WorkersCompensationCodeReference *WorkersCompensationCodeObjectType `xml:"urn:com.workday/bsvc Workers_Compensation_Code_Reference,omitempty"`
	WorkersCompensationCodeData      *WorkersCompensationCodeDataType   `xml:"urn:com.workday/bsvc Workers_Compensation_Code_Data,omitempty"`
}

// Element containing Workers' Compensation Code data for a Job Profile.
type WorkersCompensationReplacementDataType struct {
	WorkersCompensationCodeReference *WorkersCompensationCodeObjectType `xml:"urn:com.workday/bsvc Workers_Compensation_Code_Reference,omitempty"`
}

// Contains each Worker based on the Request References or Request Criteria.  The data returned is the current information as of the dates in the response filter, and does not include all historical information about the worker.
type WorkersResponseDataType struct {
	Worker []WorkerType `xml:"urn:com.workday/bsvc Worker,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkingTimeUnitObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkingTimeUnitObjectType struct {
	ID         []WorkingTimeUnitObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                        `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Element containing all Team data.
type WorkteamDataType struct {
	Name                          string                          `xml:"urn:com.workday/bsvc Name"`
	Description                   string                          `xml:"urn:com.workday/bsvc Description,omitempty"`
	ID                            string                          `xml:"urn:com.workday/bsvc ID,omitempty"`
	WorkteamSystemSourceReference *ExternalSourceSystemObjectType `xml:"urn:com.workday/bsvc Workteam_System_Source_Reference,omitempty"`
	OrganizationSubtypeReference  *OrganizationSubtypeObjectType  `xml:"urn:com.workday/bsvc Organization_Subtype_Reference"`
	WorkteamMembershipData        []WorkteamMembershipDataType    `xml:"urn:com.workday/bsvc Workteam_Membership_Data,omitempty"`
}

// Information required for the workteam membership.
type WorkteamMembershipDataType struct {
	EffectiveDate                     *time.Time                          `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	WorkerReference                   *WorkerObjectType                   `xml:"urn:com.workday/bsvc Worker_Reference"`
	WorkteamMembershipStatusReference *WorkteamMembershipStatusObjectType `xml:"urn:com.workday/bsvc Workteam_Membership_Status_Reference,omitempty"`
	Delete                            bool                                `xml:"urn:com.workday/bsvc Delete,attr,omitempty"`
}

func (t *WorkteamMembershipDataType) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T WorkteamMembershipDataType
	var layout struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	layout.T = (*T)(t)
	layout.EffectiveDate = (*xsdDate)(layout.T.EffectiveDate)
	return e.EncodeElement(layout, start)
}
func (t *WorkteamMembershipDataType) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T WorkteamMembershipDataType
	var overlay struct {
		*T
		EffectiveDate *xsdDate `xml:"urn:com.workday/bsvc Effective_Date,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EffectiveDate = (*xsdDate)(overlay.T.EffectiveDate)
	return d.DecodeElement(&overlay, &start)
}

// Contains a unique identifier for an instance of an object.
type WorkteamMembershipStatusObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkteamMembershipStatusObjectType struct {
	ID         []WorkteamMembershipStatusObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type WorkteamObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type WorkteamObjectType struct {
	ID         []WorkteamObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                 `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

// Request Criteria
type WorkteamRequestCriteriaType struct {
}

// Get Workteam references.
type WorkteamRequestReferencesType struct {
	WorkteamReference []WorkteamObjectType `xml:"urn:com.workday/bsvc Workteam_Reference"`
}

// Get Workteam Response Data.
type WorkteamResponseDataType struct {
	Workteam []WorkteamType `xml:"urn:com.workday/bsvc Workteam,omitempty"`
}

// Workteam Response Group
type WorkteamResponseGroupType struct {
	IncludeReference *bool `xml:"urn:com.workday/bsvc Include_Reference,omitempty"`
}

// Get Workteam Response Data.
type WorkteamType struct {
	WorkteamReference *WorkteamObjectType `xml:"urn:com.workday/bsvc Workteam_Reference,omitempty"`
	WorkteamData      []WorkteamDataType  `xml:"urn:com.workday/bsvc Workteam_Data,omitempty"`
}

// Contains a unique identifier for an instance of an object.
type XMLNAMEUSInjuryIllnessTypeObjectIDType struct {
	Value string `xml:",chardata"`
	Type  string `xml:"urn:com.workday/bsvc type,attr"`
}

type XMLNAMEUSInjuryIllnessTypeObjectType struct {
	ID         []XMLNAMEUSInjuryIllnessTypeObjectIDType `xml:"urn:com.workday/bsvc ID,omitempty"`
	Descriptor string                                   `xml:"urn:com.workday/bsvc Descriptor,attr,omitempty"`
}

type xsdBase64Binary []byte

func (b *xsdBase64Binary) UnmarshalText(text []byte) (err error) {
	*b, err = base64.StdEncoding.DecodeString(string(text))
	return
}
func (b xsdBase64Binary) MarshalText() ([]byte, error) {
	var buf bytes.Buffer
	enc := base64.NewEncoder(base64.StdEncoding, &buf)
	enc.Write([]byte(b))
	enc.Close()
	return buf.Bytes(), nil
}

type xsdDate time.Time

func (t *xsdDate) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02")
}
func (t xsdDate) MarshalText() ([]byte, error) {
	return []byte((time.Time)(t).Format("2006-01-02")), nil
}
func (t xsdDate) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDate) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
func _unmarshalTime(text []byte, t *time.Time, format string) (err error) {
	s := string(bytes.TrimSpace(text))
	*t, err = time.Parse(format, s)
	if _, ok := err.(*time.ParseError); ok {
		*t, err = time.Parse(format+"Z07:00", s)
	}
	return err
}

type xsdDateTime time.Time

func (t *xsdDateTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "2006-01-02T15:04:05.999999999")
}
func (t xsdDateTime) MarshalText() ([]byte, error) {
	return []byte((time.Time)(t).Format("2006-01-02T15:04:05.999999999")), nil
}
func (t xsdDateTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdDateTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}

type xsdTime time.Time

func (t *xsdTime) UnmarshalText(text []byte) error {
	return _unmarshalTime(text, (*time.Time)(t), "15:04:05.999999999")
}
func (t xsdTime) MarshalText() ([]byte, error) {
	return []byte((time.Time)(t).Format("15:04:05.999999999")), nil
}
func (t xsdTime) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	if (time.Time)(t).IsZero() {
		return nil
	}
	m, err := t.MarshalText()
	if err != nil {
		return err
	}
	return e.EncodeElement(m, start)
}
func (t xsdTime) MarshalXMLAttr(name xml.Name) (xml.Attr, error) {
	if (time.Time)(t).IsZero() {
		return xml.Attr{}, nil
	}
	m, err := t.MarshalText()
	return xml.Attr{Name: name, Value: string(m)}, err
}
